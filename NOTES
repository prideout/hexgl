ChaseCamera, remove Trackball

Simulation: Fix distortion of ship etc

Simulation: boosterCheck

Download three files for each mesh via "createObjectURL"

Tools Branch

    ./meshindexer
    ./third_party

    git clone https://github.com/prideout/lightracer lightracer_tools
    cd lightracer_tools ; git checkout --orphan tools
    git rm -rf .

    For inspiration: https://github.com/prideout/clumpy

    This tool consumes binary files for positions, texture coordinates, and normals. It generates
    tangents and an index buffer, producing a single filamesh file.

    Usage: [vertices_path] [texcoords_path] [normals_path] [output_path]

    reports on welding results

        filamesh      main.cpp (for reference only)
        mikktspace    https://github.com/tcoppex/ext-mikktspace
        meshoptimizer https://github.com/zeux/meshoptimizer (do not use encoder)

Faster, more progressive loading
    Replace geometry with binary files
    Replace PNG with KTX
    Use bmp suffix on geo *and* on images to enable ZIP compression
    Use workers, or remove them

Audio

Implement game menu

Fork me ribbon (already exists in gh-pages)

get rid of math.ts?

fix culling issue

simplify Simulation

Filament Typescript annotation should allow glmatrix types, eg this is annoying:
    tcm.setTransform(inst, vehicleMatrix as unknown as number[]);

rm NOTES

---

Replace ship with hoverbike?
    http://xeogl.org/examples/#materials_specular_Hoverbike

// rotateAxis => transformDirection =>
//      vec3.transformQuat / vec3.transformMat4 / vec3.transformMat3
// rotateByAxis => mat4.fromRotation
// compose    => mat4.fromRotationTranslation
// decompose  => mat4.getRotation, mat4.getTranslation

---

var camera = new THREE.PerspectiveCamera( 70, ctx.width / ctx.height, 1, 60000 );

var ship = ctx.createMesh(scene, this.lib.get("geometries", "ship.feisar"), -1134*2, 10, -443*2, this.materials.ship);

var scene = new THREE.Scene();
scene.add( camera );
scene.add( new THREE.AmbientLight( ambient ) );

// SUN
var sun = new THREE.DirectionalLight( diffuse, 1.5, 30000 );
sun.position.set( -4000, 1200, 1800 );
sun.lookAt(new THREE.Vector3());

var track = ctx.createMesh(scene, this.lib.get("geometries", "track.cityscape"), 0, -5, 0, this.materials.track);

ctx.components.cameraChase = new bkcore.hexgl.CameraChase({
        target: ship,
        camera: camera,
        cameraCube: ctx.manager.get("sky").camera,
        lerp: 0.5,
        yoffset: 8.0,
        zoffset: 10.0,
        viewOffset: 10.0
    });

ShipControls has has collision and height maps

https://github.com/tapio/darkcorners/tree/master/assets/skyboxes/stormy-day

Give credit to tracks texture artist too
