!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";t.__esModule=!0,n(1);var i=n(2),r="syferfontein_18d_clear_2k",s=r+"_ibl"+Filament.getSupportedFormatSuffix("etc s3tc")+".ktx.bmp",o=r+"_skybox_tiny.ktx.bmp",a=r+"_skybox.ktx.bmp",c=function(){function e(e){var t=this;this.canvas=e,this.engine=Filament.Engine.create(e),this.scene=this.engine.createScene(),this.skybox=this.engine.createSkyFromKtx(o),this.scene.setSkybox(this.skybox),this.indirectLight=this.engine.createIblFromKtx(s),this.indirectLight.setIntensity(1e5),this.scene.setIndirectLight(this.indirectLight),this.swapChain=this.engine.createSwapChain(),this.renderer=this.engine.createRenderer(),this.camera=this.engine.createCamera(),this.view=this.engine.createView(),this.view.setCamera(this.camera),this.view.setScene(this.scene),Filament.fetch([a],function(){t.engine.destroySkybox(t.skybox),t.skybox=t.engine.createSkyFromKtx(a),t.scene.setSkybox(t.skybox)});this.camera.lookAt([0,0,4],[0,0,0],[0,1,0]),this.render=this.render.bind(this),this.resize=this.resize.bind(this),window.addEventListener("resize",this.resize),this.resize(),window.requestAnimationFrame(this.render)}return e.prototype.render=function(){this.renderer.render(this.swapChain,this.view),window.requestAnimationFrame(this.render)},e.prototype.resize=function(){var e=window.devicePixelRatio,t=this.canvas.width=window.innerWidth*e,n=this.canvas.height=window.innerHeight*e;this.view.setViewport([0,0,t,n]);var i=t/n,r=Filament.Camera$Fov,s=i<1?r.HORIZONTAL:r.VERTICAL;this.camera.setProjectionFov(45,i,1,10,s)},e}();Filament.init([o,s],function(){window.app=new c(document.getElementsByTagName("canvas")[0])}),i.createWorker(function(e,t){t(e.x+e.y)},function(e){console.log("We received this response from the worker: "+e)}).postMessage({x:5,y:5})},function(e,t){},function(e,t,n){"use strict";t.__esModule=!0;var i=n(3);t.createWorker=i.createWorker},function(e,t,n){"use strict";t.__esModule=!0,t.createWorker=function(e,t){return void 0===t&&(t=function(e){}),new i(e,t)};var i=function(){function e(e,t){void 0===t&&(t=function(e){});var n=this;this.workerFunction=e,this.onMessage=t;var i=new Blob(["self.onmessage=function(e){"+("("+e+").call(this, e.data, postMessage)")+"}"],{type:"application/javascript"});this._nativeWorker=new Worker(URL.createObjectURL(i)),this._nativeWorker.onmessage=function(e){n.onMessage(e.data)}}return e.prototype.postMessage=function(e,t){this._nativeWorker.postMessage(e,t)},e.prototype.terminate=function(){this._nativeWorker.terminate()},e}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,