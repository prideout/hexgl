{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/gl-matrix/lib/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix.js","webpack:///./src/filament.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/process/browser.js","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///./src/urls.ts","webpack:///./src/vehicle.ts","webpack:///./src/app.ts","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///external \"crypto\"","webpack:///./src/chasecam.ts","webpack:///./src/display.ts","webpack:///./src/sampler.ts","webpack:///./src/simulation.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","out","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","translate","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","x","y","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","floor","min","round","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","angle","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","forEach","stride","offset","count","fn","arg","length","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_random","u1","u2","u3","sqrt1MinusU1","sqrtU1","quat_invert","dot","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","quat_str","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","sqlerp","setAxes","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","a_dot_b","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","__webpack_exports__","common_namespaceObject","mat2_namespaceObject","mat2d_namespaceObject","mat3_namespaceObject","mat4_namespaceObject","quat_namespaceObject","quat2_namespaceObject","vec2_namespaceObject","vec3_namespaceObject","vec4_namespaceObject","Filament","Module","moduleOverrides","status","toThrow","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","window","importScripts","process","nodeFS","nodePath","scriptDirectory","locateFile","path","__dirname","filename","binary","ret","toString","buffer","Uint8Array","assert","replace","slice","ex","ExitStatus","reason","read","data","readbuffer","scriptArgs","arguments","quit","document","currentScript","src","self","location","href","indexOf","split","join","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","title","console","log","print","err","printErr","warn","undefined","STACK_ALIGN","staticAlloc","size","STATICTOP","dynamicAlloc","HEAP32","DYNAMICTOP_PTR","end","TOTAL_MEMORY","enlargeMemory","alignMemory","factor","getNativeTypeSize","bits","parseInt","substr","asm2wasmImports","f64-rem","debugger","ABORT","condition","text","abort","setValue","ptr","noSafe","charAt","HEAP8","HEAP16","tempI64","tempDouble","Math_abs","Math_min","Math_floor","Math_ceil","HEAPF32","HEAPF64","ALLOC_NORMAL","ALLOC_STATIC","ALLOC_NONE","allocate","slab","types","allocator","zeroinit","singleType","_malloc","stackAlloc","stop","subarray","HEAPU8","typeSize","previousType","curr","Pointer_stringify","hasUtf","String","fromCharCode","apply","UTF8ToString","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","endPtr","decode","u0","u4","ch","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","endIdx","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","stackTrace","js","Error","stack","e","jsStackTrace","HEAPU16","HEAPU32","STACK_BASE","STACKTOP","STACK_MAX","DYNAMIC_BASE","PAGE_SIZE","WASM_PAGE_SIZE","ASMJS_PAGE_SIZE","MIN_TOTAL_MEMORY","alignUp","multiple","updateGlobalBuffer","buf","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float64Array","PAGE_MULTIPLE","LIMIT","OLD_TOTAL_MEMORY","replacement","byteLength","ArrayBuffer","transfer","oldHEAP8","_emscripten_replace_memory","Function","getOwnPropertyDescriptor","TOTAL_STACK","callRuntimeCallbacks","callbacks","callback","shift","func","WebAssembly","Memory","initial","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATEXIT__","__ATPOSTRUN__","runtimeInitialized","Math_clz32","clz32","runDependencies","runDependencyWatcher","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","clearInterval","dataURIPrefix","isDataURI","startsWith","wasmTextFile","wasmBinaryFile","asmjsCodeFile","info","global","env","asm2wasm","parent","getBinary","doNativeWasm","providedBuffer","receiveInstance","instance","memory","newBuffer","oldBuffer","oldView","mergeMemory","NaN","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","Promise","resolve","reject","credentials","then","catch","instantiate","instantiateStreaming","asmjsReallocBuffer","finalMethod","oldSize","grow","wasmReallocBuffer","TABLE_SIZE","MAX_TABLE_SIZE","Table","maximum","element","integrateWasmJS","STATIC_BASE","push","__GLOBAL__sub_I_jsenums_cpp","__GLOBAL__sub_I_jsbindings_cpp","__GLOBAL__sub_I_Engine_cpp","__GLOBAL__sub_I_gl_headers_cpp","__GLOBAL__sub_I_bind_cpp","tempDoublePtr","__ZSt18uncaught_exceptionv","uncaught_exception","EXCEPTIONS","last","caught","infos","deAdjust","adjusted","addRef","refcount","decRef","rethrown","destructor","___cxa_free_exception","clearRef","ERRNO_CODES","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","EWOULDBLOCK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EDEADLK","ENOLCK","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EDEADLOCK","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","ENOSYS","ENOTEMPTY","ENAMETOOLONG","ELOOP","EOPNOTSUPP","EPFNOSUPPORT","ECONNRESET","ENOBUFS","EAFNOSUPPORT","EPROTOTYPE","ENOTSOCK","ENOPROTOOPT","ESHUTDOWN","ECONNREFUSED","EADDRINUSE","ECONNABORTED","ENETUNREACH","ENETDOWN","ETIMEDOUT","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EALREADY","EDESTADDRREQ","EMSGSIZE","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EADDRNOTAVAIL","ENETRESET","EISCONN","ENOTCONN","ETOOMANYREFS","EUSERS","EDQUOT","ESTALE","ENOTSUP","ENOMEDIUM","EILSEQ","EOVERFLOW","ECANCELED","ENOTRECOVERABLE","EOWNERDEAD","ESTRPIPE","ERRNO_MESSAGES","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","122","123","125","130","131","___setErrNo","PATH","splitPath","exec","normalizeArray","parts","allowAboveRoot","splice","unshift","isAbsolute","trailingSlash","filter","dirname","result","root","dir","basename","lastSlash","lastIndexOf","extname","paths","join2","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","fromParts","toParts","samePartsLength","outputParts","concat","TTY","ttys","init","shutdown","register","dev","ops","input","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","flush","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","Buffer","isPosixPlatform","platform","fd","stdin","usingDevice","fs","openSync","readSync","closeSync","prompt","readline","intArrayFromString","val","default_tty1_ops","MEMFS","ops_table","mount","createNode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","IDBFS","dbs","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_VERSION","DB_STORE_NAME","syncfs","populate","getLocalSet","local","getRemoteSet","remote","dst","reconcile","getDB","req","db","onupgradeneeded","fileStore","transaction","objectStoreNames","contains","objectStore","createObjectStore","indexNames","createIndex","unique","onsuccess","this","error","preventDefault","isRealDir","toAbsolute","check","mountpoint","map","stat","pop","index","openKeyCursor","event","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","mkdir","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","put","removeRemoteEntry","delete","total","keys","e2","remove","completed","done","errored","sort","reverse","NODEFS","isWindows","staticInit","match","flagsForNodeMap","1024","128","4096","512","bufferFrom","arrayBuffer","alloc","getMode","opts","lstatSync","code","realPath","flagsForNode","newFlags","chmodSync","date","utimesSync","truncateSync","mkdirSync","writeFileSync","oldNode","newDir","newName","oldPath","newPath","renameSync","unlinkSync","rmdirSync","readdirSync","symlinkSync","readlinkSync","NODEJS_PATH","nfd","writeSync","fstatSync","WORKERFS","DIR_MODE","FILE_MODE","reader","FileReaderSync","createdParents","ensureParent","base","lastModifiedDate","obj","pack","files","getTime","chunk","readAsArrayBuffer","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","handleFSError","errno","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","mayLookup","nodeName","FSNode","defineProperties","isFolder","isDevice","destroyNode","isSocket","flagModes","rs","r+","xw","w+","wx+","xw+","xa","a+","ax+","xa+","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","pseudo","mountRoot","unmount","next","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","message","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","createDevice","createSpecialDirectories","createStandardStreams","stdout","stderr","ensureErrnoError","setErrno","writable","constructor","fflush","canRead","canWrite","joinPath","forceRelative","absolutePath","standardizePath","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createFolder","createPath","part","createFile","properties","createDataFile","createLink","forceLoadFile","success","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","handled","plugin","asyncLoad","DB_NAME","pathname","saveFilesToDB","openRequest","ok","fail","putRequest","loadFilesFromDB","getRequest","SYSCALLS","DEFAULT_POLLMASK","mappings","umask","calculateAt","dirfd","dirstream","doStat","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","doWritev","varargs","getStr","getStreamFromFD","getSocketFromFD","socket","SOCKFS","getSocket","getSocketAddress","allowNull","addrp","addrlen","__read_sockaddr","DNS","lookup_addr","get64","low","high","getZero","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","shallowCopyInternalPointer","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","ClassHandle_clone","getPrototypeOf","runDestructor","handle","rawDestructor","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","destructorFunction","replacePublicSymbol","embind__requireFunction","signature","rawFunction","fp","FUNCTION_TABLE","dc","dynCall","args","makeDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","unboundTypes","seen","visit","new_","argumentList","dummy","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","heap32VectorToArray","firstElement","array","validateThis","this_","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","enumReadValueFromPointer","signed","heap","requireRegisteredType","impl","floatReadValueFromPointer","integerReadValueFromPointer","requireHandle","emval_symbols","getStringOrSymbol","address","symbol","_emscripten_get_now","_emscripten_get_now_is_monotonic","dateNow","_emscripten_set_main_loop_timing","mainLoop","timingMode","timingValue","scheduler","timeUntilNextTick","tickStartTime","setTimeout","runner","method","requestAnimationFrame","setImmediate","setImmediates","emscriptenMainLoopMessageId","addEventListener","stopPropagation","postMessage","_emscripten_set_main_loop","fps","simulateInfiniteLoop","noSetTiming","browserIterationFunc","thisMainLoopId","currentlyRunningMainloop","queue","blocker","remainingBlockers","remaining","counted","updateStatus","currentFrameNumber","ctx","runIter","SDL","audio","queueNewAudioData","pause","resume","expected","expectedBlockers","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","canHandle","test","getMimetype","warnOnce","shown","bb","append","getBlob","createObjectURL","img","Image","complete","canvas","createElement","getContext","drawImage","revokeObjectURL","audioPlugin","noAudioDecoding",".ogg",".wav",".mp3","Audio","BASE","leftchar","leftbits","PAD","encode64","safeSetTimeout","requestPointerLock","exitPointerLock","pointerLockChange","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","attribute","GL","GLctx","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","vrDevice","fullscreenChange","canvasContainer","parentNode","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","insertBefore","removeChild","setWindowedCanvasSize","appendChild","Element","vrDisplay","requestFullScreen","nextRAF","fakeRequestAnimationFrame","delay","safeCallback","allowAsyncCallbacks","queuedAsyncCallbacks","pauseAsyncCallbacks","resumeAsyncCallbacks","safeRequestAnimationFrame","timeout","safeSetInterval","setInterval","jpg","jpeg","png","bmp","ogg","wav","mp3","getUserMedia","navigator","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseEvent","rect","getBoundingClientRect","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","pageX","adjustedY","pageY","coords","identifier","noRunDep","dep","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","screen","wNative","hNative","widthNative","heightNative","h","style","removeProperty","setProperty","wgetRequests","nextWgetRequestHandle","getNextWgetRequestHandle","counter","lastError","buffers","mappedBuffers","programs","framebuffers","renderbuffers","textures","uniforms","shaders","vaos","contexts","currentContext","offscreenCanvases","timerQueriesEXT","queries","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","programInfos","stringCache","stringiCache","tempFixedLengthArray","packAlignment","unpackAlignment","miniTempBuffer","MINI_TEMP_BUFFER_SIZE","miniTempBufferViews","recordError","errorCode","getNewId","table","getSource","shader","string","source","frag","WebGL2RenderingContext","errorInfo","onContextCreationError","statusMessage","majorVersion","minorVersion","removeEventListener","JSON","stringify","registerContext","context","attributes","version","getChromeVersion","raw","userAgent","supportsWebGL2EntryPoints","GLctxObject","initExtensions","deleteContext","JSEvents","removeAllHandlersOnTarget","initExtensionsDone","maxVertexAttribs","getParameter","MAX_VERTEX_ATTRIBS","instancedArraysExt","getExtension","divisor","first","primcount","indices","vaoExt","vao","drawBuffersExt","bufs","disjointTimerQueryExt","automaticallyEnabledExtensions","exts","getSupportedExtensions","ext","populateUniformTable","program","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","ptable","utable","numUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","ls","loc","getUniformLocation","_emscripten_glDrawElements","drawElements","emscriptenWebGLGet","name_","WebGLBuffer","WebGLProgram","WebGLFramebuffer","WebGLRenderbuffer","WebGLQuery","WebGLSampler","WebGLSync","WebGLTransformFeedback","WebGLVertexArrayObject","WebGLTexture","emscriptenWebGLGetIndexed","emscriptenWebGLGetUniform","params","getUniform","emscriptenWebGLGetVertexAttrib","pname","getVertexAttrib","fround","emscriptenWebGLComputeImageSize","sizePerPixel","alignment","plainRowSize","alignedRowSize","emscriptenWebGLGetTexPixelData","format","pixels","internalFormat","numChannels","bytes","emscriptenWebGLGetHeapForType","emscriptenWebGLGetShiftForType","_llvm_ceil_f32","_llvm_cttz_i32","_llvm_exp2_f32","_llvm_fabs_f32","_llvm_floor_f32","PTHREAD_SPECIFIC","PTHREAD_SPECIFIC_NEXT_KEY","performance","stringy","dontAddNull","u8array","numBytesWritten","asmGlobalArg","asmLibraryArg","getTotalMemory","abortOnCannotGrowMemory","invoke_fi","sp","stackSave","stackRestore","invoke_fii","invoke_i","invoke_ii","invoke_iif","invoke_iiff","invoke_iii","invoke_iiif","invoke_iiiff","invoke_iiii","invoke_iiiii","invoke_iiiiii","invoke_iiiiiii","invoke_iiiiiiii","invoke_iiij","invoke_jii","invoke_v","invoke_vd","invoke_vdd","invoke_vdddddd","invoke_vf","invoke_vff","invoke_vffff","invoke_vfi","invoke_vi","invoke_viddddi","invoke_vif","invoke_viff","invoke_vifff","invoke_viffff","invoke_vii","invoke_viidddddd","invoke_viiddddi","invoke_viif","invoke_viiff","invoke_viifff","invoke_viifi","invoke_viii","invoke_viiidddddd","invoke_viiif","invoke_viiii","invoke_viiiii","invoke_viiiiii","invoke_viiiiiii","invoke_viiiiiiii","invoke_viiiiiiiii","invoke_viiiiiiiiii","invoke_viiiiiiiiiii","invoke_vij","___atomic_compare_exchange_8","desiredl","desiredh","weak","success_memmodel","failure_memmodel","pl","ph","el","eh","___cxa_begin_catch","___cxa_find_matching_catch","thrown","setTempRet0","throwntype","typeArray","___cxa_pure_virtual","___gxx_personality_v0","___resumeException","___syscall140","which","offset_low","___syscall146","___syscall221","___syscall3","___syscall5","___syscall54","op","argp","___syscall6","__embind_finalize_value_array","rawTupleType","reg","elements","elementsLength","elementTypes","elt","getterReturnType","setterArgumentType","getterContext","setter","setterContext","fromWireType","toWireType","argPackAdvance","readValueFromPointer","__embind_register_bool","trueValue","falseValue","wt","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","__embind_register_class_class_function","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","rawArgTypes","unboundTypesHandler","invokerArgsArray","__embind_register_class_constructor","invoker","__embind_register_class_function","isPureVirtual","className","memberFunction","__embind_register_class_property","fieldName","getterSignature","setterSignature","desc","configurable","__embind_register_emval","__embind_register_enum","isSigned","ctor","values","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","__embind_register_float","__embind_register_function","__embind_register_integer","primitiveType","minRange","maxRange","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","getHeap","HEAP","__embind_register_value_array","constructorSignature","__embind_register_value_array_element","__embind_register_void","isVoid","__emval_as","returnType","destructorsRef","rd","__emval_get_property","__emval_incref","__emval_new_cstring","__emval_run_destructors","__emval_take_value","argv","_abort","_clock_gettime","clk_id","tp","_eglGetProcAddress","_emscripten_GetProcAddress","_emscripten_glActiveTexture","_emscripten_glAttachShader","attachShader","_emscripten_glBeginConditionalRender","_emscripten_glBeginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","bufferObj","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","bindBuffer","_emscripten_glBindBufferBase","_emscripten_glBindBufferRange","ptrsize","_emscripten_glBindFragDataLocation","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindProgramARB","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindVertexArray","_emscripten_glBlendColor","x3","_emscripten_glBlendEquation","_emscripten_glBlendEquationSeparate","_emscripten_glBlendFunc","_emscripten_glBlendFuncSeparate","_emscripten_glBufferData","usage","bufferData","_emscripten_glBufferSubData","bufferSubData","_emscripten_glCheckFramebufferStatus","_emscripten_glClampColor","_emscripten_glClear","_emscripten_glClearBufferfi","_emscripten_glClearBufferfv","drawbuffer","_emscripten_glClearBufferiv","_emscripten_glClearBufferuiv","_emscripten_glClearColor","_emscripten_glClearDepth","_emscripten_glClearDepthf","_emscripten_glClearStencil","_emscripten_glClientActiveTexture","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glColorMaski","_emscripten_glColorPointer","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","border","imageSize","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","_emscripten_glCopyTexImage2D","x4","x5","x6","x7","_emscripten_glCopyTexSubImage2D","_emscripten_glCreateProgram","createProgram","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","_emscripten_glDeleteBuffers","deleteBuffer","currArrayBuffer","currElementArrayBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteObjectARB","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteVertexArrays","_emscripten_glDepthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRange","_emscripten_glDepthRangef","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDisablei","_emscripten_glDrawArrays","drawArrays","_emscripten_glDrawArraysInstanced","_emscripten_glDrawBuffers","bufArray","_emscripten_glDrawElementsInstanced","_emscripten_glDrawRangeElements","_emscripten_glEnable","_emscripten_glEnableClientState","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEnablei","_emscripten_glEndConditionalRender","_emscripten_glEndTransformFeedback","_emscripten_glFinish","_emscripten_glFlush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFrontFace","_emscripten_glFrustum","_emscripten_glGenBuffers","createBuffer","_emscripten_glGenFramebuffers","ids","createFramebuffer","_emscripten_glGenRenderbuffers","createRenderbuffer","_emscripten_glGenTextures","createTexture","_emscripten_glGenVertexArrays","arrays","_emscripten_glGenerateMipmap","_emscripten_glGetActiveAttrib","bufSize","getActiveAttrib","numBytesWrittenExclNull","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","_emscripten_glGetActiveUniformBlockiv","_emscripten_glGetActiveUniformName","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","_emscripten_glGetBooleani_v","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteriv","getBufferParameter","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","_emscripten_glGetInfoLogARB","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetObjectParameterivARB","_emscripten_glGetPointerv","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","numAttribs","ACTIVE_ATTRIBUTES","activeAttrib","numBlocks","ACTIVE_UNIFORM_BLOCKS","activeBlockName","getActiveUniformBlockName","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","sourceLength","getShaderParameter","_emscripten_glGetString","glVersion","VERSION","gl_exts","glslVersion","SHADING_LANGUAGE_VERSION","ver_num","_emscripten_glGetStringi","_emscripten_glGetTexParameterIiv","_emscripten_glGetTexParameterIuiv","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","_emscripten_glGetUniformLocation","arrayOffset","arrayIndex","uniformInfo","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","_emscripten_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","_emscripten_glIsEnabledi","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsShader","isShader","_emscripten_glIsTexture","isTexture","_emscripten_glIsVertexArray","_emscripten_glLineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glLoadIdentity","_emscripten_glLoadMatrixf","_emscripten_glMatrixMode","_emscripten_glNormalPointer","_emscripten_glPixelStorei","param","pixelStorei","_emscripten_glPolygonOffset","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","_emscripten_glRotatef","_emscripten_glSampleCoverage","sampleCoverage","_emscripten_glScissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","_emscripten_glStencilFuncSeparate","_emscripten_glStencilMask","_emscripten_glStencilMaskSeparate","_emscripten_glStencilOp","_emscripten_glStencilOpSeparate","_emscripten_glTexCoordPointer","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","depth","_emscripten_glTexParameterIiv","_emscripten_glTexParameterIuiv","_emscripten_glTexParameterf","_emscripten_glTexParameterfv","texParameterf","_emscripten_glTexParameteri","_emscripten_glTexParameteriv","texParameteri","_emscripten_glTexStorage2D","_emscripten_glTexStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","zoffset","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","_emscripten_glUniform1f","uniform1f","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform2f","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform3f","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform4f","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","uniformMatrix2fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","_emscripten_glVertexAttrib1fv","vertexAttrib1f","_emscripten_glVertexAttrib2f","_emscripten_glVertexAttrib2fv","vertexAttrib2f","_emscripten_glVertexAttrib3f","_emscripten_glVertexAttrib3fv","vertexAttrib3f","_emscripten_glVertexAttrib4f","_emscripten_glVertexAttrib4fv","vertexAttrib4f","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribI1i","_emscripten_glVertexAttribI1iv","_emscripten_glVertexAttribI1ui","_emscripten_glVertexAttribI1uiv","_emscripten_glVertexAttribI2i","_emscripten_glVertexAttribI2iv","_emscripten_glVertexAttribI2ui","_emscripten_glVertexAttribI2uiv","_emscripten_glVertexAttribI3i","_emscripten_glVertexAttribI3iv","_emscripten_glVertexAttribI3ui","_emscripten_glVertexAttribI3uiv","_emscripten_glVertexAttribI4bv","_emscripten_glVertexAttribI4i","_emscripten_glVertexAttribI4iv","vertexAttribI4i","_emscripten_glVertexAttribI4sv","_emscripten_glVertexAttribI4ubv","_emscripten_glVertexAttribI4ui","_emscripten_glVertexAttribI4uiv","vertexAttribI4ui","_emscripten_glVertexAttribI4usv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","normalized","vertexAttribPointer","_emscripten_glVertexPointer","_emscripten_glViewport","_emscripten_memcpy_big","dest","num","_glActiveTexture","_glAttachShader","_glBindBuffer","_glBindBufferRange","_glBindFramebuffer","_glBindRenderbuffer","_glBindSampler","unit","sampler","_glBindTexture","_glBindVertexArray","_glBlendEquationSeparate","_glBlendFuncSeparate","_glBlitFramebuffer","x8","x9","_glBufferData","_glBufferSubData","_glClear","_glClearColor","_glClearDepthf","_glClearStencil","_glColorMask","_glCompileShader","_glCompressedTexSubImage2D","_glCreateProgram","_glCreateShader","_glCullFace","_glDeleteBuffers","_glDeleteFramebuffers","_glDeleteProgram","_glDeleteRenderbuffers","_glDeleteSamplers","_glDeleteShader","_glDeleteSync","sync","deleteSync","_glDeleteTextures","_glDeleteVertexArrays","_glDepthFunc","_glDepthMask","_glDetachShader","_glDisable","_glDisableVertexAttribArray","_glDrawArrays","_glDrawRangeElements","_glEnable","_glEnableVertexAttribArray","_glFenceSync","fenceSync","_glFlush","_glFramebufferRenderbuffer","_glFramebufferTexture2D","_glFrontFace","_glGenBuffers","_glGenFramebuffers","_glGenRenderbuffers","_glGenSamplers","_glGenTextures","_glGenVertexArrays","_glGenerateMipmap","_glGetError","_glGetFloatv","_glGetIntegerv","_glGetProgramInfoLog","_glGetProgramiv","_glGetShaderInfoLog","_glGetShaderiv","_glGetString","_glGetStringi","_glGetUniformBlockIndex","_glGetUniformLocation","_glGetVertexAttribiv","_glHint","_glInvalidateFramebuffer","numAttachments","attachments","list","_glInvalidateSubFramebuffer","_glIsEnabled","_glLinkProgram","_glPixelStorei","_glPolygonOffset","_glReadPixels","_glRenderbufferStorage","_glRenderbufferStorageMultisample","_glSamplerParameteri","_glScissor","_glShaderSource","_glTexParameteri","_glTexStorage2D","_glTexStorage2DMultisample","_glTexStorage3D","_glTexSubImage2D","_glUniform1f","_glUniform1i","_glUniform4f","_glUniformBlockBinding","_glUseProgram","_glVertexAttribIPointer","_glVertexAttribPointer","_glViewport","_glWaitSync","timeoutLo","timeoutHi","waitSync","_llvm_cttz_i64","_llvm_exp2_f64","_llvm_log2_f32","LN2","_llvm_trap","_pthread_cond_destroy","_pthread_cond_signal","_pthread_cond_timedwait","_pthread_cond_wait","_pthread_create","_pthread_getspecific","_pthread_join","_pthread_key_create","_pthread_mutex_destroy","_pthread_once","_pthread_setspecific","_sysconf","asm","run","doRun","postRun","preRun","what","runCaller","getBufferDescriptor","assets","remainingInitializationTasks","onready","onReady","glMatrix","loadMathExtensions","loadClassExtensions","onDone","onFetched","remainingAssets","lower","toLowerCase","endsWith","decoding","Engine","assign","_create","createMaterial","_createMaterial","createTextureFromKtx","_createTextureFromKtx","createIblFromKtx","_createIblFromKtx","createSkyFromKtx","rgbm","skytex","Skybox","Builder","environment","build","createTextureFromPng","_createTextureFromPng","createTextureFromJpeg","image","_createTextureFromJpeg","loadFilamesh","definstance","matinstances","_loadFilamesh","VertexBuffer","setBufferAt","engine","bufferIndex","_setBufferAt","IndexBuffer","setBuffer","_setBuffer","RenderableManager$Builder","LightManager$Builder","entity","_build","VertexBuffer$Builder","IndexBuffer$Builder","Texture$Builder","IndirectLight$Builder","Skybox$Builder","KtxBundle","blob","_getBlob","getBytes","getCubeBlob","miplevel","_getCubeBlob","Texture","setImage","pbd","_setImage","setImageCube","_setImageCube","typedarray","ta","bd","driver$BufferDescriptor","uint8array","PixelBuffer","datatype","driver$PixelBufferDescriptor","CompressedPixelBuffer","cdatatype","faceSize","registry","MeshReader$MaterialRegistry","mesh","MeshReader","loadMeshFromBuffer","minstance","renderable","vertexBuffer","indexBuffer","IcoSphere","nsubdivs","X","Z","vertices","triangles","subdivide","nverts","tangents","vec3","quat","vec4","packSnorm16","srctris","srcverts","nsrctris","ndsttris","nsrcverts","ndstverts","dsttris","dstverts","srcind","dstind","i3","i4","i5","tri","i0","i1","i2","v5","least","most","fromRotationZ","mat3","radians","mat4","ktxdata","ktx","srgb","KtxUtility$createTexture","iblktx","ibltex","shfloats","getMetadata","parseFloat","IndirectLight","reflections","irradianceSh","pngdata","Sampler","Texture$Sampler","TextureFormat","Texture$InternalFormat","PixelDataFormat","noalpha","nomips","decodedpng","decodePng","texformat","pbformat","pbtype","SRGB8","RGB8","RGB","PixelDataType","UBYTE","SRGB8_A8","RGBA8","RGBM","RGBA","tex","levels","SAMPLER_2D","pixelbuffer","generateMipmaps","context2d","globalCompositeOperation","imgdata","getImageData","decodedjpeg","TF","getSupportedFormats","supportedFormats","s3tc","astc","etc","nexts","getSupportedFormatSuffix","desiredFormats","includes","g","eval","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","noop","nextTick","browser","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","iblSuffix","environ","ibl","skySmall","skyLarge","nonlitMaterial","pbrMaterial","texMaterial","diffuse","specular","normal","collision","elevation","gl_matrix_1","Vehicle","orientation","matrix","temp","getMatrix","urls","chasecam_1","display_1","sampler_1","simulation_1","vehicle_1","initialVehiclePosition","initialAssets","App","getElementsByTagName","vehicle","simulation","display","chasecam","camera","tick","time","getNormalizedSpeed","render","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","that","RangeError","__proto__","encodingOrOffset","allocUnsafe","fromArrayLike","fromArrayBuffer","isEncoding","actual","fromString","checked","fromObject","assertSize","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","isNaN","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","foo","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","toHex","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","encodeChunk","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","scope","Timeout","clearFn","_id","_clearFn","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","runIfPresent","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","documentElement","script","onreadystatechange","attachEvent","task","ChaseCamera","speedOffset","speedOffsetMax","targetYoffset","speed","cameraPos","targetPos","Display","_this","scene","createScene","skybox","setSkybox","indirectLight","setIntensity","setIndirectLight","swapChain","createSwapChain","renderer","createRenderer","createCamera","createView","setCamera","setScene","TextureSampler","MinFilter","LINEAR_MIPMAP_LINEAR","MagFilter","LINEAR","WrapMode","REPEAT","addEntity","getRenderableCount","destroySkybox","filenames","shipUrls","shipmi","createInstance","ship","createRenderable","bgasset","bgurls","bgmi","_i","_a","_b","_c","setFloat4Parameter","albedo","setTextureParameter","sunlight","EntityManager","LightManager","LightManager$Type","SUN","color","castShadows","intensity","direction","resize","tcm","getTransformManager","inst","getInstance","setTransform","dpr","devicePixelRatio","innerWidth","innerHeight","setViewport","Fov","Camera$Fov","HORIZONTAL","VERTICAL","setProjectionFov","matinstance","clearCoat","setFloatParameter","rm","getRenderableManager","setCastShadows","setReceiveShadows","ready","getPixel","getPixelBilinear","fx","fy","rx","ry","dx","dy","cxy","cf1","cf2","getPixelF","getPixelFBilinear","Simulation","simvehicle","gfxvehicle","keyState","backward","forward","ltrigger","rtrigger","use","onKeyDown","onKeyUp","maxSpeed","boosterSpeed","destroyed","falling","movement","roll","rollAxis","drift","shieldDelay","speedRatio","boost","shield","yawAngle","quaternion","collisionPixelRatio","collisionDetection","collisionPreviousPosition","heightPixelRatio","heightBias","heightLerp","heightScale","rollAngle","rollLerp","rollDirection","gradient","gradientTarget","gradientLerp","gradientScale","gradientVector","tilt","tiltTarget","tiltLerp","tiltScale","tiltVector","repulsionVLeft","repulsionVRight","repulsionVFront","repulsionVScale","repulsionAmount","repulsionForce","collisionState","front","fallVector","driftLerp","yawAngleLerp","vepsilon","rollAmount","yawAngleAmount","yawAngleSpeed","thrust","airResist","airAngularSpeed","airBrake","airDrift","zero3","repulsionLerp","boosterCheck","heightCheck","collisionCheck","degrees","xform","gradientDelta","epsilon","gradientAxis","tiltDelta","tiltAxis","rollDelta","keyCode","simpos","simquat","sr","getRealSpeed","shieldDamage","lPos","rPos","lCol","rCol","repulsionCap","repulsionRatio","collisionSpeedDecrease","collisionSpeedDecreaseCoef","boosterDecay","nheight","atan2"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,s0aC5EO,IAAAC,EAAA,KACAC,EAAA,oBAAAC,0BAAAC,MACAC,EAAAC,KAAAC,OAOA,SAAAC,EAAAC,GACPP,EAAAO,EAGA,IAAAC,EAAAJ,KAAAK,GAAA,IAOO,SAAAC,EAAAC,GACP,OAAAA,EAAAH,EAYO,SAAAI,EAAAD,EAAAE,GACP,OAAAT,KAAAU,IAAAH,EAAAE,IAAAd,EAAAK,KAAAW,IAAA,EAAAX,KAAAU,IAAAH,GAAAP,KAAAU,IAAAD,IC5BO,SAAAxB,IACP,IAAA2B,EAAA,IAAgBhB,EAAmB,GAOnC,OANMA,GAAmBC,eACzBe,EAAA,KACAA,EAAA,MAEAA,EAAA,KACAA,EAAA,KACAA,EASO,SAAAC,EAAAN,GACP,IAAAK,EAAA,IAAgBhB,EAAmB,GAKnC,OAJAgB,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAUO,SAAAE,EAAAF,EAAAL,GAKP,OAJAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EASO,SAAAG,EAAAH,GAKP,OAJAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAYO,SAAAI,EAAAC,EAAAC,EAAAC,EAAAC,GACP,IAAAR,EAAA,IAAgBhB,EAAmB,GAKnC,OAJAgB,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAAO,EACAP,EAAA,GAAAQ,EACAR,EAaO,SAAAS,EAAAT,EAAAK,EAAAC,EAAAC,EAAAC,GAKP,OAJAR,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAAO,EACAP,EAAA,GAAAQ,EACAR,EAUO,SAAAU,EAAAV,EAAAL,GAGP,GAAAK,IAAAL,EAAA,CACA,IAAAgB,EAAAhB,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAW,OAEAX,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GAGA,OAAAK,EAUO,SAAAY,EAAAZ,EAAAL,GACP,IAAAkB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GAGAqB,EAAAH,EAAAE,EAAAD,EAAAH,EAEA,OAAAK,GAGAA,EAAA,EAAAA,EAEAhB,EAAA,GAAAe,EAAAC,EACAhB,EAAA,IAAAW,EAAAK,EACAhB,EAAA,IAAAc,EAAAE,EACAhB,EAAA,GAAAa,EAAAG,EAEAhB,GATA,KAmBO,SAAAiB,EAAAjB,EAAAL,GAEP,IAAAkB,EAAAlB,EAAA,GAMA,OALAK,EAAA,GAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,GAAAa,EAEAb,EASO,SAAAkB,EAAAvB,GACP,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAWO,SAAAwB,EAAAnB,EAAAL,EAAAE,GACP,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GAKA,OAJAG,EAAA,GAAAa,EAAAO,EAAAN,EAAAO,EACArB,EAAA,GAAAW,EAAAS,EAAAL,EAAAM,EACArB,EAAA,GAAAa,EAAAS,EAAAR,EAAAS,EACAvB,EAAA,GAAAW,EAAAW,EAAAP,EAAAQ,EACAvB,EAWO,SAAAwB,EAAAxB,EAAAL,EAAA8B,GACP,IAAAZ,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAb,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAKA,OAJAzB,EAAA,GAAAa,EAAAzD,EAAA0D,EAAAhC,EACAkB,EAAA,GAAAW,EAAAvD,EAAA2D,EAAAjC,EACAkB,EAAA,GAAAa,GAAA/B,EAAAgC,EAAA1D,EACA4C,EAAA,GAAAW,GAAA7B,EAAAiC,EAAA3D,EACA4C,EAWO,SAAS4B,EAAK5B,EAAAL,EAAAkC,GACrB,IAAAhB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAmC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAKA,OAJA7B,EAAA,GAAAa,EAAAiB,EACA9B,EAAA,GAAAW,EAAAmB,EACA9B,EAAA,GAAAc,EAAAiB,EACA/B,EAAA,GAAAe,EAAAgB,EACA/B,EAcO,SAAAgC,EAAAhC,EAAAyB,GACP,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAKA,OAJAzB,EAAA,GAAA5C,EACA4C,EAAA,GAAAlB,EACAkB,EAAA,IAAAlB,EACAkB,EAAA,GAAA5C,EACA4C,EAcO,SAAAiC,EAAAjC,EAAA6B,GAKP,OAJA7B,EAAA,GAAA6B,EAAA,GACA7B,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA6B,EAAA,GACA7B,EASO,SAAAkC,EAAAvC,GACP,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OASO,SAAAwC,EAAAxC,GACP,OAAAP,KAAAgD,KAAAhD,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,OAWO,SAAA2C,EAAAC,EAAAC,EAAAC,EAAA9C,GAKP,OAJA4C,EAAA,GAAA5C,EAAA,GAAAA,EAAA,GACA8C,EAAA,GAAA9C,EAAA,GACA8C,EAAA,GAAA9C,EAAA,GACA8C,EAAA,GAAA9C,EAAA,GAAA4C,EAAA,GAAAE,EAAA,GACA,CAAAF,EAAAC,EAAAC,GAWO,SAAAC,EAAA1C,EAAAL,EAAAE,GAKP,OAJAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAAA2C,EAAA3C,EAAAL,EAAAE,GAKP,OAJAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAUO,SAAA4C,EAAAjD,EAAAE,GACP,OAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,GAUO,SAASgD,EAAMlD,EAAAE,GACtB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACA,OAAAT,KAAAU,IAAAe,EAAAO,IAA8BrC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAe,GAAAzB,KAAAU,IAAAsB,KAAAhC,KAAAU,IAAAa,EAAAU,IAAqEtC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAa,GAAAvB,KAAAU,IAAAuB,KAAAjC,KAAAU,IAAAgB,EAAAQ,IAAqEvC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgB,GAAA1B,KAAAU,IAAAwB,KAAAlC,KAAAU,IAAAiB,EAAAQ,IAAqExC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiB,GAAA3B,KAAAU,IAAAyB,IAWtS,SAAAuB,EAAA9C,EAAAL,EAAAE,GAKP,OAJAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAYO,SAAA+C,EAAA/C,EAAAL,EAAAE,EAAAmD,GAKP,OAJAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAOO,IAAAiD,EAAA9B,EAMA+B,EAAAP,ECvZA,SAASQ,IAChB,IAAAnD,EAAA,IAAgBhB,EAAmB,GASnC,OARMA,GAAmBC,eACzBe,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAA,EAAA,KACAA,EAAA,KACAA,EASO,SAASoD,EAAKzD,GACrB,IAAAK,EAAA,IAAgBhB,EAAmB,GAOnC,OANAgB,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAUO,SAASqD,EAAIrD,EAAAL,GAOpB,OANAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EASO,SAASsD,EAAQtD,GAOxB,OANAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAcO,SAASuD,EAAU5D,EAAAE,EAAAzC,EAAAC,EAAAmG,EAAAC,GAC1B,IAAAzD,EAAA,IAAgBhB,EAAmB,GAOnC,OANAgB,EAAA,GAAAL,EACAK,EAAA,GAAAH,EACAG,EAAA,GAAA5C,EACA4C,EAAA,GAAA3C,EACA2C,EAAA,GAAAwD,EACAxD,EAAA,GAAAyD,EACAzD,EAeO,SAAS0D,EAAG1D,EAAAL,EAAAE,EAAAzC,EAAAC,EAAAmG,EAAAC,GAOnB,OANAzD,EAAA,GAAAL,EACAK,EAAA,GAAAH,EACAG,EAAA,GAAA5C,EACA4C,EAAA,GAAA3C,EACA2C,EAAA,GAAAwD,EACAxD,EAAA,GAAAyD,EACAzD,EAUO,SAAS2D,EAAM3D,EAAAL,GACtB,IAAAiE,EAAAjE,EAAA,GACAkE,EAAAlE,EAAA,GACAmE,EAAAnE,EAAA,GACAoE,EAAApE,EAAA,GACAqE,EAAArE,EAAA,GACAsE,EAAAtE,EAAA,GAEAqB,EAAA4C,EAAAG,EAAAF,EAAAC,EACA,OAAA9C,GAGAA,EAAA,EAAAA,EAEAhB,EAAA,GAAA+D,EAAA/C,EACAhB,EAAA,IAAA6D,EAAA7C,EACAhB,EAAA,IAAA8D,EAAA9C,EACAhB,EAAA,GAAA4D,EAAA5C,EACAhB,EAAA,IAAA8D,EAAAG,EAAAF,EAAAC,GAAAhD,EACAhB,EAAA,IAAA6D,EAAAG,EAAAJ,EAAAK,GAAAjD,EACAhB,GAVA,KAmBO,SAASkE,EAAWvE,GAC3B,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAWO,SAASwE,GAAQnE,EAAAL,EAAAE,GACxB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GAOA,OANAG,EAAA,GAAAa,EAAAO,EAAAN,EAAAO,EACArB,EAAA,GAAAW,EAAAS,EAAAL,EAAAM,EACArB,EAAA,GAAAa,EAAAS,EAAAR,EAAAS,EACAvB,EAAA,GAAAW,EAAAW,EAAAP,EAAAQ,EACAvB,EAAA,GAAAa,EAAAyD,EAAAxD,EAAAyD,EAAAH,EACApE,EAAA,GAAAW,EAAA2D,EAAAvD,EAAAwD,EAAAF,EACArE,EAWO,SAASwE,GAAMxE,EAAAL,EAAA8B,GACtB,IAAAZ,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAb,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAOA,OANAzB,EAAA,GAAAa,EAAAzD,EAAA0D,EAAAhC,EACAkB,EAAA,GAAAW,EAAAvD,EAAA2D,EAAAjC,EACAkB,EAAA,GAAAa,GAAA/B,EAAAgC,EAAA1D,EACA4C,EAAA,GAAAW,GAAA7B,EAAAiC,EAAA3D,EACA4C,EAAA,GAAAoE,EACApE,EAAA,GAAAqE,EACArE,EAWO,SAASyE,GAAKzE,EAAAL,EAAAkC,GACrB,IAAAhB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAmC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAOA,OANA7B,EAAA,GAAAa,EAAAiB,EACA9B,EAAA,GAAAW,EAAAmB,EACA9B,EAAA,GAAAc,EAAAiB,EACA/B,EAAA,GAAAe,EAAAgB,EACA/B,EAAA,GAAAoE,EACApE,EAAA,GAAAqE,EACArE,EAWO,SAAA0E,GAAA1E,EAAAL,EAAAkC,GACP,IAAAhB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAmC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAOA,OANA7B,EAAA,GAAAa,EACAb,EAAA,GAAAW,EACAX,EAAA,GAAAc,EACAd,EAAA,GAAAe,EACAf,EAAA,GAAAa,EAAAiB,EAAAhB,EAAAiB,EAAAqC,EACApE,EAAA,GAAAW,EAAAmB,EAAAf,EAAAgB,EAAAsC,EACArE,EAcO,SAAS2E,GAAY3E,EAAAyB,GAC5B,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAOA,OANAzB,EAAA,GAAA5C,EACA4C,EAAA,GAAAlB,EACAkB,EAAA,IAAAlB,EACAkB,EAAA,GAAA5C,EACA4C,EAAA,KACAA,EAAA,KACAA,EAcO,SAAS4E,GAAW5E,EAAA6B,GAO3B,OANA7B,EAAA,GAAA6B,EAAA,GACA7B,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA6B,EAAA,GACA7B,EAAA,KACAA,EAAA,KACAA,EAcO,SAAA6E,GAAA7E,EAAA6B,GAOP,OANA7B,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA6B,EAAA,GACA7B,EAAA,GAAA6B,EAAA,GACA7B,EASO,SAAS8E,GAAGnF,GACnB,eAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OASO,SAASoF,GAAIpF,GACpB,OAAAP,KAAAgD,KAAAhD,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,SAWO,SAASqF,GAAGhF,EAAAL,EAAAE,GAOnB,OANAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASiF,GAAQjF,EAAAL,EAAAE,GAOxB,OANAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASkF,GAAclF,EAAAL,EAAAE,GAO9B,OANAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAYO,SAASmF,GAAoBnF,EAAAL,EAAAE,EAAAmD,GAOpC,OANAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAUO,SAASoF,GAAWzF,EAAAE,GAC3B,OAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,GAUO,SAASwF,GAAM1F,EAAAE,GACtB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACA,OAAAT,KAAAU,IAAAe,EAAAO,IAA8BrC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAe,GAAAzB,KAAAU,IAAAsB,KAAAhC,KAAAU,IAAAa,EAAAU,IAAqEtC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAa,GAAAvB,KAAAU,IAAAuB,KAAAjC,KAAAU,IAAAgB,EAAAQ,IAAqEvC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgB,GAAA1B,KAAAU,IAAAwB,KAAAlC,KAAAU,IAAAiB,EAAAQ,IAAqExC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiB,GAAA3B,KAAAU,IAAAyB,KAAAnC,KAAAU,IAAAsE,EAAAE,IAAqEvF,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAsE,GAAAhF,KAAAU,IAAAwE,KAAAlF,KAAAU,IAAAuE,EAAAE,IAAqExF,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAuE,GAAAjF,KAAAU,IAAAyE,IAOhd,IAAIe,GAAMnB,GAMNoB,GAAMN,GCvdV,SAASO,KAChB,IAAAxF,EAAA,IAAgBhB,EAAmB,GAYnC,OAXMA,GAAmBC,eACzBe,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAUO,SAAAyF,GAAAzF,EAAAL,GAUP,OATAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,IACAK,EASO,SAAS0F,GAAK/F,GACrB,IAAAK,EAAA,IAAgBhB,EAAmB,GAUnC,OATAgB,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAUO,SAAS2F,GAAI3F,EAAAL,GAUpB,OATAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAiBO,SAAS4F,GAAUvF,EAAAC,EAAAuF,EAAAtF,EAAAC,EAAAsF,EAAAC,EAAAC,EAAAC,GAC1B,IAAAjG,EAAA,IAAgBhB,EAAmB,GAUnC,OATAgB,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAA6F,EACA7F,EAAA,GAAAO,EACAP,EAAA,GAAAQ,EACAR,EAAA,GAAA8F,EACA9F,EAAA,GAAA+F,EACA/F,EAAA,GAAAgG,EACAhG,EAAA,GAAAiG,EACAjG,EAkBO,SAASkG,GAAGlG,EAAAK,EAAAC,EAAAuF,EAAAtF,EAAAC,EAAAsF,EAAAC,EAAAC,EAAAC,GAUnB,OATAjG,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAA6F,EACA7F,EAAA,GAAAO,EACAP,EAAA,GAAAQ,EACAR,EAAA,GAAA8F,EACA9F,EAAA,GAAA+F,EACA/F,EAAA,GAAAgG,EACAhG,EAAA,GAAAiG,EACAjG,EASO,SAASmG,GAAQnG,GAUxB,OATAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAUO,SAASoG,GAASpG,EAAAL,GAEzB,GAAAK,IAAAL,EAAA,CACA,IAAA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA4G,EAAA5G,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAqG,EACArG,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAsG,EACAtG,EAAA,GAAAuG,OAEAvG,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GAGA,OAAAK,EAUO,SAASwG,GAAMxG,EAAAL,GACtB,IAAA8G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,GAEAoH,EAAAD,EAAAH,EAAAJ,EAAAM,EACAG,GAAAF,EAAAJ,EAAAH,EAAAK,EACAK,EAAAJ,EAAAH,EAAAC,EAAAC,EAGA5F,EAAAyF,EAAAM,EAAAV,EAAAW,EAAAV,EAAAW,EAEA,OAAAjG,GAGAA,EAAA,EAAAA,EAEAhB,EAAA,GAAA+G,EAAA/F,EACAhB,EAAA,KAAA8G,EAAAT,EAAAC,EAAAO,GAAA7F,EACAhB,EAAA,IAAAuG,EAAAF,EAAAC,EAAAK,GAAA3F,EACAhB,EAAA,GAAAgH,EAAAhG,EACAhB,EAAA,IAAA8G,EAAAL,EAAAH,EAAAM,GAAA5F,EACAhB,EAAA,KAAAuG,EAAAE,EAAAH,EAAAI,GAAA1F,EACAhB,EAAA,GAAAiH,EAAAjG,EACAhB,EAAA,KAAA6G,EAAAJ,EAAAJ,EAAAO,GAAA5F,EACAhB,EAAA,IAAA2G,EAAAF,EAAAJ,EAAAK,GAAA1F,EACAhB,GAbA,KAuBO,SAASkH,GAAOlH,EAAAL,GACvB,IAAA8G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,GAWA,OATAK,EAAA,GAAA2G,EAAAG,EAAAP,EAAAM,EACA7G,EAAA,GAAAsG,EAAAO,EAAAR,EAAAS,EACA9G,EAAA,GAAAqG,EAAAE,EAAAD,EAAAK,EACA3G,EAAA,GAAAuG,EAAAK,EAAAF,EAAAI,EACA9G,EAAA,GAAAyG,EAAAK,EAAAR,EAAAM,EACA5G,EAAA,GAAAsG,EAAAI,EAAAD,EAAAF,EACAvG,EAAA,GAAA0G,EAAAG,EAAAF,EAAAC,EACA5G,EAAA,GAAAqG,EAAAO,EAAAH,EAAAI,EACA7G,EAAA,GAAAyG,EAAAE,EAAAN,EAAAK,EACA1G,EASO,SAASmH,GAAWxH,GAC3B,IAAA8G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,GAEA,OAAA8G,GAAAK,EAAAH,EAAAJ,EAAAM,GAAAR,IAAAS,EAAAJ,EAAAH,EAAAK,GAAAN,GAAAO,EAAAH,EAAAC,EAAAC,GAWO,SAASQ,GAAQpH,EAAAL,EAAAE,GACxB,IAAA4G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,GAEA0H,EAAAxH,EAAA,GACAkH,EAAAlH,EAAA,GACAyH,EAAAzH,EAAA,GACA0H,EAAA1H,EAAA,GACAmH,EAAAnH,EAAA,GACA2H,EAAA3H,EAAA,GACA4H,EAAA5H,EAAA,GACAoH,EAAApH,EAAA,GACA6H,EAAA7H,EAAA,GAaA,OAXAG,EAAA,GAAAqH,EAAAZ,EAAAM,EAAAL,EAAAY,EAAAV,EACA5G,EAAA,GAAAqH,EAAAhB,EAAAU,EAAAJ,EAAAW,EAAAT,EACA7G,EAAA,GAAAqH,EAAAf,EAAAS,EAAAR,EAAAe,EAAAR,EAEA9G,EAAA,GAAAuH,EAAAd,EAAAO,EAAAN,EAAAc,EAAAZ,EACA5G,EAAA,GAAAuH,EAAAlB,EAAAW,EAAAL,EAAAa,EAAAX,EACA7G,EAAA,GAAAuH,EAAAjB,EAAAU,EAAAT,EAAAiB,EAAAV,EAEA9G,EAAA,GAAAyH,EAAAhB,EAAAQ,EAAAP,EAAAgB,EAAAd,EACA5G,EAAA,GAAAyH,EAAApB,EAAAY,EAAAN,EAAAe,EAAAb,EACA7G,EAAA,GAAAyH,EAAAnB,EAAAW,EAAAV,EAAAmB,EAAAZ,EACA9G,EAWO,SAAS2H,GAAS3H,EAAAL,EAAAkC,GACzB,IAAA4E,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,GACAiI,EAAA/F,EAAA,GACAgG,EAAAhG,EAAA,GAaA,OAXA7B,EAAA,GAAAyG,EACAzG,EAAA,GAAAqG,EACArG,EAAA,GAAAsG,EAEAtG,EAAA,GAAA0G,EACA1G,EAAA,GAAA2G,EACA3G,EAAA,GAAAuG,EAEAvG,EAAA,GAAA4H,EAAAnB,EAAAoB,EAAAnB,EAAAE,EACA5G,EAAA,GAAA4H,EAAAvB,EAAAwB,EAAAlB,EAAAE,EACA7G,EAAA,GAAA4H,EAAAtB,EAAAuB,EAAAtB,EAAAO,EACA9G,EAWO,SAAS8H,GAAM9H,EAAAL,EAAA8B,GACtB,IAAAgF,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,GACAb,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAaA,OAXAzB,EAAA,GAAA5C,EAAAqJ,EAAA3H,EAAA4H,EACA1G,EAAA,GAAA5C,EAAAiJ,EAAAvH,EAAA6H,EACA3G,EAAA,GAAA5C,EAAAkJ,EAAAxH,EAAAyH,EAEAvG,EAAA,GAAA5C,EAAAsJ,EAAA5H,EAAA2H,EACAzG,EAAA,GAAA5C,EAAAuJ,EAAA7H,EAAAuH,EACArG,EAAA,GAAA5C,EAAAmJ,EAAAzH,EAAAwH,EAEAtG,EAAA,GAAA4G,EACA5G,EAAA,GAAA6G,EACA7G,EAAA,GAAA8G,EACA9G,EAWO,SAAS+H,GAAK/H,EAAAL,EAAAkC,GACrB,IAAA+F,EAAA/F,EAAA,GACAgG,EAAAhG,EAAA,GAaA,OAXA7B,EAAA,GAAA4H,EAAAjI,EAAA,GACAK,EAAA,GAAA4H,EAAAjI,EAAA,GACAK,EAAA,GAAA4H,EAAAjI,EAAA,GAEAK,EAAA,GAAA6H,EAAAlI,EAAA,GACAK,EAAA,GAAA6H,EAAAlI,EAAA,GACAK,EAAA,GAAA6H,EAAAlI,EAAA,GAEAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAcO,SAASgI,GAAehI,EAAA6B,GAU/B,OATA7B,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA6B,EAAA,GACA7B,EAAA,GAAA6B,EAAA,GACA7B,EAAA,KACAA,EAcO,SAASiI,GAAYjI,EAAAyB,GAC5B,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAaA,OAXAzB,EAAA,GAAA5C,EACA4C,EAAA,GAAAlB,EACAkB,EAAA,KAEAA,EAAA,IAAAlB,EACAkB,EAAA,GAAA5C,EACA4C,EAAA,KAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAcO,SAASkI,GAAWlI,EAAA6B,GAY3B,OAXA7B,EAAA,GAAA6B,EAAA,GACA7B,EAAA,KACAA,EAAA,KAEAA,EAAA,KACAA,EAAA,GAAA6B,EAAA,GACA7B,EAAA,KAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAUO,SAAAmI,GAAAnI,EAAAL,GAYP,OAXAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,KAEAA,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,KAEAA,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,KACAA,EAWO,SAAAoI,GAAApI,EAAAqI,GACP,IAAAT,EAAAS,EAAA,GACAR,EAAAQ,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAZ,IACAa,EAAAZ,IACAa,EAAAJ,IAEAK,EAAAf,EAAAY,EACAI,EAAAf,EAAAW,EACAK,EAAAhB,EAAAY,EACAK,EAAAR,EAAAE,EACAO,EAAAT,EAAAG,EACAO,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EAcA,OAZA1I,EAAA,KAAA6I,EAAAG,EACAhJ,EAAA,GAAA4I,EAAAO,EACAnJ,EAAA,GAAA8I,EAAAI,EAEAlJ,EAAA,GAAA4I,EAAAO,EACAnJ,EAAA,KAAA2I,EAAAK,EACAhJ,EAAA,GAAA+I,EAAAE,EAEAjJ,EAAA,GAAA8I,EAAAI,EACAlJ,EAAA,GAAA+I,EAAAE,EACAjJ,EAAA,KAAA2I,EAAAE,EAEA7I,EAWO,SAAAoJ,GAAApJ,EAAAL,GACP,IAAA8G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA0J,EAAA1J,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACA2J,EAAA3J,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,IACA4J,EAAA5J,EAAA,IACA6J,EAAA7J,EAAA,IACA8J,EAAA9J,EAAA,IACA+J,EAAA/J,EAAA,IACAgK,EAAAhK,EAAA,IAEA0H,EAAAZ,EAAAE,EAAAN,EAAAK,EACAK,EAAAN,EAAAF,EAAAD,EAAAI,EACAY,EAAAb,EAAA6C,EAAAD,EAAA3C,EACAkD,EAAAvD,EAAAE,EAAAD,EAAAK,EACAkD,EAAAxD,EAAAiD,EAAAD,EAAA1C,EACAmD,EAAAxD,EAAAgD,EAAAD,EAAA9C,EACAwD,EAAAnD,EAAA6C,EAAA5C,EAAA2C,EACAQ,EAAApD,EAAA8C,EAAA5C,EAAA0C,EACAS,EAAArD,EAAA+C,EAAAJ,EAAAC,EACAU,EAAArD,EAAA6C,EAAA5C,EAAA2C,EACAlC,EAAAV,EAAA8C,EAAAJ,EAAAE,EACAzC,EAAAF,EAAA6C,EAAAJ,EAAAG,EAGA1I,EAAAqG,EAAAL,EAAAD,EAAAQ,EAAAD,EAAA4C,EAAAN,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,EAEA,OAAA/I,GAGAA,EAAA,EAAAA,EAEAhB,EAAA,IAAA2G,EAAAK,EAAAT,EAAAgB,EAAA+B,EAAAY,GAAAlJ,EACAhB,EAAA,IAAAuG,EAAA0D,EAAAvD,EAAAM,EAAAsC,EAAAU,GAAAhJ,EACAhB,EAAA,IAAA0G,EAAAa,EAAAZ,EAAAsD,EAAAX,EAAAS,GAAA/I,EAEAhB,EAAA,IAAAsG,EAAAiB,EAAAlB,EAAAW,EAAAqC,EAAAa,GAAAlJ,EACAhB,EAAA,IAAAyG,EAAAO,EAAAV,EAAA2D,EAAAZ,EAAAW,GAAAhJ,EACAhB,EAAA,IAAAqG,EAAA4D,EAAAxD,EAAAc,EAAA8B,EAAAU,GAAA/I,EAEAhB,EAAA,IAAAyJ,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,GAAA5I,EACAhB,EAAA,IAAA0J,EAAApC,EAAAkC,EAAAM,EAAAH,EAAA5C,GAAA/F,EACAhB,EAAA,IAAAwJ,EAAAK,EAAAJ,EAAAnC,EAAAqC,EAAAtC,GAAArG,EAEAhB,GAhBA,KA2BO,SAAAmK,GAAAnK,EAAAoK,EAAAC,GAUP,OATArK,EAAA,KAAAoK,EACApK,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAAqK,EACArK,EAAA,KACAA,EAAA,MACAA,EAAA,KACAA,EAAA,KACAA,EASO,SAASsK,GAAG3K,GACnB,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OASO,SAAS4K,GAAI5K,GACpB,OAAAP,KAAAgD,KAAAhD,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,OAWO,SAAS6K,GAAGxK,EAAAL,EAAAE,GAUnB,OATAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASyK,GAAQzK,EAAAL,EAAAE,GAUxB,OATAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAAS0K,GAAc1K,EAAAL,EAAAE,GAU9B,OATAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAYO,SAAS2K,GAAoB3K,EAAAL,EAAAE,EAAAmD,GAUpC,OATAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAUO,SAAS4K,GAAWjL,EAAAE,GAC3B,OAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,GAUO,SAASgL,GAAMlL,EAAAE,GACtB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAmL,EAAAnL,EAAA,GACAoL,EAAApL,EAAA,GACAqL,EAAArL,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAoL,EAAApL,EAAA,GACAqL,EAAArL,EAAA,GACAsL,EAAAtL,EAAA,GACA,OAAAT,KAAAU,IAAAe,EAAAO,IAA8BrC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAe,GAAAzB,KAAAU,IAAAsB,KAAAhC,KAAAU,IAAAa,EAAAU,IAAqEtC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAa,GAAAvB,KAAAU,IAAAuB,KAAAjC,KAAAU,IAAAgB,EAAAQ,IAAqEvC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgB,GAAA1B,KAAAU,IAAAwB,KAAAlC,KAAAU,IAAAiB,EAAAQ,IAAqExC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiB,GAAA3B,KAAAU,IAAAyB,KAAAnC,KAAAU,IAAAsE,EAAAE,IAAqEvF,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAsE,GAAAhF,KAAAU,IAAAwE,KAAAlF,KAAAU,IAAAuE,EAAAE,IAAqExF,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAuE,GAAAjF,KAAAU,IAAAyE,KAAAnF,KAAAU,IAAAgL,EAAAG,IAAqElM,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgL,GAAA1L,KAAAU,IAAAmL,KAAA7L,KAAAU,IAAAiL,EAAAG,IAAqEnM,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiL,GAAA3L,KAAAU,IAAAoL,KAAA9L,KAAAU,IAAAkL,EAAAG,IAAqEpM,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAkL,GAAA5L,KAAAU,IAAAqL,IAO/sB,IAAIC,GAAMhE,GAMNiE,GAAMZ,GC7xBV,SAASa,KAChB,IAAAtL,EAAA,IAAgBhB,EAAmB,IAmBnC,OAlBMA,GAAmBC,eACzBe,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,OAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EASO,SAASuL,GAAK5L,GACrB,IAAAK,EAAA,IAAgBhB,EAAmB,IAiBnC,OAhBAgB,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAUO,SAASwL,GAAIxL,EAAAL,GAiBpB,OAhBAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAwBO,SAASyL,GAAUpL,EAAAC,EAAAuF,EAAA6F,EAAAnL,EAAAC,EAAAsF,EAAA6F,EAAA5F,EAAAC,EAAAC,EAAA2F,EAAAC,EAAAC,EAAAC,EAAAC,GAC1B,IAAAhM,EAAA,IAAgBhB,EAAmB,IAiBnC,OAhBAgB,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAA6F,EACA7F,EAAA,GAAA0L,EACA1L,EAAA,GAAAO,EACAP,EAAA,GAAAQ,EACAR,EAAA,GAAA8F,EACA9F,EAAA,GAAA2L,EACA3L,EAAA,GAAA+F,EACA/F,EAAA,GAAAgG,EACAhG,EAAA,IAAAiG,EACAjG,EAAA,IAAA4L,EACA5L,EAAA,IAAA6L,EACA7L,EAAA,IAAA8L,EACA9L,EAAA,IAAA+L,EACA/L,EAAA,IAAAgM,EACAhM,EAyBO,SAASiM,GAAGjM,EAAAK,EAAAC,EAAAuF,EAAA6F,EAAAnL,EAAAC,EAAAsF,EAAA6F,EAAA5F,EAAAC,EAAAC,EAAA2F,EAAAC,EAAAC,EAAAC,EAAAC,GAiBnB,OAhBAhM,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAA6F,EACA7F,EAAA,GAAA0L,EACA1L,EAAA,GAAAO,EACAP,EAAA,GAAAQ,EACAR,EAAA,GAAA8F,EACA9F,EAAA,GAAA2L,EACA3L,EAAA,GAAA+F,EACA/F,EAAA,GAAAgG,EACAhG,EAAA,IAAAiG,EACAjG,EAAA,IAAA4L,EACA5L,EAAA,IAAA6L,EACA7L,EAAA,IAAA8L,EACA9L,EAAA,IAAA+L,EACA/L,EAAA,IAAAgM,EACAhM,EASO,SAASkM,GAAQlM,GAiBxB,OAhBAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAUO,SAASmM,GAASnM,EAAAL,GAEzB,GAAAK,IAAAL,EAAA,CACA,IAAA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA0J,EAAA1J,EAAA,GACA4G,EAAA5G,EAAA,GACA2J,EAAA3J,EAAA,GACA4J,EAAA5J,EAAA,IAEAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,IACAK,EAAA,GAAAqG,EACArG,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,IACAK,EAAA,GAAAsG,EACAtG,EAAA,GAAAuG,EACAvG,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAqJ,EACArJ,EAAA,IAAAsJ,EACAtJ,EAAA,IAAAuJ,OAEAvJ,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,IACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,IACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IAGA,OAAAK,EAUO,SAASoM,GAAMpM,EAAAL,GACtB,IAAA8G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA0J,EAAA1J,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACA2J,EAAA3J,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,IACA4J,EAAA5J,EAAA,IACA6J,EAAA7J,EAAA,IACA8J,EAAA9J,EAAA,IACA+J,EAAA/J,EAAA,IACAgK,EAAAhK,EAAA,IAEA0H,EAAAZ,EAAAE,EAAAN,EAAAK,EACAK,EAAAN,EAAAF,EAAAD,EAAAI,EACAY,EAAAb,EAAA6C,EAAAD,EAAA3C,EACAkD,EAAAvD,EAAAE,EAAAD,EAAAK,EACAkD,EAAAxD,EAAAiD,EAAAD,EAAA1C,EACAmD,EAAAxD,EAAAgD,EAAAD,EAAA9C,EACAwD,EAAAnD,EAAA6C,EAAA5C,EAAA2C,EACAQ,EAAApD,EAAA8C,EAAA5C,EAAA0C,EACAS,EAAArD,EAAA+C,EAAAJ,EAAAC,EACAU,EAAArD,EAAA6C,EAAA5C,EAAA2C,EACAlC,EAAAV,EAAA8C,EAAAJ,EAAAE,EACAzC,EAAAF,EAAA6C,EAAAJ,EAAAG,EAGA1I,EAAAqG,EAAAL,EAAAD,EAAAQ,EAAAD,EAAA4C,EAAAN,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,EAEA,OAAA/I,GAGAA,EAAA,EAAAA,EAEAhB,EAAA,IAAA2G,EAAAK,EAAAT,EAAAgB,EAAA+B,EAAAY,GAAAlJ,EACAhB,EAAA,IAAAsG,EAAAiB,EAAAlB,EAAAW,EAAAqC,EAAAa,GAAAlJ,EACAhB,EAAA,IAAAyJ,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,GAAA5I,EACAhB,EAAA,IAAA8G,EAAA+C,EAAAhD,EAAAiD,EAAAP,EAAAK,GAAA5I,EACAhB,EAAA,IAAAuG,EAAA0D,EAAAvD,EAAAM,EAAAsC,EAAAU,GAAAhJ,EACAhB,EAAA,IAAAyG,EAAAO,EAAAV,EAAA2D,EAAAZ,EAAAW,GAAAhJ,EACAhB,EAAA,IAAA0J,EAAApC,EAAAkC,EAAAM,EAAAH,EAAA5C,GAAA/F,EACAhB,EAAA,IAAA4G,EAAAkD,EAAAhD,EAAAQ,EAAAiC,EAAAxC,GAAA/F,EACAhB,EAAA,IAAA0G,EAAAa,EAAAZ,EAAAsD,EAAAX,EAAAS,GAAA/I,EACAhB,EAAA,IAAAqG,EAAA4D,EAAAxD,EAAAc,EAAA8B,EAAAU,GAAA/I,EACAhB,EAAA,KAAAwJ,EAAAK,EAAAJ,EAAAnC,EAAAqC,EAAAtC,GAAArG,EACAhB,EAAA,KAAA6G,EAAAS,EAAAV,EAAAiD,EAAAN,EAAAlC,GAAArG,EACAhB,EAAA,KAAA2G,EAAAqD,EAAAtD,EAAAwD,EAAA3D,EAAAwD,GAAA/I,EACAhB,EAAA,KAAAyG,EAAAyD,EAAA7D,EAAA2D,EAAA1D,EAAAyD,GAAA/I,EACAhB,EAAA,KAAAyJ,EAAA1C,EAAAyC,EAAAI,EAAAF,EAAArC,GAAArG,EACAhB,EAAA,KAAA4G,EAAAgD,EAAA/C,EAAAE,EAAAD,EAAAO,GAAArG,EAEAhB,GArBA,KA+BO,SAASqM,GAAOrM,EAAAL,GACvB,IAAA8G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA0J,EAAA1J,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACA2J,EAAA3J,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,IACA4J,EAAA5J,EAAA,IACA6J,EAAA7J,EAAA,IACA8J,EAAA9J,EAAA,IACA+J,EAAA/J,EAAA,IACAgK,EAAAhK,EAAA,IAkBA,OAhBAK,EAAA,GAAA2G,GAAAG,EAAA6C,EAAAJ,EAAAG,GAAA7C,GAAAN,EAAAoD,EAAAL,EAAAI,GAAAD,GAAAlD,EAAAgD,EAAAD,EAAAxC,GACA9G,EAAA,KAAAqG,GAAAS,EAAA6C,EAAAJ,EAAAG,GAAA7C,GAAAP,EAAAqD,EAAAN,EAAAK,GAAAD,GAAAnD,EAAAiD,EAAAF,EAAAvC,IACA9G,EAAA,GAAAqG,GAAAE,EAAAoD,EAAAL,EAAAI,GAAA/C,GAAAL,EAAAqD,EAAAN,EAAAK,GAAAD,GAAAnD,EAAAgD,EAAAD,EAAA9C,GACAvG,EAAA,KAAAqG,GAAAE,EAAAgD,EAAAD,EAAAxC,GAAAH,GAAAL,EAAAiD,EAAAF,EAAAvC,GAAAD,GAAAP,EAAAgD,EAAAD,EAAA9C,IACAvG,EAAA,KAAA0G,GAAAI,EAAA6C,EAAAJ,EAAAG,GAAA9C,GAAAL,EAAAoD,EAAAL,EAAAI,GAAAF,GAAAjD,EAAAgD,EAAAD,EAAAxC,IACA9G,EAAA,GAAAyG,GAAAK,EAAA6C,EAAAJ,EAAAG,GAAA9C,GAAAN,EAAAqD,EAAAN,EAAAK,GAAAF,GAAAlD,EAAAiD,EAAAF,EAAAvC,GACA9G,EAAA,KAAAyG,GAAAF,EAAAoD,EAAAL,EAAAI,GAAAhD,GAAAJ,EAAAqD,EAAAN,EAAAK,GAAAF,GAAAlD,EAAAgD,EAAAD,EAAA9C,IACAvG,EAAA,GAAAyG,GAAAF,EAAAgD,EAAAD,EAAAxC,GAAAJ,GAAAJ,EAAAiD,EAAAF,EAAAvC,GAAAF,GAAAN,EAAAgD,EAAAD,EAAA9C,GACAvG,EAAA,GAAA0G,GAAAG,EAAA8C,EAAAJ,EAAAE,GAAA7C,GAAAD,EAAAgD,EAAAL,EAAAG,GAAAD,GAAA7C,EAAA4C,EAAAD,EAAAzC,GACA7G,EAAA,KAAAyG,GAAAI,EAAA8C,EAAAJ,EAAAE,GAAA7C,GAAAP,EAAAsD,EAAAN,EAAAI,GAAAD,GAAAnD,EAAAkD,EAAAF,EAAAxC,IACA7G,EAAA,IAAAyG,GAAAE,EAAAgD,EAAAL,EAAAG,GAAA/C,GAAAL,EAAAsD,EAAAN,EAAAI,GAAAD,GAAAnD,EAAAiD,EAAAD,EAAA1C,GACA3G,EAAA,MAAAyG,GAAAE,EAAA4C,EAAAD,EAAAzC,GAAAH,GAAAL,EAAAkD,EAAAF,EAAAxC,GAAAD,GAAAP,EAAAiD,EAAAD,EAAA1C,IACA3G,EAAA,MAAA0G,GAAAG,EAAA6C,EAAA5C,EAAA2C,GAAA7C,GAAAD,EAAA+C,EAAAnD,EAAAkD,GAAAD,GAAA7C,EAAAG,EAAAP,EAAAM,IACA7G,EAAA,IAAAyG,GAAAI,EAAA6C,EAAA5C,EAAA2C,GAAA7C,GAAAP,EAAAqD,EAAApD,EAAAmD,GAAAD,GAAAnD,EAAAS,EAAAR,EAAAO,GACA7G,EAAA,MAAAyG,GAAAE,EAAA+C,EAAAnD,EAAAkD,GAAA/C,GAAAL,EAAAqD,EAAApD,EAAAmD,GAAAD,GAAAnD,EAAAE,EAAAD,EAAAK,IACA3G,EAAA,IAAAyG,GAAAE,EAAAG,EAAAP,EAAAM,GAAAH,GAAAL,EAAAS,EAAAR,EAAAO,GAAAD,GAAAP,EAAAE,EAAAD,EAAAK,GACA3G,EASO,SAASsM,GAAW3M,GAC3B,IAAA8G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA0J,EAAA1J,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACA2J,EAAA3J,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,IACA4J,EAAA5J,EAAA,IACA6J,EAAA7J,EAAA,IACA8J,EAAA9J,EAAA,IACA+J,EAAA/J,EAAA,IACAgK,EAAAhK,EAAA,IAgBA,OAdA8G,EAAAE,EAAAN,EAAAK,IAWAI,EAAA6C,EAAAJ,EAAAG,IAVAjD,EAAAF,EAAAD,EAAAI,IASAG,EAAA8C,EAAAJ,EAAAE,IARAhD,EAAA6C,EAAAD,EAAA3C,IAOAG,EAAA6C,EAAA5C,EAAA2C,IANApD,EAAAE,EAAAD,EAAAK,IAKAC,EAAA+C,EAAAJ,EAAAC,IAJAnD,EAAAiD,EAAAD,EAAA1C,IAGAC,EAAA8C,EAAA5C,EAAA0C,IAFAlD,EAAAgD,EAAAD,EAAA9C,IACAK,EAAA6C,EAAA5C,EAAA2C,GAmBO,SAAS+C,GAAQvM,EAAAL,EAAAE,GACxB,IAAA4G,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA0J,EAAA1J,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACA2J,EAAA3J,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,IACA4J,EAAA5J,EAAA,IACA6J,EAAA7J,EAAA,IACA8J,EAAA9J,EAAA,IACA+J,EAAA/J,EAAA,IACAgK,EAAAhK,EAAA,IAGAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GAuBA,OAtBAG,EAAA,GAAAoB,EAAAqF,EAAApF,EAAAqF,EAAApF,EAAAsF,EAAArF,EAAAiI,EACAxJ,EAAA,GAAAoB,EAAAiF,EAAAhF,EAAAsF,EAAArF,EAAAuF,EAAAtF,EAAAkI,EACAzJ,EAAA,GAAAoB,EAAAkF,EAAAjF,EAAAkF,EAAAjF,EAAAwF,EAAAvF,EAAAmI,EACA1J,EAAA,GAAAoB,EAAAiI,EAAAhI,EAAAiI,EAAAhI,EAAAiI,EAAAhI,EAAAoI,EAEAvI,EAAAvB,EAAA,GAAYwB,EAAAxB,EAAA,GAAUyB,EAAAzB,EAAA,GAAU0B,EAAA1B,EAAA,GAChCG,EAAA,GAAAoB,EAAAqF,EAAApF,EAAAqF,EAAApF,EAAAsF,EAAArF,EAAAiI,EACAxJ,EAAA,GAAAoB,EAAAiF,EAAAhF,EAAAsF,EAAArF,EAAAuF,EAAAtF,EAAAkI,EACAzJ,EAAA,GAAAoB,EAAAkF,EAAAjF,EAAAkF,EAAAjF,EAAAwF,EAAAvF,EAAAmI,EACA1J,EAAA,GAAAoB,EAAAiI,EAAAhI,EAAAiI,EAAAhI,EAAAiI,EAAAhI,EAAAoI,EAEAvI,EAAAvB,EAAA,GAAYwB,EAAAxB,EAAA,GAAUyB,EAAAzB,EAAA,IAAW0B,EAAA1B,EAAA,IACjCG,EAAA,GAAAoB,EAAAqF,EAAApF,EAAAqF,EAAApF,EAAAsF,EAAArF,EAAAiI,EACAxJ,EAAA,GAAAoB,EAAAiF,EAAAhF,EAAAsF,EAAArF,EAAAuF,EAAAtF,EAAAkI,EACAzJ,EAAA,IAAAoB,EAAAkF,EAAAjF,EAAAkF,EAAAjF,EAAAwF,EAAAvF,EAAAmI,EACA1J,EAAA,IAAAoB,EAAAiI,EAAAhI,EAAAiI,EAAAhI,EAAAiI,EAAAhI,EAAAoI,EAEAvI,EAAAvB,EAAA,IAAawB,EAAAxB,EAAA,IAAWyB,EAAAzB,EAAA,IAAW0B,EAAA1B,EAAA,IACnCG,EAAA,IAAAoB,EAAAqF,EAAApF,EAAAqF,EAAApF,EAAAsF,EAAArF,EAAAiI,EACAxJ,EAAA,IAAAoB,EAAAiF,EAAAhF,EAAAsF,EAAArF,EAAAuF,EAAAtF,EAAAkI,EACAzJ,EAAA,IAAAoB,EAAAkF,EAAAjF,EAAAkF,EAAAjF,EAAAwF,EAAAvF,EAAAmI,EACA1J,EAAA,IAAAoB,EAAAiI,EAAAhI,EAAAiI,EAAAhI,EAAAiI,EAAAhI,EAAAoI,EACA3J,EAWO,SAASwM,GAASxM,EAAAL,EAAAkC,GACzB,IAAA+F,EAAA/F,EAAA,GACAgG,EAAAhG,EAAA,GACAyG,EAAAzG,EAAA,GACA4E,OAAA,EACAJ,OAAA,EACAC,OAAA,EACA+C,OAAA,EACA3C,OAAA,EACAC,OAAA,EACAJ,OAAA,EACA+C,OAAA,EACA1C,OAAA,EACAC,OAAA,EACAC,OAAA,EACAyC,OAAA,EAsBA,OApBA5J,IAAAK,GACAA,EAAA,IAAAL,EAAA,GAAAiI,EAAAjI,EAAA,GAAAkI,EAAAlI,EAAA,GAAA2I,EAAA3I,EAAA,IACAK,EAAA,IAAAL,EAAA,GAAAiI,EAAAjI,EAAA,GAAAkI,EAAAlI,EAAA,GAAA2I,EAAA3I,EAAA,IACAK,EAAA,IAAAL,EAAA,GAAAiI,EAAAjI,EAAA,GAAAkI,EAAAlI,EAAA,IAAA2I,EAAA3I,EAAA,IACAK,EAAA,IAAAL,EAAA,GAAAiI,EAAAjI,EAAA,GAAAkI,EAAAlI,EAAA,IAAA2I,EAAA3I,EAAA,MAEA8G,EAAA9G,EAAA,GAAe0G,EAAA1G,EAAA,GAAW2G,EAAA3G,EAAA,GAAW0J,EAAA1J,EAAA,GACrC+G,EAAA/G,EAAA,GAAegH,EAAAhH,EAAA,GAAW4G,EAAA5G,EAAA,GAAW2J,EAAA3J,EAAA,GACrCiH,EAAAjH,EAAA,GAAekH,EAAAlH,EAAA,GAAWmH,EAAAnH,EAAA,IAAY4J,EAAA5J,EAAA,IAEtCK,EAAA,GAAAyG,EAAiBzG,EAAA,GAAAqG,EAAarG,EAAA,GAAAsG,EAAatG,EAAA,GAAAqJ,EAC3CrJ,EAAA,GAAA0G,EAAiB1G,EAAA,GAAA2G,EAAa3G,EAAA,GAAAuG,EAAavG,EAAA,GAAAsJ,EAC3CtJ,EAAA,GAAA4G,EAAiB5G,EAAA,GAAA6G,EAAa7G,EAAA,IAAA8G,EAAc9G,EAAA,IAAAuJ,EAE5CvJ,EAAA,IAAAyG,EAAAmB,EAAAlB,EAAAmB,EAAAjB,EAAA0B,EAAA3I,EAAA,IACAK,EAAA,IAAAqG,EAAAuB,EAAAjB,EAAAkB,EAAAhB,EAAAyB,EAAA3I,EAAA,IACAK,EAAA,IAAAsG,EAAAsB,EAAArB,EAAAsB,EAAAf,EAAAwB,EAAA3I,EAAA,IACAK,EAAA,IAAAqJ,EAAAzB,EAAA0B,EAAAzB,EAAA0B,EAAAjB,EAAA3I,EAAA,KAGAK,EAWO,SAASyM,GAAKzM,EAAAL,EAAAkC,GACrB,IAAA+F,EAAA/F,EAAA,GACAgG,EAAAhG,EAAA,GACAyG,EAAAzG,EAAA,GAkBA,OAhBA7B,EAAA,GAAAL,EAAA,GAAAiI,EACA5H,EAAA,GAAAL,EAAA,GAAAiI,EACA5H,EAAA,GAAAL,EAAA,GAAAiI,EACA5H,EAAA,GAAAL,EAAA,GAAAiI,EACA5H,EAAA,GAAAL,EAAA,GAAAkI,EACA7H,EAAA,GAAAL,EAAA,GAAAkI,EACA7H,EAAA,GAAAL,EAAA,GAAAkI,EACA7H,EAAA,GAAAL,EAAA,GAAAkI,EACA7H,EAAA,GAAAL,EAAA,GAAA2I,EACAtI,EAAA,GAAAL,EAAA,GAAA2I,EACAtI,EAAA,IAAAL,EAAA,IAAA2I,EACAtI,EAAA,IAAAL,EAAA,IAAA2I,EACAtI,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAYO,SAAS0M,GAAM1M,EAAAL,EAAA8B,EAAAkL,GACtB,IAIA7N,EACA1B,EACAa,EACAwI,EACAJ,EACAC,EACA+C,EACA3C,EACAC,EACAJ,EACA+C,EACA1C,EACAC,EACAC,EACAyC,EACAlC,EACAN,EACAO,EACAC,EACAP,EACAQ,EACAC,EACAR,EACAS,EA3BAE,EAAA+E,EAAA,GACA9E,EAAA8E,EAAA,GACArE,EAAAqE,EAAA,GACAC,EAAAxN,KAAAgD,KAAAwF,IAAAC,IAAAS,KA0BA,OAAAsE,EAAY7N,EACZ,MAIA6I,GADAgF,EAAA,EAAAA,EAEA/E,GAAA+E,EACAtE,GAAAsE,EAEA9N,EAAAM,KAAAsC,IAAAD,GAEAxD,EAAA,GADAb,EAAAgC,KAAAuC,IAAAF,IAGAgF,EAAA9G,EAAA,GAAa0G,EAAA1G,EAAA,GAAW2G,EAAA3G,EAAA,GAAW0J,EAAA1J,EAAA,GACnC+G,EAAA/G,EAAA,GAAagH,EAAAhH,EAAA,GAAW4G,EAAA5G,EAAA,GAAW2J,EAAA3J,EAAA,GACnCiH,EAAAjH,EAAA,GAAakH,EAAAlH,EAAA,GAAWmH,EAAAnH,EAAA,IAAY4J,EAAA5J,EAAA,IAGpC0H,EAAAO,IAAA3J,EAAAb,EAAsB2J,EAAAc,EAAAD,EAAA3J,EAAAqK,EAAAxJ,EAAwBwI,EAAAgB,EAAAV,EAAA3J,EAAA4J,EAAA/I,EAC9CyI,EAAAK,EAAAC,EAAA5J,EAAAqK,EAAAxJ,EAA0BkI,EAAAa,IAAA5J,EAAAb,EAAoBoK,EAAAc,EAAAT,EAAA5J,EAAA2J,EAAA9I,EAC9C2I,EAAAG,EAAAU,EAAArK,EAAA4J,EAAA/I,EAA0BmI,EAAAY,EAAAS,EAAArK,EAAA2J,EAAA9I,EAAwB4I,EAAAY,IAAArK,EAAAb,EAGlD4C,EAAA,GAAAyG,EAAAY,EAAAX,EAAAK,EAAAH,EAAAU,EACAtH,EAAA,GAAAqG,EAAAgB,EAAAV,EAAAI,EAAAF,EAAAS,EACAtH,EAAA,GAAAsG,EAAAe,EAAAd,EAAAQ,EAAAD,EAAAQ,EACAtH,EAAA,GAAAqJ,EAAAhC,EAAAiC,EAAAvC,EAAAwC,EAAAjC,EACAtH,EAAA,GAAAyG,EAAAc,EAAAb,EAAAM,EAAAJ,EAAAY,EACAxH,EAAA,GAAAqG,EAAAkB,EAAAZ,EAAAK,EAAAH,EAAAW,EACAxH,EAAA,GAAAsG,EAAAiB,EAAAhB,EAAAS,EAAAF,EAAAU,EACAxH,EAAA,GAAAqJ,EAAA9B,EAAA+B,EAAAtC,EAAAuC,EAAA/B,EACAxH,EAAA,GAAAyG,EAAAgB,EAAAf,EAAAO,EAAAL,EAAAc,EACA1H,EAAA,GAAAqG,EAAAoB,EAAAd,EAAAM,EAAAJ,EAAAa,EACA1H,EAAA,IAAAsG,EAAAmB,EAAAlB,EAAAU,EAAAH,EAAAY,EACA1H,EAAA,IAAAqJ,EAAA5B,EAAA6B,EAAArC,EAAAsC,EAAA7B,EAEA/H,IAAAK,IAEAA,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,KAEAK,GAWO,SAAA6M,GAAA7M,EAAAL,EAAA8B,GACP,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GACAiF,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACA2J,EAAA3J,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,IACA4J,EAAA5J,EAAA,IAuBA,OArBAA,IAAAK,IAEAA,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,KAIAK,EAAA,GAAA0G,EAAAtJ,EAAAwJ,EAAA9H,EACAkB,EAAA,GAAA2G,EAAAvJ,EAAAyJ,EAAA/H,EACAkB,EAAA,GAAAuG,EAAAnJ,EAAA0J,EAAAhI,EACAkB,EAAA,GAAAsJ,EAAAlM,EAAAmM,EAAAzK,EACAkB,EAAA,GAAA4G,EAAAxJ,EAAAsJ,EAAA5H,EACAkB,EAAA,GAAA6G,EAAAzJ,EAAAuJ,EAAA7H,EACAkB,EAAA,IAAA8G,EAAA1J,EAAAmJ,EAAAzH,EACAkB,EAAA,IAAAuJ,EAAAnM,EAAAkM,EAAAxK,EACAkB,EAWO,SAAA8M,GAAA9M,EAAAL,EAAA8B,GACP,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GACAgF,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA0J,EAAA1J,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GACAmH,EAAAnH,EAAA,IACA4J,EAAA5J,EAAA,IAuBA,OArBAA,IAAAK,IAEAA,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,KAIAK,EAAA,GAAAyG,EAAArJ,EAAAwJ,EAAA9H,EACAkB,EAAA,GAAAqG,EAAAjJ,EAAAyJ,EAAA/H,EACAkB,EAAA,GAAAsG,EAAAlJ,EAAA0J,EAAAhI,EACAkB,EAAA,GAAAqJ,EAAAjM,EAAAmM,EAAAzK,EACAkB,EAAA,GAAAyG,EAAA3H,EAAA8H,EAAAxJ,EACA4C,EAAA,GAAAqG,EAAAvH,EAAA+H,EAAAzJ,EACA4C,EAAA,IAAAsG,EAAAxH,EAAAgI,EAAA1J,EACA4C,EAAA,IAAAqJ,EAAAvK,EAAAyK,EAAAnM,EACA4C,EAWO,SAAA+M,GAAA/M,EAAAL,EAAA8B,GACP,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GACAgF,EAAA9G,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA0J,EAAA1J,EAAA,GACA+G,EAAA/G,EAAA,GACAgH,EAAAhH,EAAA,GACA4G,EAAA5G,EAAA,GACA2J,EAAA3J,EAAA,GAuBA,OArBAA,IAAAK,IAEAA,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,IACAK,EAAA,IAAAL,EAAA,KAIAK,EAAA,GAAAyG,EAAArJ,EAAAsJ,EAAA5H,EACAkB,EAAA,GAAAqG,EAAAjJ,EAAAuJ,EAAA7H,EACAkB,EAAA,GAAAsG,EAAAlJ,EAAAmJ,EAAAzH,EACAkB,EAAA,GAAAqJ,EAAAjM,EAAAkM,EAAAxK,EACAkB,EAAA,GAAA0G,EAAAtJ,EAAAqJ,EAAA3H,EACAkB,EAAA,GAAA2G,EAAAvJ,EAAAiJ,EAAAvH,EACAkB,EAAA,GAAAuG,EAAAnJ,EAAAkJ,EAAAxH,EACAkB,EAAA,GAAAsJ,EAAAlM,EAAAiM,EAAAvK,EACAkB,EAcO,SAASgN,GAAehN,EAAA6B,GAiB/B,OAhBA7B,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAA6B,EAAA,GACA7B,EAAA,IAAA6B,EAAA,GACA7B,EAAA,IAAA6B,EAAA,GACA7B,EAAA,MACAA,EAcO,SAASiN,GAAWjN,EAAA6B,GAiB3B,OAhBA7B,EAAA,GAAA6B,EAAA,GACA7B,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA6B,EAAA,GACA7B,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IAAA6B,EAAA,GACA7B,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAeO,SAASkN,GAAYlN,EAAAyB,EAAAkL,GAC5B,IAIA7N,EACA1B,EACAa,EANA2J,EAAA+E,EAAA,GACA9E,EAAA8E,EAAA,GACArE,EAAAqE,EAAA,GACAC,EAAAxN,KAAAgD,KAAAwF,IAAAC,IAAAS,KAKA,OAAAsE,EAAY7N,EACZ,MAIA6I,GADAgF,EAAA,EAAAA,EAEA/E,GAAA+E,EACAtE,GAAAsE,EAEA9N,EAAAM,KAAAsC,IAAAD,GAEAxD,EAAA,GADAb,EAAAgC,KAAAuC,IAAAF,IAIAzB,EAAA,GAAA4H,IAAA3J,EAAAb,EACA4C,EAAA,GAAA6H,EAAAD,EAAA3J,EAAAqK,EAAAxJ,EACAkB,EAAA,GAAAsI,EAAAV,EAAA3J,EAAA4J,EAAA/I,EACAkB,EAAA,KACAA,EAAA,GAAA4H,EAAAC,EAAA5J,EAAAqK,EAAAxJ,EACAkB,EAAA,GAAA6H,IAAA5J,EAAAb,EACA4C,EAAA,GAAAsI,EAAAT,EAAA5J,EAAA2J,EAAA9I,EACAkB,EAAA,KACAA,EAAA,GAAA4H,EAAAU,EAAArK,EAAA4J,EAAA/I,EACAkB,EAAA,GAAA6H,EAAAS,EAAArK,EAAA2J,EAAA9I,EACAkB,EAAA,IAAAsI,IAAArK,EAAAb,EACA4C,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,GAcO,SAAAmN,GAAAnN,EAAAyB,GACP,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAmBA,OAhBAzB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA5C,EACA4C,EAAA,GAAAlB,EACAkB,EAAA,KACAA,EAAA,KACAA,EAAA,IAAAlB,EACAkB,EAAA,IAAA5C,EACA4C,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAcO,SAAAoN,GAAApN,EAAAyB,GACP,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAmBA,OAhBAzB,EAAA,GAAA5C,EACA4C,EAAA,KACAA,EAAA,IAAAlB,EACAkB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAAlB,EACAkB,EAAA,KACAA,EAAA,IAAA5C,EACA4C,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAcO,SAAAqN,GAAArN,EAAAyB,GACP,IAAA3C,EAAAM,KAAAsC,IAAAD,GACArE,EAAAgC,KAAAuC,IAAAF,GAmBA,OAhBAzB,EAAA,GAAA5C,EACA4C,EAAA,GAAAlB,EACAkB,EAAA,KACAA,EAAA,KACAA,EAAA,IAAAlB,EACAkB,EAAA,GAAA5C,EACA4C,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAkBO,SAAAsN,GAAAtN,EAAAqI,EAAAxG,GAEP,IAAA+F,EAAAS,EAAA,GACAR,EAAAQ,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAZ,IACAa,EAAAZ,IACAa,EAAAJ,IAEAK,EAAAf,EAAAY,EACA+E,EAAA3F,EAAAa,EACA+E,EAAA5F,EAAAc,EACAG,EAAAhB,EAAAY,EACAgF,EAAA5F,EAAAa,EACAM,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EAmBA,OAjBA1I,EAAA,MAAA6I,EAAAG,GACAhJ,EAAA,GAAAuN,EAAApE,EACAnJ,EAAA,GAAAwN,EAAAtE,EACAlJ,EAAA,KACAA,EAAA,GAAAuN,EAAApE,EACAnJ,EAAA,MAAA2I,EAAAK,GACAhJ,EAAA,GAAAyN,EAAAxE,EACAjJ,EAAA,KACAA,EAAA,GAAAwN,EAAAtE,EACAlJ,EAAA,GAAAyN,EAAAxE,EACAjJ,EAAA,OAAA2I,EAAAE,GACA7I,EAAA,MACAA,EAAA,IAAA6B,EAAA,GACA7B,EAAA,IAAA6B,EAAA,GACA7B,EAAA,IAAA6B,EAAA,GACA7B,EAAA,MAEAA,EAUO,SAAA0N,GAAA1N,EAAAL,GACP,IAAAgO,EAAA,IAAwB3O,EAAmB,GAC3C4O,GAAAjO,EAAA,GACAkO,GAAAlO,EAAA,GACAmO,GAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GAEAyO,EAAAR,IAAAC,IAAAC,IAAAC,IAYA,OAVAK,EAAA,GACAT,EAAA,MAAAK,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,GAAAO,EACAT,EAAA,MAAAM,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,GAAAM,EACAT,EAAA,MAAAO,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,GAAAQ,IAEAT,EAAA,MAAAK,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,GACAF,EAAA,MAAAM,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,GACAH,EAAA,MAAAO,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,IAEAN,GAAAtN,EAAAL,EAAAgO,GACA3N,EAYO,SAAAqO,GAAArO,EAAAsO,GAKP,OAJAtO,EAAA,GAAAsO,EAAA,IACAtO,EAAA,GAAAsO,EAAA,IACAtO,EAAA,GAAAsO,EAAA,IAEAtO,EAaO,SAAAuO,GAAAvO,EAAAsO,GACP,IAAA9N,EAAA8N,EAAA,GACAxI,EAAAwI,EAAA,GACA3C,EAAA2C,EAAA,GACAtI,EAAAsI,EAAA,GACArI,EAAAqI,EAAA,GACA1C,EAAA0C,EAAA,GACAxC,EAAAwC,EAAA,GACAvC,EAAAuC,EAAA,GACAtC,EAAAsC,EAAA,IAMA,OAJAtO,EAAA,GAAAZ,KAAAgD,KAAA5B,IAAAsF,IAAA6F,KACA3L,EAAA,GAAAZ,KAAAgD,KAAA4D,IAAAC,IAAA2F,KACA5L,EAAA,GAAAZ,KAAAgD,KAAA0J,IAAAC,IAAAC,KAEAhM,EAYO,SAAAwO,GAAAxO,EAAAsO,GAEP,IAAAG,EAAAH,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAI,EAAA,EA4BA,OA1BAD,EAAA,GACAC,EAAA,EAAAtP,KAAAgD,KAAAqM,EAAA,GACAzO,EAAA,OAAA0O,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,GACGJ,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,KACHI,EAAA,EAAAtP,KAAAgD,KAAA,EAAAkM,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAtO,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,OAAA0O,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,GACGJ,EAAA,GAAAA,EAAA,KACHI,EAAA,EAAAtP,KAAAgD,KAAA,EAAAkM,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAtO,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,OAAA0O,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,IAEAA,EAAA,EAAAtP,KAAAgD,KAAA,EAAAkM,EAAA,IAAAA,EAAA,GAAAA,EAAA,IACAtO,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,IAAAsO,EAAA,GAAAA,EAAA,IAAAI,EACA1O,EAAA,OAAA0O,GAGA1O,EAoBO,SAAA2O,GAAA3O,EAAAqI,EAAAxG,EAAA/C,GAEP,IAAA8I,EAAAS,EAAA,GACAR,EAAAQ,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAZ,IACAa,EAAAZ,IACAa,EAAAJ,IAEAK,EAAAf,EAAAY,EACA+E,EAAA3F,EAAAa,EACA+E,EAAA5F,EAAAc,EACAG,EAAAhB,EAAAY,EACAgF,EAAA5F,EAAAa,EACAM,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EACAkG,EAAA9P,EAAA,GACA+P,EAAA/P,EAAA,GACAgQ,EAAAhQ,EAAA,GAmBA,OAjBAkB,EAAA,OAAA6I,EAAAG,IAAA4F,EACA5O,EAAA,IAAAuN,EAAApE,GAAAyF,EACA5O,EAAA,IAAAwN,EAAAtE,GAAA0F,EACA5O,EAAA,KACAA,EAAA,IAAAuN,EAAApE,GAAA0F,EACA7O,EAAA,OAAA2I,EAAAK,IAAA6F,EACA7O,EAAA,IAAAyN,EAAAxE,GAAA4F,EACA7O,EAAA,KACAA,EAAA,IAAAwN,EAAAtE,GAAA4F,EACA9O,EAAA,IAAAyN,EAAAxE,GAAA6F,EACA9O,EAAA,QAAA2I,EAAAE,IAAAiG,EACA9O,EAAA,MACAA,EAAA,IAAA6B,EAAA,GACA7B,EAAA,IAAA6B,EAAA,GACA7B,EAAA,IAAA6B,EAAA,GACA7B,EAAA,MAEAA,EAuBO,SAAA+O,GAAA/O,EAAAqI,EAAAxG,EAAA/C,EAAAtB,GAEP,IAAAoK,EAAAS,EAAA,GACAR,EAAAQ,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAZ,IACAa,EAAAZ,IACAa,EAAAJ,IAEAK,EAAAf,EAAAY,EACA+E,EAAA3F,EAAAa,EACA+E,EAAA5F,EAAAc,EACAG,EAAAhB,EAAAY,EACAgF,EAAA5F,EAAAa,EACAM,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EAEAkG,EAAA9P,EAAA,GACA+P,EAAA/P,EAAA,GACAgQ,EAAAhQ,EAAA,GAEAkQ,EAAAxR,EAAA,GACAyR,EAAAzR,EAAA,GACA0R,EAAA1R,EAAA,GAEA2R,GAAA,GAAAtG,EAAAG,IAAA4F,EACAQ,GAAA7B,EAAApE,GAAAyF,EACAS,GAAA7B,EAAAtE,GAAA0F,EACAU,GAAA/B,EAAApE,GAAA0F,EACAU,GAAA,GAAA5G,EAAAK,IAAA6F,EACAW,GAAA/B,EAAAxE,GAAA4F,EACAY,GAAAjC,EAAAtE,GAAA4F,EACAY,GAAAjC,EAAAxE,GAAA6F,EACAa,GAAA,GAAAhH,EAAAE,IAAAiG,EAmBA,OAjBA9O,EAAA,GAAAmP,EACAnP,EAAA,GAAAoP,EACApP,EAAA,GAAAqP,EACArP,EAAA,KACAA,EAAA,GAAAsP,EACAtP,EAAA,GAAAuP,EACAvP,EAAA,GAAAwP,EACAxP,EAAA,KACAA,EAAA,GAAAyP,EACAzP,EAAA,GAAA0P,EACA1P,EAAA,IAAA2P,EACA3P,EAAA,MACAA,EAAA,IAAA6B,EAAA,GAAAmN,GAAAG,EAAAH,EAAAM,EAAAL,EAAAQ,EAAAP,GACAlP,EAAA,IAAA6B,EAAA,GAAAoN,GAAAG,EAAAJ,EAAAO,EAAAN,EAAAS,EAAAR,GACAlP,EAAA,IAAA6B,EAAA,GAAAqN,GAAAG,EAAAL,EAAAQ,EAAAP,EAAAU,EAAAT,GACAlP,EAAA,MAEAA,EAWO,SAAS4P,GAAQ5P,EAAAqI,GACxB,IAAAT,EAAAS,EAAA,GACAR,EAAAQ,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAZ,IACAa,EAAAZ,IACAa,EAAAJ,IAEAK,EAAAf,EAAAY,EACAI,EAAAf,EAAAW,EACAK,EAAAhB,EAAAY,EACAK,EAAAR,EAAAE,EACAO,EAAAT,EAAAG,EACAO,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EAsBA,OApBA1I,EAAA,KAAA6I,EAAAG,EACAhJ,EAAA,GAAA4I,EAAAO,EACAnJ,EAAA,GAAA8I,EAAAI,EACAlJ,EAAA,KAEAA,EAAA,GAAA4I,EAAAO,EACAnJ,EAAA,KAAA2I,EAAAK,EACAhJ,EAAA,GAAA+I,EAAAE,EACAjJ,EAAA,KAEAA,EAAA,GAAA8I,EAAAI,EACAlJ,EAAA,GAAA+I,EAAAE,EACAjJ,EAAA,MAAA2I,EAAAE,EACA7I,EAAA,MAEAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MAEAA,EAeO,SAAA6P,GAAA7P,EAAA8P,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAA,GAAAL,EAAAD,GACAO,EAAA,GAAAJ,EAAAD,GACAM,EAAA,GAAAJ,EAAAC,GAiBA,OAhBAnQ,EAAA,KAAAkQ,EAAAE,EACApQ,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAAAkQ,EAAAG,EACArQ,EAAA,KACAA,EAAA,KACAA,EAAA,IAAA+P,EAAAD,GAAAM,EACApQ,EAAA,IAAAiQ,EAAAD,GAAAK,EACArQ,EAAA,KAAAmQ,EAAAD,GAAAI,EACAtQ,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAAmQ,EAAAD,EAAA,EAAAI,EACAtQ,EAAA,MACAA,EAcO,SAAAuQ,GAAAvQ,EAAAwQ,EAAAC,EAAAP,EAAAC,GACP,IAAAO,EAAA,EAAAtR,KAAAuR,IAAAH,EAAA,GACAF,OAAA,EAuBA,OAtBAtQ,EAAA,GAAA0Q,EAAAD,EACAzQ,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA0Q,EACA1Q,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,MAAAmQ,OAAAS,KACAN,EAAA,GAAAJ,EAAAC,GACAnQ,EAAA,KAAAmQ,EAAAD,GAAAI,EACAtQ,EAAA,MAAAmQ,EAAAD,EAAAI,IAEAtQ,EAAA,OACAA,EAAA,OAAAkQ,GAEAlQ,EAcO,SAAA6Q,GAAA7Q,EAAA8Q,EAAAZ,EAAAC,GACP,IAAAY,EAAA3R,KAAAuR,IAAAG,EAAAE,UAAA5R,KAAAK,GAAA,KACAwR,EAAA7R,KAAAuR,IAAAG,EAAAI,YAAA9R,KAAAK,GAAA,KACA0R,EAAA/R,KAAAuR,IAAAG,EAAAM,YAAAhS,KAAAK,GAAA,KACA4R,EAAAjS,KAAAuR,IAAAG,EAAAQ,aAAAlS,KAAAK,GAAA,KACA8R,EAAA,GAAAJ,EAAAE,GACAG,EAAA,GAAAT,EAAAE,GAkBA,OAhBAjR,EAAA,GAAAuR,EACAvR,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAAwR,EACAxR,EAAA,KACAA,EAAA,KACAA,EAAA,KAAAmR,EAAAE,GAAAE,EAAA,GACAvR,EAAA,IAAA+Q,EAAAE,GAAAO,EAAA,GACAxR,EAAA,IAAAmQ,GAAAD,EAAAC,GACAnQ,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAAmQ,EAAAD,KAAAC,GACAnQ,EAAA,MACAA,EAeO,SAAAyR,GAAAzR,EAAA8P,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACP,IAAAuB,EAAA,GAAA5B,EAAAC,GACA4B,EAAA,GAAA3B,EAAAC,GACAK,EAAA,GAAAJ,EAAAC,GAiBA,OAhBAnQ,EAAA,MAAA0R,EACA1R,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAA2R,EACA3R,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAAsQ,EACAtQ,EAAA,MACAA,EAAA,KAAA8P,EAAAC,GAAA2B,EACA1R,EAAA,KAAAiQ,EAAAD,GAAA2B,EACA3R,EAAA,KAAAmQ,EAAAD,GAAAI,EACAtQ,EAAA,MACAA,EAaO,SAAA4R,GAAA5R,EAAA6R,EAAAC,EAAAC,GACP,IAAAC,OAAA,EACAC,OAAA,EACAzJ,OAAA,EACA0J,OAAA,EACAC,OAAA,EACA1J,OAAA,EACA2J,OAAA,EACAC,OAAA,EACA3J,OAAA,EACAkE,OAAA,EACA0F,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GACAa,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAgB,EAAAhB,EAAA,GAEA,OAAA1S,KAAAU,IAAAwS,EAAAM,GAAiC7T,GAAgBK,KAAAU,IAAAyS,EAAAM,GAA+B9T,GAAgBK,KAAAU,IAAA0S,EAAAM,GAA+B/T,EACpHmN,GAAQlM,IAGnBoS,EAAAE,EAAAM,EACAP,EAAAE,EAAAM,EACAnK,EAAA8J,EAAAM,EAOAd,EAAAU,GAFAhK,GAHAkE,EAAA,EAAAxN,KAAAgD,KAAAgQ,IAAAC,IAAA3J,MAKAiK,GAHAN,GAAAzF,GAIAqF,EAAAU,GALAP,GAAAxF,GAKA6F,EAAA/J,EACAF,EAAAiK,EAAAJ,EAAAK,EAAAN,GACAxF,EAAAxN,KAAAgD,KAAA4P,IAAAC,IAAAzJ,OAOAwJ,GADApF,EAAA,EAAAA,EAEAqF,GAAArF,EACApE,GAAAoE,IAPAoF,EAAA,EACAC,EAAA,EACAzJ,EAAA,GAQA0J,EAAAG,EAAA7J,EAAAE,EAAAuJ,EACAE,EAAAzJ,EAAAsJ,EAAAI,EAAA5J,EACAC,EAAA2J,EAAAH,EAAAI,EAAAL,GAEApF,EAAAxN,KAAAgD,KAAA8P,IAAAC,IAAA1J,OAOAyJ,GADAtF,EAAA,EAAAA,EAEAuF,GAAAvF,EACAnE,GAAAmE,IAPAsF,EAAA,EACAC,EAAA,EACA1J,EAAA,GAQAzI,EAAA,GAAAgS,EACAhS,EAAA,GAAAkS,EACAlS,EAAA,GAAAoS,EACApS,EAAA,KACAA,EAAA,GAAAiS,EACAjS,EAAA,GAAAmS,EACAnS,EAAA,GAAAqS,EACArS,EAAA,KACAA,EAAA,GAAAwI,EACAxI,EAAA,GAAAyI,EACAzI,EAAA,IAAA0I,EACA1I,EAAA,MACAA,EAAA,MAAAgS,EAAAM,EAAAL,EAAAM,EAAA/J,EAAAgK,GACAxS,EAAA,MAAAkS,EAAAI,EAAAH,EAAAI,EAAA9J,EAAA+J,GACAxS,EAAA,MAAAoS,EAAAE,EAAAD,EAAAE,EAAA7J,EAAA8J,GACAxS,EAAA,MAEAA,GAYO,SAAA+S,GAAA/S,EAAA6R,EAAAmB,EAAAjB,GACP,IAAAO,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GAEAK,EAAAE,EAAAU,EAAA,GACAX,EAAAE,EAAAS,EAAA,GACAtK,EAAA8J,EAAAQ,EAAA,GAEApG,EAAAwF,IAAAC,IAAA3J,IACAkE,EAAA,IAEAwF,GADAxF,EAAA,EAAAxN,KAAAgD,KAAAwK,GAEAyF,GAAAzF,EACAlE,GAAAkE,GAGA,IAAAoF,EAAAU,EAAAhK,EAAAiK,EAAAN,EACAJ,EAAAU,EAAAP,EAAAK,EAAA/J,EACAF,EAAAiK,EAAAJ,EAAAK,EAAAN,EA0BA,OAxBAxF,EAAAoF,IAAAC,IAAAzJ,KACA,IAEAwJ,GADApF,EAAA,EAAAxN,KAAAgD,KAAAwK,GAEAqF,GAAArF,EACApE,GAAAoE,GAGA5M,EAAA,GAAAgS,EACAhS,EAAA,GAAAiS,EACAjS,EAAA,GAAAwI,EACAxI,EAAA,KACAA,EAAA,GAAAqS,EAAA7J,EAAAE,EAAAuJ,EACAjS,EAAA,GAAA0I,EAAAsJ,EAAAI,EAAA5J,EACAxI,EAAA,GAAAoS,EAAAH,EAAAI,EAAAL,EACAhS,EAAA,KACAA,EAAA,GAAAoS,EACApS,EAAA,GAAAqS,EACArS,EAAA,IAAA0I,EACA1I,EAAA,MACAA,EAAA,IAAAsS,EACAtS,EAAA,IAAAuS,EACAvS,EAAA,IAAAwS,EACAxS,EAAA,MACAA,EASO,SAASiT,GAAGtT,GACnB,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,QASO,SAASuT,GAAIvT,GACpB,OAAAP,KAAAgD,KAAAhD,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,MAAAP,KAAAiD,IAAA1C,EAAA,OAAAP,KAAAiD,IAAA1C,EAAA,OAAAP,KAAAiD,IAAA1C,EAAA,OAAAP,KAAAiD,IAAA1C,EAAA,OAAAP,KAAAiD,IAAA1C,EAAA,OAAAP,KAAAiD,IAAA1C,EAAA,QAWO,SAASwT,GAAGnT,EAAAL,EAAAE,GAiBnB,OAhBAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAWO,SAASoT,GAAQpT,EAAAL,EAAAE,GAiBxB,OAhBAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAAA,IAAAL,EAAA,IAAAE,EAAA,IACAG,EAWO,SAASqT,GAAcrT,EAAAL,EAAAE,GAiB9B,OAhBAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,IAAAL,EAAA,IAAAE,EACAG,EAAA,IAAAL,EAAA,IAAAE,EACAG,EAAA,IAAAL,EAAA,IAAAE,EACAG,EAAA,IAAAL,EAAA,IAAAE,EACAG,EAAA,IAAAL,EAAA,IAAAE,EACAG,EAAA,IAAAL,EAAA,IAAAE,EACAG,EAYO,SAASsT,GAAoBtT,EAAAL,EAAAE,EAAAmD,GAiBpC,OAhBAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,IAAAL,EAAA,IAAAE,EAAA,IAAAmD,EACAhD,EAAA,IAAAL,EAAA,IAAAE,EAAA,IAAAmD,EACAhD,EAAA,IAAAL,EAAA,IAAAE,EAAA,IAAAmD,EACAhD,EAAA,IAAAL,EAAA,IAAAE,EAAA,IAAAmD,EACAhD,EAAA,IAAAL,EAAA,IAAAE,EAAA,IAAAmD,EACAhD,EAAA,IAAAL,EAAA,IAAAE,EAAA,IAAAmD,EACAhD,EAUO,SAASuT,GAAW5T,EAAAE,GAC3B,OAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,MAAAE,EAAA,KAAAF,EAAA,MAAAE,EAAA,KAAAF,EAAA,MAAAE,EAAA,KAAAF,EAAA,MAAAE,EAAA,KAAAF,EAAA,MAAAE,EAAA,KAAAF,EAAA,MAAAE,EAAA,IAUO,SAAS2T,GAAM7T,EAAAE,GACtB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAmL,EAAAnL,EAAA,GACAoL,EAAApL,EAAA,GACAqL,EAAArL,EAAA,GACA8T,EAAA9T,EAAA,GACA+G,EAAA/G,EAAA,IACAgH,EAAAhH,EAAA,IACA4G,EAAA5G,EAAA,IACA2J,EAAA3J,EAAA,IACA+T,EAAA/T,EAAA,IACAgU,EAAAhU,EAAA,IAEAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAoL,EAAApL,EAAA,GACAqL,EAAArL,EAAA,GACAsL,EAAAtL,EAAA,GACA+T,EAAA/T,EAAA,GACA0H,EAAA1H,EAAA,IACAmH,EAAAnH,EAAA,IACA2H,EAAA3H,EAAA,IACAgU,EAAAhU,EAAA,IACAiU,EAAAjU,EAAA,IACAkU,EAAAlU,EAAA,IAEA,OAAAT,KAAAU,IAAAe,EAAAO,IAA8BrC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAe,GAAAzB,KAAAU,IAAAsB,KAAAhC,KAAAU,IAAAa,EAAAU,IAAqEtC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAa,GAAAvB,KAAAU,IAAAuB,KAAAjC,KAAAU,IAAAgB,EAAAQ,IAAqEvC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgB,GAAA1B,KAAAU,IAAAwB,KAAAlC,KAAAU,IAAAiB,EAAAQ,IAAqExC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiB,GAAA3B,KAAAU,IAAAyB,KAAAnC,KAAAU,IAAAsE,EAAAE,IAAqEvF,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAsE,GAAAhF,KAAAU,IAAAwE,KAAAlF,KAAAU,IAAAuE,EAAAE,IAAqExF,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAuE,GAAAjF,KAAAU,IAAAyE,KAAAnF,KAAAU,IAAAgL,EAAAG,IAAqElM,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgL,GAAA1L,KAAAU,IAAAmL,KAAA7L,KAAAU,IAAAiL,EAAAG,IAAqEnM,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiL,GAAA3L,KAAAU,IAAAoL,KAAA9L,KAAAU,IAAAkL,EAAAG,IAAqEpM,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAkL,GAAA5L,KAAAU,IAAAqL,KAAA/L,KAAAU,IAAA2T,EAAAG,IAAqE7U,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAA2T,GAAArU,KAAAU,IAAA8T,KAAAxU,KAAAU,IAAA4G,EAAAa,IAAuExI,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAA4G,GAAAtH,KAAAU,IAAAyH,KAAAnI,KAAAU,IAAA6G,EAAAK,IAAyEjI,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAA6G,GAAAvH,KAAAU,IAAAkH,KAAA5H,KAAAU,IAAAyG,EAAAiB,IAAyEzI,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAyG,GAAAnH,KAAAU,IAAA0H,KAAApI,KAAAU,IAAAwJ,EAAAuK,IAAyE9U,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAwJ,GAAAlK,KAAAU,IAAA+T,KAAAzU,KAAAU,IAAA4T,EAAAI,IAAyE/U,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAA4T,GAAAtU,KAAAU,IAAAgU,KAAA1U,KAAAU,IAAA6T,EAAAI,IAAyEhV,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAA6T,GAAAvU,KAAAU,IAAAiU,IAOxzC,IAAIC,GAAMzH,GAMN0H,GAAMb,GCpyDV,SAASc,KAChB,IAAAlU,EAAA,IAAgBhB,EAAmB,GAMnC,OALMA,GAAmBC,eACzBe,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAA,EASO,SAASmU,GAAKxU,GACrB,IAAAK,EAAA,IAAgBhB,EAAmB,GAInC,OAHAgB,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EASO,SAASoU,GAAMzU,GACtB,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACA,OAAAP,KAAAgD,KAAAwF,IAAAC,IAAAS,KAWO,SAAS+L,GAAUzM,EAAAC,EAAAS,GAC1B,IAAAtI,EAAA,IAAgBhB,EAAmB,GAInC,OAHAgB,EAAA,GAAA4H,EACA5H,EAAA,GAAA6H,EACA7H,EAAA,GAAAsI,EACAtI,EAUO,SAASsU,GAAItU,EAAAL,GAIpB,OAHAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAYO,SAASuU,GAAGvU,EAAA4H,EAAAC,EAAAS,GAInB,OAHAtI,EAAA,GAAA4H,EACA5H,EAAA,GAAA6H,EACA7H,EAAA,GAAAsI,EACAtI,EAWO,SAASwU,GAAGxU,EAAAL,EAAAE,GAInB,OAHAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASyU,GAAQzU,EAAAL,EAAAE,GAIxB,OAHAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAAS0U,GAAQ1U,EAAAL,EAAAE,GAIxB,OAHAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAAA2U,GAAA3U,EAAAL,EAAAE,GAIP,OAHAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAUO,SAAA4U,GAAA5U,EAAAL,GAIP,OAHAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAUO,SAAA6U,GAAA7U,EAAAL,GAIP,OAHAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAWO,SAAA8U,GAAA9U,EAAAL,EAAAE,GAIP,OAHAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAWO,SAAAD,GAAAC,EAAAL,EAAAE,GAIP,OAHAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAUO,SAAA+U,GAAA/U,EAAAL,GAIP,OAHAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAWO,SAASgV,GAAKhV,EAAAL,EAAAE,GAIrB,OAHAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAYO,SAAAiV,GAAAjV,EAAAL,EAAAE,EAAAmD,GAIP,OAHAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAUO,SAAAkV,GAAAvV,EAAAE,GACP,IAAA+H,EAAA/H,EAAA,GAAAF,EAAA,GACAkI,EAAAhI,EAAA,GAAAF,EAAA,GACA2I,EAAAzI,EAAA,GAAAF,EAAA,GACA,OAAAP,KAAAgD,KAAAwF,IAAAC,IAAAS,KAUO,SAAA6M,GAAAxV,EAAAE,GACP,IAAA+H,EAAA/H,EAAA,GAAAF,EAAA,GACAkI,EAAAhI,EAAA,GAAAF,EAAA,GACA2I,EAAAzI,EAAA,GAAAF,EAAA,GACA,OAAAiI,IAAAC,IAAAS,IASO,SAAA8M,GAAAzV,GACP,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACA,OAAAiI,IAAAC,IAAAS,IAUO,SAAA+M,GAAArV,EAAAL,GAIP,OAHAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAUO,SAAAsV,GAAAtV,EAAAL,GAIP,OAHAK,EAAA,KAAAL,EAAA,GACAK,EAAA,KAAAL,EAAA,GACAK,EAAA,KAAAL,EAAA,GACAK,EAUO,SAAAuV,GAAAvV,EAAAL,GACP,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACAiN,EAAAhF,IAAAC,IAAAS,IAQA,OAPAsE,EAAA,IAEAA,EAAA,EAAAxN,KAAAgD,KAAAwK,GACA5M,EAAA,GAAAL,EAAA,GAAAiN,EACA5M,EAAA,GAAAL,EAAA,GAAAiN,EACA5M,EAAA,GAAAL,EAAA,GAAAiN,GAEA5M,EAUO,SAASwV,GAAG7V,EAAAE,GACnB,OAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAWO,SAAA4V,GAAAzV,EAAAL,EAAAE,GACP,IAAAmO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAiO,EAAA/N,EAAA,GACAgO,EAAAhO,EAAA,GACAiO,EAAAjO,EAAA,GAKA,OAHAG,EAAA,GAAAiO,EAAAH,EAAAI,EAAAL,EACA7N,EAAA,GAAAkO,EAAAN,EAAAI,EAAAF,EACA9N,EAAA,GAAAgO,EAAAH,EAAAI,EAAAL,EACA5N,EAYO,SAAA0V,GAAA1V,EAAAL,EAAAE,EAAA5B,GACP,IAAA+P,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GAIA,OAHAK,EAAA,GAAAgO,EAAA/P,GAAA4B,EAAA,GAAAmO,GACAhO,EAAA,GAAAiO,EAAAhQ,GAAA4B,EAAA,GAAAoO,GACAjO,EAAA,GAAAkO,EAAAjQ,GAAA4B,EAAA,GAAAqO,GACAlO,EAcO,SAAA2V,GAAA3V,EAAAL,EAAAE,EAAAzC,EAAAC,EAAAY,GACP,IAAA2X,EAAA3X,IACA4X,EAAAD,GAAA,EAAA3X,EAAA,KACA6X,EAAAF,GAAA3X,EAAA,GAAAA,EACA8X,EAAAH,GAAA3X,EAAA,GACA+X,EAAAJ,GAAA,IAAA3X,GAMA,OAJA+B,EAAA,GAAAL,EAAA,GAAAkW,EAAAhW,EAAA,GAAAiW,EAAA1Y,EAAA,GAAA2Y,EAAA1Y,EAAA,GAAA2Y,EACAhW,EAAA,GAAAL,EAAA,GAAAkW,EAAAhW,EAAA,GAAAiW,EAAA1Y,EAAA,GAAA2Y,EAAA1Y,EAAA,GAAA2Y,EACAhW,EAAA,GAAAL,EAAA,GAAAkW,EAAAhW,EAAA,GAAAiW,EAAA1Y,EAAA,GAAA2Y,EAAA1Y,EAAA,GAAA2Y,EAEAhW,EAcO,SAAAiW,GAAAjW,EAAAL,EAAAE,EAAAzC,EAAAC,EAAAY,GACP,IAAAiY,EAAA,EAAAjY,EACAkY,EAAAD,IACAN,EAAA3X,IACA4X,EAAAM,EAAAD,EACAJ,EAAA,EAAA7X,EAAAkY,EACAJ,EAAA,EAAAH,EAAAM,EACAF,EAAAJ,EAAA3X,EAMA,OAJA+B,EAAA,GAAAL,EAAA,GAAAkW,EAAAhW,EAAA,GAAAiW,EAAA1Y,EAAA,GAAA2Y,EAAA1Y,EAAA,GAAA2Y,EACAhW,EAAA,GAAAL,EAAA,GAAAkW,EAAAhW,EAAA,GAAAiW,EAAA1Y,EAAA,GAAA2Y,EAAA1Y,EAAA,GAAA2Y,EACAhW,EAAA,GAAAL,EAAA,GAAAkW,EAAAhW,EAAA,GAAAiW,EAAA1Y,EAAA,GAAA2Y,EAAA1Y,EAAA,GAAA2Y,EAEAhW,EAUO,SAAAX,GAAAW,EAAAgD,GACPA,KAAA,EAEA,IAAAnF,EAAyB,EAAfsB,IAAeC,KAAAK,GACzB6I,EAAyB,EAAfnJ,IAAe,EACzBiX,EAAAhX,KAAAgD,KAAA,EAAAkG,KAAAtF,EAKA,OAHAhD,EAAA,GAAAZ,KAAAuC,IAAA9D,GAAAuY,EACApW,EAAA,GAAAZ,KAAAsC,IAAA7D,GAAAuY,EACApW,EAAA,GAAAsI,EAAAtF,EACAhD,EAYO,SAAAqW,GAAArW,EAAAL,EAAAxC,GACP,IAAAyK,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACA4I,EAAApL,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,IAAAmL,EAAAnL,EAAA,IAKA,OAJAoL,KAAA,EACAvI,EAAA,IAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAAmL,EAAAnL,EAAA,KAAAoL,EACAvI,EAAA,IAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAAmL,EAAAnL,EAAA,KAAAoL,EACAvI,EAAA,IAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,IAAAmL,EAAAnL,EAAA,KAAAoL,EACAvI,EAWO,SAAAsW,GAAAtW,EAAAL,EAAAxC,GACP,IAAAyK,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GAIA,OAHAK,EAAA,GAAA4H,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAAmL,EAAAnL,EAAA,GACA6C,EAAA,GAAA4H,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAAmL,EAAAnL,EAAA,GACA6C,EAAA,GAAA4H,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAAmL,EAAAnL,EAAA,GACA6C,EAYO,SAAAuW,GAAAvW,EAAAL,EAAA0I,GAEP,IAAAmO,EAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAT,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GAGAiX,EAAAH,EAAAnO,EAAAoO,EAAA7O,EACAgP,EAAAH,EAAA9O,EAAA4O,EAAAlO,EACAwO,EAAAN,EAAA3O,EAAA4O,EAAA7O,EAEAmP,EAAAN,EAAAK,EAAAJ,EAAAG,EACAG,EAAAN,EAAAE,EAAAJ,EAAAM,EACAG,EAAAT,EAAAK,EAAAJ,EAAAG,EAEAM,EAAA,EAAAP,EAYA,OAXAC,GAAAM,EACAL,GAAAK,EACAJ,GAAAI,EAEAH,GAAA,EACAC,GAAA,EACAC,GAAA,EAEAjX,EAAA,GAAA4H,EAAAgP,EAAAG,EACA/W,EAAA,GAAA6H,EAAAgP,EAAAG,EACAhX,EAAA,GAAAsI,EAAAwO,EAAAG,EACAjX,EAWO,SAASmX,GAAOnX,EAAAL,EAAAE,EAAAzC,GACvB,IAAAyB,EAAA,GACAhB,EAAA,GAgBA,OAdAgB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GACAhB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GACAhB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GAGAhC,EAAA,GAAAgB,EAAA,GACAhB,EAAA,GAAAgB,EAAA,GAAAO,KAAAuC,IAAAvE,GAAAyB,EAAA,GAAAO,KAAAsC,IAAAtE,GACAS,EAAA,GAAAgB,EAAA,GAAAO,KAAAsC,IAAAtE,GAAAyB,EAAA,GAAAO,KAAAuC,IAAAvE,GAGA4C,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GACAG,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GACAG,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GAEAG,EAWO,SAASoX,GAAOpX,EAAAL,EAAAE,EAAAzC,GACvB,IAAAyB,EAAA,GACAhB,EAAA,GAgBA,OAdAgB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GACAhB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GACAhB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GAGAhC,EAAA,GAAAgB,EAAA,GAAAO,KAAAsC,IAAAtE,GAAAyB,EAAA,GAAAO,KAAAuC,IAAAvE,GACAS,EAAA,GAAAgB,EAAA,GACAhB,EAAA,GAAAgB,EAAA,GAAAO,KAAAuC,IAAAvE,GAAAyB,EAAA,GAAAO,KAAAsC,IAAAtE,GAGA4C,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GACAG,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GACAG,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GAEAG,EAWO,SAASqX,GAAOrX,EAAAL,EAAAE,EAAAzC,GACvB,IAAAyB,EAAA,GACAhB,EAAA,GAgBA,OAdAgB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GACAhB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GACAhB,EAAA,GAAAc,EAAA,GAAAE,EAAA,GAGAhC,EAAA,GAAAgB,EAAA,GAAAO,KAAAuC,IAAAvE,GAAAyB,EAAA,GAAAO,KAAAsC,IAAAtE,GACAS,EAAA,GAAAgB,EAAA,GAAAO,KAAAsC,IAAAtE,GAAAyB,EAAA,GAAAO,KAAAuC,IAAAvE,GACAS,EAAA,GAAAgB,EAAA,GAGAmB,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GACAG,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GACAG,EAAA,GAAAnC,EAAA,GAAAgC,EAAA,GAEAG,EASO,SAAAsX,GAAA3X,EAAAE,GACP,IAAA0X,EAAclD,GAAU1U,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACxB6X,EAAcnD,GAAUxU,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAExB0V,GAAAgC,KACAhC,GAAAiC,KAEA,IAAAC,EAAejC,GAAG+B,EAAAC,GAElB,OAAAC,EAAA,EACA,EACGA,GAAA,EACHrY,KAAAK,GAEAL,KAAAsY,KAAAD,GAUO,SAASE,GAAGhY,GACnB,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAUO,SAASiY,GAAWjY,EAAAE,GAC3B,OAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,GAUO,SAASgY,GAAMlY,EAAAE,GACtB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA,OAAAT,KAAAU,IAAAe,EAAAO,IAA8BrC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAe,GAAAzB,KAAAU,IAAAsB,KAAAhC,KAAAU,IAAAa,EAAAU,IAAqEtC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAa,GAAAvB,KAAAU,IAAAuB,KAAAjC,KAAAU,IAAAgB,EAAAQ,IAAqEvC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgB,GAAA1B,KAAAU,IAAAwB,IAOjN,IAmDPwW,GAnDWC,GAAMtD,GAMNuD,GAAMtD,GAMVuD,GAAAtD,GAMAuD,GAAAhD,GAMAiD,GAAAhD,GAMIiD,GAAMhE,GAMViE,GAAAjD,GAcAkD,IACPR,GAAY5D,KAEZ,SAAAvU,EAAA4Y,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA5b,OAAA,EACAC,OAAA,EAeA,IAdAub,IACAA,EAAA,GAGAC,IACAA,EAAA,GAIAxb,EADAyb,EACArZ,KAAA0V,IAAA2D,EAAAF,EAAAC,EAAA7Y,EAAAiZ,QAEAjZ,EAAAiZ,OAGA7b,EAAAyb,EAAoBzb,EAAAC,EAAOD,GAAAwb,EAC3BT,GAAA,GAAAnY,EAAA5C,GAAoB+a,GAAA,GAAAnY,EAAA5C,EAAA,GAAkB+a,GAAA,GAAAnY,EAAA5C,EAAA,GACtC2b,EAAAZ,MAAAa,GACAhZ,EAAA5C,GAAA+a,GAAA,GAAoBnY,EAAA5C,EAAA,GAAA+a,GAAA,GAAkBnY,EAAA5C,EAAA,GAAA+a,GAAA,GAGtC,OAAAnY,ICpwBO,SAASkZ,KAChB,IAAA7Y,EAAA,IAAgBhB,EAAmB,GAOnC,OANMA,GAAmBC,eACzBe,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAA,EASO,SAAS8Y,GAAKnZ,GACrB,IAAAK,EAAA,IAAgBhB,EAAmB,GAKnC,OAJAgB,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAYO,SAAS+Y,GAAUnR,EAAAC,EAAAS,EAAAC,GAC1B,IAAAvI,EAAA,IAAgBhB,EAAmB,GAKnC,OAJAgB,EAAA,GAAA4H,EACA5H,EAAA,GAAA6H,EACA7H,EAAA,GAAAsI,EACAtI,EAAA,GAAAuI,EACAvI,EAUO,SAASgZ,GAAIhZ,EAAAL,GAKpB,OAJAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAaO,SAASiZ,GAAGjZ,EAAA4H,EAAAC,EAAAS,EAAAC,GAKnB,OAJAvI,EAAA,GAAA4H,EACA5H,EAAA,GAAA6H,EACA7H,EAAA,GAAAsI,EACAtI,EAAA,GAAAuI,EACAvI,EAWO,SAASkZ,GAAGlZ,EAAAL,EAAAE,GAKnB,OAJAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASmZ,GAAQnZ,EAAAL,EAAAE,GAKxB,OAJAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASoZ,GAAQpZ,EAAAL,EAAAE,GAKxB,OAJAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASqZ,GAAMrZ,EAAAL,EAAAE,GAKtB,OAJAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAUO,SAASsZ,GAAItZ,EAAAL,GAKpB,OAJAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAUO,SAASuZ,GAAKvZ,EAAAL,GAKrB,OAJAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAWO,SAASwZ,GAAGxZ,EAAAL,EAAAE,GAKnB,OAJAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAWO,SAASyZ,GAAGzZ,EAAAL,EAAAE,GAKnB,OAJAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAUO,SAAS0Z,GAAK1Z,EAAAL,GAKrB,OAJAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAWO,SAAS2Z,GAAK3Z,EAAAL,EAAAE,GAKrB,OAJAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAYO,SAAS4Z,GAAW5Z,EAAAL,EAAAE,EAAAmD,GAK3B,OAJAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAUO,SAAS6Z,GAAQla,EAAAE,GACxB,IAAA+H,EAAA/H,EAAA,GAAAF,EAAA,GACAkI,EAAAhI,EAAA,GAAAF,EAAA,GACA2I,EAAAzI,EAAA,GAAAF,EAAA,GACA4I,EAAA1I,EAAA,GAAAF,EAAA,GACA,OAAAP,KAAAgD,KAAAwF,IAAAC,IAAAS,IAAAC,KAUO,SAASuR,GAAena,EAAAE,GAC/B,IAAA+H,EAAA/H,EAAA,GAAAF,EAAA,GACAkI,EAAAhI,EAAA,GAAAF,EAAA,GACA2I,EAAAzI,EAAA,GAAAF,EAAA,GACA4I,EAAA1I,EAAA,GAAAF,EAAA,GACA,OAAAiI,IAAAC,IAAAS,IAAAC,IASO,SAASwR,GAAMpa,GACtB,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACA4I,EAAA5I,EAAA,GACA,OAAAP,KAAAgD,KAAAwF,IAAAC,IAAAS,IAAAC,KASO,SAASyR,GAAara,GAC7B,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACA4I,EAAA5I,EAAA,GACA,OAAAiI,IAAAC,IAAAS,IAAAC,IAUO,SAAS0R,GAAMja,EAAAL,GAKtB,OAJAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAUO,SAASka,GAAOla,EAAAL,GAKvB,OAJAK,EAAA,KAAAL,EAAA,GACAK,EAAA,KAAAL,EAAA,GACAK,EAAA,KAAAL,EAAA,GACAK,EAAA,KAAAL,EAAA,GACAK,EAUO,SAASma,GAASna,EAAAL,GACzB,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACA4I,EAAA5I,EAAA,GACAiN,EAAAhF,IAAAC,IAAAS,IAAAC,IAQA,OAPAqE,EAAA,IACAA,EAAA,EAAAxN,KAAAgD,KAAAwK,GACA5M,EAAA,GAAA4H,EAAAgF,EACA5M,EAAA,GAAA6H,EAAA+E,EACA5M,EAAA,GAAAsI,EAAAsE,EACA5M,EAAA,GAAAuI,EAAAqE,GAEA5M,EAUO,SAASoa,GAAGza,EAAAE,GACnB,OAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAYO,SAASwa,GAAIra,EAAAL,EAAAE,EAAA5B,GACpB,IAAA+P,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GAKA,OAJAK,EAAA,GAAAgO,EAAA/P,GAAA4B,EAAA,GAAAmO,GACAhO,EAAA,GAAAiO,EAAAhQ,GAAA4B,EAAA,GAAAoO,GACAjO,EAAA,GAAAkO,EAAAjQ,GAAA4B,EAAA,GAAAqO,GACAlO,EAAA,GAAAmO,EAAAlQ,GAAA4B,EAAA,GAAAsO,GACAnO,EAUO,SAASsa,GAAMta,EAAAgD,GAMtB,IAAAjB,EAAAwY,EAAAC,EAAAC,EACAC,EAAAC,EANA3X,KAAA,EAOA,GAGA0X,GAFA3Y,EAAwB,EAAf5C,IAAe,GAExB4C,GADAwY,EAAwB,EAAfpb,IAAe,GACxBob,QACGG,GAAA,GACH,GAGAC,GAFAH,EAAwB,EAAfrb,IAAe,GAExBqb,GADAC,EAAwB,EAAftb,IAAe,GACxBsb,QACGE,GAAA,GAEH,IAAAtd,EAAA+B,KAAAgD,MAAA,EAAAsY,GAAAC,GAKA,OAJA3a,EAAA,GAAAgD,EAAAjB,EACA/B,EAAA,GAAAgD,EAAAuX,EACAva,EAAA,GAAAgD,EAAAwX,EAAAnd,EACA2C,EAAA,GAAAgD,EAAAyX,EAAApd,EACA2C,EAWO,SAAS4a,GAAa5a,EAAAL,EAAAxC,GAC7B,IAAAyK,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACA4I,EAAA5I,EAAA,GAKA,OAJAK,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAAmL,EAAAnL,EAAA,IAAAoL,EACAvI,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAAmL,EAAAnL,EAAA,IAAAoL,EACAvI,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,IAAAmL,EAAAnL,EAAA,IAAAoL,EACAvI,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,IAAAmL,EAAAnL,EAAA,IAAAoL,EACAvI,EAWO,SAAS6a,GAAa7a,EAAAL,EAAA0I,GAC7B,IAAAT,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GACA6W,EAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GAGAyS,EAAAnE,EAAA/O,EAAA6O,EAAAnO,EAAAoO,EAAA7O,EACAkT,EAAApE,EAAA9O,EAAA6O,EAAA9O,EAAA4O,EAAAlO,EACA0S,EAAArE,EAAArO,EAAAkO,EAAA3O,EAAA4O,EAAA7O,EACAqT,GAAAzE,EAAA5O,EAAA6O,EAAA5O,EAAA6O,EAAApO,EAOA,OAJAtI,EAAA,GAAA8a,EAAAnE,EAAAsE,GAAAzE,EAAAuE,GAAArE,EAAAsE,GAAAvE,EACAzW,EAAA,GAAA+a,EAAApE,EAAAsE,GAAAxE,EAAAuE,GAAAxE,EAAAsE,GAAApE,EACA1W,EAAA,GAAAgb,EAAArE,EAAAsE,GAAAvE,EAAAoE,GAAArE,EAAAsE,GAAAvE,EACAxW,EAAA,GAAAL,EAAA,GACAK,EASO,SAASkb,GAAGvb,GACnB,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAUO,SAASwb,GAAWxb,EAAAE,GAC3B,OAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,GAUO,SAASub,GAAMzb,EAAAE,GACtB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACA,OAAAT,KAAAU,IAAAe,EAAAO,IAA8BrC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAe,GAAAzB,KAAAU,IAAAsB,KAAAhC,KAAAU,IAAAa,EAAAU,IAAqEtC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAa,GAAAvB,KAAAU,IAAAuB,KAAAjC,KAAAU,IAAAgB,EAAAQ,IAAqEvC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgB,GAAA1B,KAAAU,IAAAwB,KAAAlC,KAAAU,IAAAiB,EAAAQ,IAAqExC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiB,GAAA3B,KAAAU,IAAAyB,IAOtS,IAAI8Z,GAAMlC,GAMNmC,GAAMlC,GAMNmC,GAAMlC,GAMNmC,GAAO3B,GAMP4B,GAAU3B,GAMV4B,GAAM3B,GAMN4B,GAAS3B,GAcT4B,GAAO,WAClB,IAAA9D,EAAYe,KAEZ,gBAAAlZ,EAAA4Y,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA5b,OAAA,EACAC,OAAA,EAeA,IAdAub,IACAA,EAAA,GAGAC,IACAA,EAAA,GAIAxb,EADAyb,EACArZ,KAAA0V,IAAA2D,EAAAF,EAAAC,EAAA7Y,EAAAiZ,QAEAjZ,EAAAiZ,OAGA7b,EAAAyb,EAAoBzb,EAAAC,EAAOD,GAAAwb,EAC3BT,EAAA,GAAAnY,EAAA5C,GAAoB+a,EAAA,GAAAnY,EAAA5C,EAAA,GAAkB+a,EAAA,GAAAnY,EAAA5C,EAAA,GAAkB+a,EAAA,GAAAnY,EAAA5C,EAAA,GACxD2b,EAAAZ,IAAAa,GACAhZ,EAAA5C,GAAA+a,EAAA,GAAoBnY,EAAA5C,EAAA,GAAA+a,EAAA,GAAkBnY,EAAA5C,EAAA,GAAA+a,EAAA,GAAkBnY,EAAA5C,EAAA,GAAA+a,EAAA,GAGxD,OAAAnY,GA1BkB,GC1jBX,SAASkc,KAChB,IAAA7b,EAAA,IAAgBhB,EAAmB,GAOnC,OANMA,GAAmBC,eACzBe,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAA,EAAA,KACAA,EASO,SAAS8b,GAAQ9b,GAKxB,OAJAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAYO,SAAA+b,GAAA/b,EAAA2M,EAAAlL,GACPA,GAAA,GACA,IAAA3C,EAAAM,KAAAsC,IAAAD,GAKA,OAJAzB,EAAA,GAAAlB,EAAA6N,EAAA,GACA3M,EAAA,GAAAlB,EAAA6N,EAAA,GACA3M,EAAA,GAAAlB,EAAA6N,EAAA,GACA3M,EAAA,GAAAZ,KAAAuC,IAAAF,GACAzB,EAgBO,SAAAgc,GAAAC,EAAA5T,GACP,IAAA5G,EAAA,EAAArC,KAAAsY,KAAArP,EAAA,IACAvJ,EAAAM,KAAAsC,IAAAD,EAAA,GAWA,OAVA3C,EAAUC,GACVkd,EAAA,GAAA5T,EAAA,GAAAvJ,EACAmd,EAAA,GAAA5T,EAAA,GAAAvJ,EACAmd,EAAA,GAAA5T,EAAA,GAAAvJ,IAGAmd,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAxa,EAWO,SAASya,GAAQlc,EAAAL,EAAAE,GACxB,IAAAmO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAiO,EAAA/N,EAAA,GACAgO,EAAAhO,EAAA,GACAiO,EAAAjO,EAAA,GACAkO,EAAAlO,EAAA,GAMA,OAJAG,EAAA,GAAAgO,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACA7N,EAAA,GAAAiO,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACA9N,EAAA,GAAAkO,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACA5N,EAAA,GAAAmO,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EACA9N,EAWO,SAASmc,GAAOnc,EAAAL,EAAA8B,GACvBA,GAAA,GAEA,IAAAuM,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAiO,EAAAxO,KAAAsC,IAAAD,GACAsM,EAAA3O,KAAAuC,IAAAF,GAMA,OAJAzB,EAAA,GAAAgO,EAAAD,EAAAI,EAAAP,EACA5N,EAAA,GAAAiO,EAAAF,EAAAG,EAAAN,EACA5N,EAAA,GAAAkO,EAAAH,EAAAE,EAAAL,EACA5N,EAAA,GAAAmO,EAAAJ,EAAAC,EAAAJ,EACA5N,EAWO,SAASoc,GAAOpc,EAAAL,EAAA8B,GACvBA,GAAA,GAEA,IAAAuM,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAkO,EAAAzO,KAAAsC,IAAAD,GACAsM,EAAA3O,KAAAuC,IAAAF,GAMA,OAJAzB,EAAA,GAAAgO,EAAAD,EAAAG,EAAAL,EACA7N,EAAA,GAAAiO,EAAAF,EAAAI,EAAAN,EACA7N,EAAA,GAAAkO,EAAAH,EAAAC,EAAAH,EACA7N,EAAA,GAAAmO,EAAAJ,EAAAE,EAAAJ,EACA7N,EAWO,SAASqc,GAAOrc,EAAAL,EAAA8B,GACvBA,GAAA,GAEA,IAAAuM,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAmO,EAAA1O,KAAAsC,IAAAD,GACAsM,EAAA3O,KAAAuC,IAAAF,GAMA,OAJAzB,EAAA,GAAAgO,EAAAD,EAAAE,EAAAH,EACA9N,EAAA,GAAAiO,EAAAF,EAAAC,EAAAF,EACA9N,EAAA,GAAAkO,EAAAH,EAAAI,EAAAL,EACA9N,EAAA,GAAAmO,EAAAJ,EAAAG,EAAAJ,EACA9N,EAYO,SAAAsc,GAAAtc,EAAAL,GACP,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA2I,EAAA3I,EAAA,GAMA,OAJAK,EAAA,GAAA4H,EACA5H,EAAA,GAAA6H,EACA7H,EAAA,GAAAsI,EACAtI,EAAA,GAAAZ,KAAAgD,KAAAhD,KAAAU,IAAA,EAAA8H,IAAAC,IAAAS,MACAtI,EAYO,SAAAuc,GAAAvc,EAAAL,EAAAE,EAAA5B,GAGP,IAAA+P,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAiO,EAAA/N,EAAA,GACAgO,EAAAhO,EAAA,GACAiO,EAAAjO,EAAA,GACAkO,EAAAlO,EAAA,GAEA2c,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EA+BA,OA5BAH,EAAAzO,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,GAEA,IACA0O,KACA7O,KACAC,KACAC,KACAC,MAGA,EAAA0O,EAAoB1d,GAEpByd,EAAApd,KAAAsY,KAAA+E,GACAC,EAAAtd,KAAAsC,IAAA8a,GACAG,EAAAvd,KAAAsC,KAAA,EAAAzD,GAAAue,GAAAE,EACAE,EAAAxd,KAAAsC,IAAAzD,EAAAue,GAAAE,IAIAC,EAAA,EAAA1e,EACA2e,EAAA3e,GAGA+B,EAAA,GAAA2c,EAAA3O,EAAA4O,EAAAhP,EACA5N,EAAA,GAAA2c,EAAA1O,EAAA2O,EAAA/O,EACA7N,EAAA,GAAA2c,EAAAzO,EAAA0O,EAAA9O,EACA9N,EAAA,GAAA2c,EAAAxO,EAAAyO,EAAA7O,EAEA/N,EASO,SAAS6c,GAAM7c,GAGtB,IAAA8c,EAAW3d,IACX4d,EAAW5d,IACX6d,EAAW7d,IAEX8d,EAAA7d,KAAAgD,KAAA,EAAA0a,GACAI,EAAA9d,KAAAgD,KAAA0a,GAMA,OAJA9c,EAAA,GAAAid,EAAA7d,KAAAsC,IAAA,EAAAtC,KAAAK,GAAAsd,GACA/c,EAAA,GAAAid,EAAA7d,KAAAuC,IAAA,EAAAvC,KAAAK,GAAAsd,GACA/c,EAAA,GAAAkd,EAAA9d,KAAAsC,IAAA,EAAAtC,KAAAK,GAAAud,GACAhd,EAAA,GAAAkd,EAAA9d,KAAAuC,IAAA,EAAAvC,KAAAK,GAAAud,GACAhd,EAUO,SAASmd,GAAMnd,EAAAL,GACtB,IAAAkB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyd,EAAAvc,IAAAF,IAAAG,IAAAC,IACAsc,EAAAD,EAAA,EAAAA,EAAA,EAQA,OAJApd,EAAA,IAAAa,EAAAwc,EACArd,EAAA,IAAAW,EAAA0c,EACArd,EAAA,IAAAc,EAAAuc,EACArd,EAAA,GAAAe,EAAAsc,EACArd,EAWO,SAAAsd,GAAAtd,EAAAL,GAKP,OAJAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAcO,SAAAud,GAAAvd,EAAA7C,GAGP,IAAAqgB,EAAArgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAsgB,OAAA,EAEA,GAAAD,EAAA,EAEAC,EAAAre,KAAAgD,KAAAob,EAAA,GACAxd,EAAA,MAAAyd,EACAA,EAAA,GAAAA,EACAzd,EAAA,IAAA7C,EAAA,GAAAA,EAAA,IAAAsgB,EACAzd,EAAA,IAAA7C,EAAA,GAAAA,EAAA,IAAAsgB,EACAzd,EAAA,IAAA7C,EAAA,GAAAA,EAAA,IAAAsgB,MACG,CAEH,IAAA1gB,EAAA,EACAI,EAAA,GAAAA,EAAA,KAAAJ,EAAA,GACAI,EAAA,GAAAA,EAAA,EAAAJ,SAAA,GACA,IAAA2gB,GAAA3gB,EAAA,KACA4gB,GAAA5gB,EAAA,KAEA0gB,EAAAre,KAAAgD,KAAAjF,EAAA,EAAAJ,KAAAI,EAAA,EAAAugB,KAAAvgB,EAAA,EAAAwgB,KAAA,GACA3d,EAAAjD,GAAA,GAAA0gB,EACAA,EAAA,GAAAA,EACAzd,EAAA,IAAA7C,EAAA,EAAAugB,EAAAC,GAAAxgB,EAAA,EAAAwgB,EAAAD,IAAAD,EACAzd,EAAA0d,IAAAvgB,EAAA,EAAAugB,EAAA3gB,GAAAI,EAAA,EAAAJ,EAAA2gB,IAAAD,EACAzd,EAAA2d,IAAAxgB,EAAA,EAAAwgB,EAAA5gB,GAAAI,EAAA,EAAAJ,EAAA4gB,IAAAF,EAGA,OAAAzd,EAaO,SAAA4d,GAAA5d,EAAA4H,EAAAC,EAAAS,GACP,IAAAuV,EAAA,GAAAze,KAAAK,GAAA,IACAmI,GAAAiW,EACAhW,GAAAgW,EACAvV,GAAAuV,EAEA,IAAAjP,EAAAxP,KAAAsC,IAAAkG,GACAkW,EAAA1e,KAAAuC,IAAAiG,GACAiH,EAAAzP,KAAAsC,IAAAmG,GACAkW,EAAA3e,KAAAuC,IAAAkG,GACAiH,EAAA1P,KAAAsC,IAAA4G,GACA0V,EAAA5e,KAAAuC,IAAA2G,GAOA,OALAtI,EAAA,GAAA4O,EAAAmP,EAAAC,EAAAF,EAAAjP,EAAAC,EACA9O,EAAA,GAAA8d,EAAAjP,EAAAmP,EAAApP,EAAAmP,EAAAjP,EACA9O,EAAA,GAAA8d,EAAAC,EAAAjP,EAAAF,EAAAC,EAAAmP,EACAhe,EAAA,GAAA8d,EAAAC,EAAAC,EAAApP,EAAAC,EAAAC,EAEA9O,EASO,SAASie,GAAGte,GACnB,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAUO,IA4JPue,GACAC,GACAC,GAuCAC,GACAC,GAsBAC,GA5NWC,GAAQ1F,GAYR2F,GAAa1F,GAUb2F,GAAO1F,GAaP2F,GAAM1F,GAWN2F,GAAM1F,GAMN2F,GAAM3C,GAWN4C,GAAQnF,GAURoF,GAAM3E,GAYN4E,GAAO3E,GAQP4E,GAASlF,GAMTmF,GAAMD,GASNE,GAAgBnF,GAMhBoF,GAASD,GAUTE,GAAYlF,GASZmF,GAAcnE,GASdoE,GAASnE,GAaboE,IACPtB,GAAgBhK,KAChBiK,GAAkB9J,GAAe,OACjC+J,GAAkB/J,GAAe,OAEjC,SAAArU,EAAAL,EAAAE,GACA,IAAAud,EAAc5H,GAAQ7V,EAAAE,GACtB,OAAAud,GAAA,SACM3H,GAAUyI,GAAAC,GAAAxe,GACNyY,GAAQ8F,IAAA,MAAsBzI,GAAUyI,GAAAE,GAAAze,GAC5C4V,GAAc2I,OACpBnC,GAAA/b,EAAAke,GAAA9e,KAAAK,IACAO,GACKod,EAAA,SACLpd,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,IAEMyV,GAAUyI,GAAAve,EAAAE,GAChBG,EAAA,GAAAke,GAAA,GACAle,EAAA,GAAAke,GAAA,GACAle,EAAA,GAAAke,GAAA,GACAle,EAAA,KAAAod,EACaiC,GAASrf,QAgBfyf,IACPpB,GAAcxC,KACdyC,GAAczC,KAEd,SAAA7b,EAAAL,EAAAE,EAAAzC,EAAAC,EAAAY,GAKA,OAJAse,GAAA8B,GAAA1e,EAAAtC,EAAAY,GACAse,GAAA+B,GAAAze,EAAAzC,EAAAa,GACAse,GAAAvc,EAAAqe,GAAAC,GAAA,EAAArgB,GAAA,EAAAA,IAEA+B,IAcO0f,IACPnB,GAAa/Y,KAEb,SAAAxF,EAAA2f,EAAA5P,EAAAgC,GAaA,OAZAwM,GAAA,GAAAxO,EAAA,GACAwO,GAAA,GAAAxO,EAAA,GACAwO,GAAA,GAAAxO,EAAA,GAEAwO,GAAA,GAAAxM,EAAA,GACAwM,GAAA,GAAAxM,EAAA,GACAwM,GAAA,GAAAxM,EAAA,GAEAwM,GAAA,IAAAoB,EAAA,GACApB,GAAA,IAAAoB,EAAA,GACApB,GAAA,IAAAoB,EAAA,GAEWN,GAASrf,EAAAud,GAAAvd,EAAAue,OCjoBb,SAASqB,KAChB,IAAAC,EAAA,IAAe7gB,EAAmB,GAWlC,OAVMA,GAAmBC,eACzB4gB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAA,EAAA,KACAA,EAUO,SAASC,GAAKngB,GACrB,IAAAkgB,EAAA,IAAe7gB,EAAmB,GASlC,OARA6gB,EAAA,GAAAlgB,EAAA,GACAkgB,EAAA,GAAAlgB,EAAA,GACAkgB,EAAA,GAAAlgB,EAAA,GACAkgB,EAAA,GAAAlgB,EAAA,GACAkgB,EAAA,GAAAlgB,EAAA,GACAkgB,EAAA,GAAAlgB,EAAA,GACAkgB,EAAA,GAAAlgB,EAAA,GACAkgB,EAAA,GAAAlgB,EAAA,GACAkgB,EAiBO,SAASE,GAAU9N,EAAAE,EAAAE,EAAA2N,EAAAxX,EAAAC,EAAAC,EAAAwO,GAC1B,IAAA2I,EAAA,IAAe7gB,EAAmB,GASlC,OARA6gB,EAAA,GAAA5N,EACA4N,EAAA,GAAA1N,EACA0N,EAAA,GAAAxN,EACAwN,EAAA,GAAAG,EACAH,EAAA,GAAArX,EACAqX,EAAA,GAAApX,EACAoX,EAAA,GAAAnX,EACAmX,EAAA,GAAA3I,EACA2I,EAgBO,SAAAI,GAAAhO,EAAAE,EAAAE,EAAA2N,EAAAxX,EAAAC,EAAAC,GACP,IAAAmX,EAAA,IAAe7gB,EAAmB,GAClC6gB,EAAA,GAAA5N,EACA4N,EAAA,GAAA1N,EACA0N,EAAA,GAAAxN,EACAwN,EAAA,GAAAG,EACA,IAAAhS,EAAA,GAAAxF,EACAyF,EAAA,GAAAxF,EACAyF,EAAA,GAAAxF,EAKA,OAJAmX,EAAA,GAAA7R,EAAAgS,EAAA/R,EAAAoE,EAAAnE,EAAAiE,EACA0N,EAAA,GAAA5R,EAAA+R,EAAA9R,EAAA+D,EAAAjE,EAAAqE,EACAwN,EAAA,GAAA3R,EAAA8R,EAAAhS,EAAAmE,EAAAlE,EAAAgE,EACA4N,EAAA,IAAA7R,EAAAiE,EAAAhE,EAAAkE,EAAAjE,EAAAmE,EACAwN,EAYO,SAASK,GAAuBlgB,EAAAqI,EAAApK,GACvC,IAAA+P,EAAA,GAAA/P,EAAA,GACAgQ,EAAA,GAAAhQ,EAAA,GACAiQ,EAAA,GAAAjQ,EAAA,GACA2P,EAAAvF,EAAA,GACAwF,EAAAxF,EAAA,GACAyF,EAAAzF,EAAA,GACA0F,EAAA1F,EAAA,GASA,OARArI,EAAA,GAAA4N,EACA5N,EAAA,GAAA6N,EACA7N,EAAA,GAAA8N,EACA9N,EAAA,GAAA+N,EACA/N,EAAA,GAAAgO,EAAAD,EAAAE,EAAAH,EAAAI,EAAAL,EACA7N,EAAA,GAAAiO,EAAAF,EAAAG,EAAAN,EAAAI,EAAAF,EACA9N,EAAA,GAAAkO,EAAAH,EAAAC,EAAAH,EAAAI,EAAAL,EACA5N,EAAA,IAAAgO,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EACA9N,EAWO,SAASmgB,GAAengB,EAAA/B,GAS/B,OARA+B,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAA/B,EAAA,GACA+B,EAAA,MAAA/B,EAAA,GACA+B,EAAA,MAAA/B,EAAA,GACA+B,EAAA,KACAA,EAWO,SAASogB,GAAYpgB,EAAAqI,GAS5B,OARArI,EAAA,GAAAqI,EAAA,GACArI,EAAA,GAAAqI,EAAA,GACArI,EAAA,GAAAqI,EAAA,GACArI,EAAA,GAAAqI,EAAA,GACArI,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAWO,SAASqgB,GAAQrgB,EAAAL,GAExB,IAAA2gB,EAAczE,KACZrN,GAAgB8R,EAAA3gB,GAClB,IAAA1B,EAAA,IAAce,EAAmB,GAGjC,OAFEqP,GAAmBpQ,EAAA0B,GACnBugB,GAAuBlgB,EAAAsgB,EAAAriB,GACzB+B,EAWO,SAASugB,GAAIvgB,EAAAL,GASpB,OARAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EASO,SAASwgB,GAAQxgB,GASxB,OARAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAkBO,SAASygB,GAAGzgB,EAAAiS,EAAAE,EAAAE,EAAA2N,EAAAxX,EAAAC,EAAAC,EAAAwO,GAUnB,OATAlX,EAAA,GAAAiS,EACAjS,EAAA,GAAAmS,EACAnS,EAAA,GAAAqS,EACArS,EAAA,GAAAggB,EAEAhgB,EAAA,GAAAwI,EACAxI,EAAA,GAAAyI,EACAzI,EAAA,GAAA0I,EACA1I,EAAA,GAAAkX,EACAlX,EASO,IAAA0gB,GAAchC,GAQd,SAAAiC,GAAA3gB,EAAAL,GAKP,OAJAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAWO,IAAA4gB,GAAclC,GAUd,SAAAmC,GAAA7gB,EAAAqI,GAKP,OAJArI,EAAA,GAAAqI,EAAA,GACArI,EAAA,GAAAqI,EAAA,GACArI,EAAA,GAAAqI,EAAA,GACArI,EAAA,GAAAqI,EAAA,GACArI,EASO,SAAS8gB,GAAc9gB,EAAAL,GAC9B,IAAAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAiO,GAAAjO,EAAA,GACAkO,GAAAlO,EAAA,GACAmO,GAAAnO,EAAA,GACAoO,EAAApO,EAAA,GAIA,OAHAK,EAAA,MAAAgO,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,GACA7N,EAAA,MAAAiO,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,GACA9N,EAAA,MAAAkO,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,GACA5N,EAWO,SAAS+gB,GAAS/gB,EAAAL,EAAAkC,GACzB,IAAAmf,EAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAuhB,EAAAvhB,EAAA,GACAwhB,EAAAxhB,EAAA,GACAyhB,EAAA,GAAAvf,EAAA,GACAwf,EAAA,GAAAxf,EAAA,GACAyf,EAAA,GAAAzf,EAAA,GACA0f,EAAA5hB,EAAA,GACA6hB,EAAA7hB,EAAA,GACA8hB,EAAA9hB,EAAA,GACA+hB,EAAA/hB,EAAA,GASA,OARAK,EAAA,GAAAghB,EACAhhB,EAAA,GAAAihB,EACAjhB,EAAA,GAAAkhB,EACAlhB,EAAA,GAAAmhB,EACAnhB,EAAA,GAAAmhB,EAAAC,EAAAH,EAAAK,EAAAJ,EAAAG,EAAAE,EACAvhB,EAAA,GAAAmhB,EAAAE,EAAAH,EAAAE,EAAAJ,EAAAM,EAAAE,EACAxhB,EAAA,GAAAmhB,EAAAG,EAAAN,EAAAK,EAAAJ,EAAAG,EAAAK,EACAzhB,EAAA,IAAAghB,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,EAAAI,EACA1hB,EAWO,SAAS2hB,GAAO3hB,EAAAL,EAAA8B,GACvB,IAAAmM,GAAAjO,EAAA,GACAkO,GAAAlO,EAAA,GACAmO,GAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAqhB,EAAAhT,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACAoT,EAAAhT,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACAoT,EAAAhT,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACAuT,EAAAhT,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAUA,OATEqO,GAAYnc,EAAAL,EAAA8B,GACdmM,EAAA5N,EAAA,GACA6N,EAAA7N,EAAA,GACA8N,EAAA9N,EAAA,GACA+N,EAAA/N,EAAA,GACAA,EAAA,GAAAghB,EAAAjT,EAAAoT,EAAAvT,EAAAqT,EAAAnT,EAAAoT,EAAArT,EACA7N,EAAA,GAAAihB,EAAAlT,EAAAoT,EAAAtT,EAAAqT,EAAAtT,EAAAoT,EAAAlT,EACA9N,EAAA,GAAAkhB,EAAAnT,EAAAoT,EAAArT,EAAAkT,EAAAnT,EAAAoT,EAAArT,EACA5N,EAAA,GAAAmhB,EAAApT,EAAAiT,EAAApT,EAAAqT,EAAApT,EAAAqT,EAAApT,EACA9N,EAWO,SAAS4hB,GAAO5hB,EAAAL,EAAA8B,GACvB,IAAAmM,GAAAjO,EAAA,GACAkO,GAAAlO,EAAA,GACAmO,GAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAqhB,EAAAhT,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACAoT,EAAAhT,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACAoT,EAAAhT,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACAuT,EAAAhT,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAUA,OATEsO,GAAYpc,EAAAL,EAAA8B,GACdmM,EAAA5N,EAAA,GACA6N,EAAA7N,EAAA,GACA8N,EAAA9N,EAAA,GACA+N,EAAA/N,EAAA,GACAA,EAAA,GAAAghB,EAAAjT,EAAAoT,EAAAvT,EAAAqT,EAAAnT,EAAAoT,EAAArT,EACA7N,EAAA,GAAAihB,EAAAlT,EAAAoT,EAAAtT,EAAAqT,EAAAtT,EAAAoT,EAAAlT,EACA9N,EAAA,GAAAkhB,EAAAnT,EAAAoT,EAAArT,EAAAkT,EAAAnT,EAAAoT,EAAArT,EACA5N,EAAA,GAAAmhB,EAAApT,EAAAiT,EAAApT,EAAAqT,EAAApT,EAAAqT,EAAApT,EACA9N,EAWO,SAAS6hB,GAAO7hB,EAAAL,EAAA8B,GACvB,IAAAmM,GAAAjO,EAAA,GACAkO,GAAAlO,EAAA,GACAmO,GAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAqhB,EAAAhT,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACAoT,EAAAhT,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACAoT,EAAAhT,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACAuT,EAAAhT,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAUA,OATEuO,GAAYrc,EAAAL,EAAA8B,GACdmM,EAAA5N,EAAA,GACA6N,EAAA7N,EAAA,GACA8N,EAAA9N,EAAA,GACA+N,EAAA/N,EAAA,GACAA,EAAA,GAAAghB,EAAAjT,EAAAoT,EAAAvT,EAAAqT,EAAAnT,EAAAoT,EAAArT,EACA7N,EAAA,GAAAihB,EAAAlT,EAAAoT,EAAAtT,EAAAqT,EAAAtT,EAAAoT,EAAAlT,EACA9N,EAAA,GAAAkhB,EAAAnT,EAAAoT,EAAArT,EAAAkT,EAAAnT,EAAAoT,EAAArT,EACA5N,EAAA,GAAAmhB,EAAApT,EAAAiT,EAAApT,EAAAqT,EAAApT,EAAAqT,EAAApT,EACA9N,EAWO,SAAA8hB,GAAA9hB,EAAAL,EAAA0I,GACP,IAAAmO,EAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACA2F,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GAcA,OAZAK,EAAA,GAAAgO,EAAA2I,EAAAxI,EAAAqI,EAAAvI,EAAAyI,EAAAxI,EAAAuI,EACAzW,EAAA,GAAAiO,EAAA0I,EAAAxI,EAAAsI,EAAAvI,EAAAsI,EAAAxI,EAAA0I,EACA1W,EAAA,GAAAkO,EAAAyI,EAAAxI,EAAAuI,EAAA1I,EAAAyI,EAAAxI,EAAAuI,EACAxW,EAAA,GAAAmO,EAAAwI,EAAA3I,EAAAwI,EAAAvI,EAAAwI,EAAAvI,EAAAwI,EACA1I,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GACAK,EAAA,GAAAgO,EAAA2I,EAAAxI,EAAAqI,EAAAvI,EAAAyI,EAAAxI,EAAAuI,EACAzW,EAAA,GAAAiO,EAAA0I,EAAAxI,EAAAsI,EAAAvI,EAAAsI,EAAAxI,EAAA0I,EACA1W,EAAA,GAAAkO,EAAAyI,EAAAxI,EAAAuI,EAAA1I,EAAAyI,EAAAxI,EAAAuI,EACAxW,EAAA,GAAAmO,EAAAwI,EAAA3I,EAAAwI,EAAAvI,EAAAwI,EAAAvI,EAAAwI,EACA1W,EAWO,SAAA+hB,GAAA/hB,EAAAqI,EAAA1I,GACP,IAAA6W,EAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuF,EAAAjO,EAAA,GACAkO,EAAAlO,EAAA,GACAmO,EAAAnO,EAAA,GACAoO,EAAApO,EAAA,GAcA,OAZAK,EAAA,GAAAwW,EAAAzI,EAAA4I,EAAA/I,EAAA6I,EAAA3I,EAAA4I,EAAA7I,EACA7N,EAAA,GAAAyW,EAAA1I,EAAA4I,EAAA9I,EAAA6I,EAAA9I,EAAA4I,EAAA1I,EACA9N,EAAA,GAAA0W,EAAA3I,EAAA4I,EAAA7I,EAAA0I,EAAA3I,EAAA4I,EAAA7I,EACA5N,EAAA,GAAA2W,EAAA5I,EAAAyI,EAAA5I,EAAA6I,EAAA5I,EAAA6I,EAAA5I,EACAF,EAAAjO,EAAA,GACAkO,EAAAlO,EAAA,GACAmO,EAAAnO,EAAA,GACAoO,EAAApO,EAAA,GACAK,EAAA,GAAAwW,EAAAzI,EAAA4I,EAAA/I,EAAA6I,EAAA3I,EAAA4I,EAAA7I,EACA7N,EAAA,GAAAyW,EAAA1I,EAAA4I,EAAA9I,EAAA6I,EAAA9I,EAAA4I,EAAA1I,EACA9N,EAAA,GAAA0W,EAAA3I,EAAA4I,EAAA7I,EAAA0I,EAAA3I,EAAA4I,EAAA7I,EACA5N,EAAA,GAAA2W,EAAA5I,EAAAyI,EAAA5I,EAAA6I,EAAA5I,EAAA6I,EAAA5I,EACA9N,EAYO,SAAAgiB,GAAAhiB,EAAAL,EAAAgN,EAAAlL,GAEP,GAAArC,KAAAU,IAAA2B,GAAsB1C,EACtB,OAAWwhB,GAAIvgB,EAAAL,GAEf,IAAAsiB,EAAA7iB,KAAAgD,KAAAuK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAlL,GAAA,GACA,IAAA3C,EAAAM,KAAAsC,IAAAD,GACAmM,EAAA9O,EAAA6N,EAAA,GAAAsV,EACApU,EAAA/O,EAAA6N,EAAA,GAAAsV,EACAnU,EAAAhP,EAAA6N,EAAA,GAAAsV,EACAlU,EAAA3O,KAAAuC,IAAAF,GAEAuf,EAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAuhB,EAAAvhB,EAAA,GACAwhB,EAAAxhB,EAAA,GACAK,EAAA,GAAAghB,EAAAjT,EAAAoT,EAAAvT,EAAAqT,EAAAnT,EAAAoT,EAAArT,EACA7N,EAAA,GAAAihB,EAAAlT,EAAAoT,EAAAtT,EAAAqT,EAAAtT,EAAAoT,EAAAlT,EACA9N,EAAA,GAAAkhB,EAAAnT,EAAAoT,EAAArT,EAAAkT,EAAAnT,EAAAoT,EAAArT,EACA5N,EAAA,GAAAmhB,EAAApT,EAAAiT,EAAApT,EAAAqT,EAAApT,EAAAqT,EAAApT,EAEA,IAAAE,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GACAwO,EAAAxO,EAAA,GAMA,OALAK,EAAA,GAAAgO,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACA7N,EAAA,GAAAiO,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACA9N,EAAA,GAAAkO,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACA5N,EAAA,GAAAmO,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAEA9N,EAYO,SAASkiB,GAAGliB,EAAAL,EAAAE,GASnB,OARAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASmiB,GAAQniB,EAAAL,EAAAE,GACxB,IAAAuiB,EAAAziB,EAAA,GACA0iB,EAAA1iB,EAAA,GACA2iB,EAAA3iB,EAAA,GACA4iB,EAAA5iB,EAAA,GACAyhB,EAAAvhB,EAAA,GACAwhB,EAAAxhB,EAAA,GACAyhB,EAAAzhB,EAAA,GACA2iB,EAAA3iB,EAAA,GACAmhB,EAAArhB,EAAA,GACAshB,EAAAthB,EAAA,GACAuhB,EAAAvhB,EAAA,GACAwhB,EAAAxhB,EAAA,GACA8iB,EAAA5iB,EAAA,GACA6iB,EAAA7iB,EAAA,GACA8iB,EAAA9iB,EAAA,GACA+iB,EAAA/iB,EAAA,GASA,OARAG,EAAA,GAAAoiB,EAAAQ,EAAAL,EAAAE,EAAAJ,EAAAM,EAAAL,EAAAI,EACA1iB,EAAA,GAAAqiB,EAAAO,EAAAL,EAAAG,EAAAJ,EAAAG,EAAAL,EAAAO,EACA3iB,EAAA,GAAAsiB,EAAAM,EAAAL,EAAAI,EAAAP,EAAAM,EAAAL,EAAAI,EACAziB,EAAA,GAAAuiB,EAAAK,EAAAR,EAAAK,EAAAJ,EAAAK,EAAAJ,EAAAK,EACA3iB,EAAA,GAAAoiB,EAAAI,EAAAD,EAAAnB,EAAAiB,EAAAf,EAAAgB,EAAAjB,EAAAL,EAAA4B,EAAAzB,EAAAsB,EAAAxB,EAAA0B,EAAAzB,EAAAwB,EACA1iB,EAAA,GAAAqiB,EAAAG,EAAAD,EAAAlB,EAAAiB,EAAAlB,EAAAgB,EAAAd,EAAAL,EAAA2B,EAAAzB,EAAAuB,EAAAxB,EAAAuB,EAAAzB,EAAA2B,EACA3iB,EAAA,GAAAsiB,EAAAE,EAAAD,EAAAjB,EAAAc,EAAAf,EAAAgB,EAAAjB,EAAAF,EAAA0B,EAAAzB,EAAAwB,EAAA3B,EAAA0B,EAAAzB,EAAAwB,EACAziB,EAAA,GAAAuiB,EAAAC,EAAAJ,EAAAhB,EAAAiB,EAAAhB,EAAAiB,EAAAhB,EAAAH,EAAAyB,EAAA5B,EAAAyB,EAAAxB,EAAAyB,EAAAxB,EAAAyB,EACA3iB,EAOO,IAAI6iB,GAAMV,GAWV,SAASW,GAAK9iB,EAAAL,EAAAE,GASrB,OARAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAWO,IAAI+iB,GAAMhE,GAYV,SAASiE,GAAIhjB,EAAAL,EAAAE,EAAA5B,GACpB,IAAAglB,EAAA,EAAAhlB,EAYA,OAXM8kB,GAAGpjB,EAAAE,GAAA,IAAA5B,MAET+B,EAAA,GAAAL,EAAA,GAAAsjB,EAAApjB,EAAA,GAAA5B,EACA+B,EAAA,GAAAL,EAAA,GAAAsjB,EAAApjB,EAAA,GAAA5B,EACA+B,EAAA,GAAAL,EAAA,GAAAsjB,EAAApjB,EAAA,GAAA5B,EACA+B,EAAA,GAAAL,EAAA,GAAAsjB,EAAApjB,EAAA,GAAA5B,EACA+B,EAAA,GAAAL,EAAA,GAAAsjB,EAAApjB,EAAA,GAAA5B,EACA+B,EAAA,GAAAL,EAAA,GAAAsjB,EAAApjB,EAAA,GAAA5B,EACA+B,EAAA,GAAAL,EAAA,GAAAsjB,EAAApjB,EAAA,GAAA5B,EACA+B,EAAA,GAAAL,EAAA,GAAAsjB,EAAApjB,EAAA,GAAA5B,EAEA+B,EAUO,SAASkjB,GAAMljB,EAAAL,GACtB,IAAAwjB,EAAcC,GAAazjB,GAS3B,OARAK,EAAA,IAAAL,EAAA,GAAAwjB,EACAnjB,EAAA,IAAAL,EAAA,GAAAwjB,EACAnjB,EAAA,IAAAL,EAAA,GAAAwjB,EACAnjB,EAAA,GAAAL,EAAA,GAAAwjB,EACAnjB,EAAA,IAAAL,EAAA,GAAAwjB,EACAnjB,EAAA,IAAAL,EAAA,GAAAwjB,EACAnjB,EAAA,IAAAL,EAAA,GAAAwjB,EACAnjB,EAAA,GAAAL,EAAA,GAAAwjB,EACAnjB,EAWO,SAASqjB,GAASrjB,EAAAL,GASzB,OARAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAUO,IAAIsjB,GAASrE,GAMTsE,GAAMD,GASNF,GAAgBjE,GAMhBqE,GAASJ,GAUb,SAASK,GAASzjB,EAAAL,GACzB,IAAAyO,EAAkBgV,GAAazjB,GAC/B,GAAAyO,EAAA,GACAA,EAAAhP,KAAAgD,KAAAgM,GAEA,IAAAvN,EAAAlB,EAAA,GAAAyO,EACAzN,EAAAhB,EAAA,GAAAyO,EACAtN,EAAAnB,EAAA,GAAAyO,EACArN,EAAApB,EAAA,GAAAyO,EAEAhN,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACA4B,EAAA5B,EAAA,GAEA+jB,EAAA7iB,EAAAO,EAAAT,EAAAU,EAAAP,EAAAQ,EAAAP,EAAAQ,EAEAvB,EAAA,GAAAa,EACAb,EAAA,GAAAW,EACAX,EAAA,GAAAc,EACAd,EAAA,GAAAe,EAEAf,EAAA,IAAAoB,EAAAP,EAAA6iB,GAAAtV,EACApO,EAAA,IAAAqB,EAAAV,EAAA+iB,GAAAtV,EACApO,EAAA,IAAAsB,EAAAR,EAAA4iB,GAAAtV,EACApO,EAAA,IAAAuB,EAAAR,EAAA2iB,GAAAtV,EAEA,OAAApO,EASO,SAAS2jB,GAAGhkB,GACnB,eAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAUO,SAASikB,GAAWjkB,EAAAE,GAC3B,OAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,GAUO,SAASgkB,GAAMlkB,EAAAE,GACtB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAmL,EAAAnL,EAAA,GACAoL,EAAApL,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACAyB,EAAAzB,EAAA,GACA0B,EAAA1B,EAAA,GACAyE,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAoL,EAAApL,EAAA,GACAqL,EAAArL,EAAA,GACA,OAAAT,KAAAU,IAAAe,EAAAO,IAA8BrC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAe,GAAAzB,KAAAU,IAAAsB,KAAAhC,KAAAU,IAAAa,EAAAU,IAAqEtC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAa,GAAAvB,KAAAU,IAAAuB,KAAAjC,KAAAU,IAAAgB,EAAAQ,IAAqEvC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgB,GAAA1B,KAAAU,IAAAwB,KAAAlC,KAAAU,IAAAiB,EAAAQ,IAAqExC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiB,GAAA3B,KAAAU,IAAAyB,KAAAnC,KAAAU,IAAAsE,EAAAE,IAAqEvF,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAsE,GAAAhF,KAAAU,IAAAwE,KAAAlF,KAAAU,IAAAuE,EAAAE,IAAqExF,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAuE,GAAAjF,KAAAU,IAAAyE,KAAAnF,KAAAU,IAAAgL,EAAAG,IAAqElM,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAgL,GAAA1L,KAAAU,IAAAmL,KAAA7L,KAAAU,IAAAiL,EAAAG,IAAqEnM,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAiL,GAAA3L,KAAAU,IAAAoL,IC9zB1nB,SAAS4Y,KAChB,IAAA9jB,EAAA,IAAgBhB,EAAmB,GAKnC,OAJMA,GAAmBC,eACzBe,EAAA,KACAA,EAAA,MAEAA,EASO,SAAS+jB,GAAKpkB,GACrB,IAAAK,EAAA,IAAgBhB,EAAmB,GAGnC,OAFAgB,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAUO,SAASgkB,GAAUpc,EAAAC,GAC1B,IAAA7H,EAAA,IAAgBhB,EAAmB,GAGnC,OAFAgB,EAAA,GAAA4H,EACA5H,EAAA,GAAA6H,EACA7H,EAUO,SAASikB,GAAIjkB,EAAAL,GAGpB,OAFAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAWO,SAASkkB,GAAGlkB,EAAA4H,EAAAC,GAGnB,OAFA7H,EAAA,GAAA4H,EACA5H,EAAA,GAAA6H,EACA7H,EAWO,SAASmkB,GAAGnkB,EAAAL,EAAAE,GAGnB,OAFAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASokB,GAAQpkB,EAAAL,EAAAE,GAGxB,OAFAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASqkB,GAAQrkB,EAAAL,EAAAE,GAGxB,OAFAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAWO,SAASskB,GAAMtkB,EAAAL,EAAAE,GAGtB,OAFAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAAA,GAAAL,EAAA,GAAAE,EAAA,GACAG,EAUO,SAASukB,GAAIvkB,EAAAL,GAGpB,OAFAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAAA,GAAAZ,KAAAwV,KAAAjV,EAAA,IACAK,EAUO,SAASwkB,GAAKxkB,EAAAL,GAGrB,OAFAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAAA,GAAAZ,KAAAyV,MAAAlV,EAAA,IACAK,EAWO,SAASykB,GAAGzkB,EAAAL,EAAAE,GAGnB,OAFAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAA0V,IAAAnV,EAAA,GAAAE,EAAA,IACAG,EAWO,SAAS0kB,GAAG1kB,EAAAL,EAAAE,GAGnB,OAFAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAAA,GAAAZ,KAAAW,IAAAJ,EAAA,GAAAE,EAAA,IACAG,EAUO,SAAS2kB,GAAK3kB,EAAAL,GAGrB,OAFAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAAA,GAAAZ,KAAA2V,MAAApV,EAAA,IACAK,EAWO,SAAS4kB,GAAK5kB,EAAAL,EAAAE,GAGrB,OAFAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAAA,GAAAL,EAAA,GAAAE,EACAG,EAYO,SAAS6kB,GAAW7kB,EAAAL,EAAAE,EAAAmD,GAG3B,OAFAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAAA,GAAAL,EAAA,GAAAE,EAAA,GAAAmD,EACAhD,EAUO,SAAS8kB,GAAQnlB,EAAAE,GACxB,IAAA+H,EAAA/H,EAAA,GAAAF,EAAA,GACAkI,EAAAhI,EAAA,GAAAF,EAAA,GACA,OAAAP,KAAAgD,KAAAwF,IAAAC,KAUO,SAASkd,GAAeplB,EAAAE,GAC/B,IAAA+H,EAAA/H,EAAA,GAAAF,EAAA,GACAkI,EAAAhI,EAAA,GAAAF,EAAA,GACA,OAAAiI,IAAAC,IASO,SAASmd,GAAMrlB,GACtB,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA,OAAAP,KAAAgD,KAAAwF,IAAAC,KASO,SAASod,GAAatlB,GAC7B,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACA,OAAAiI,IAAAC,IAUO,SAASqd,GAAMllB,EAAAL,GAGtB,OAFAK,EAAA,IAAAL,EAAA,GACAK,EAAA,IAAAL,EAAA,GACAK,EAUO,SAASmlB,GAAOnlB,EAAAL,GAGvB,OAFAK,EAAA,KAAAL,EAAA,GACAK,EAAA,KAAAL,EAAA,GACAK,EAUO,SAASolB,GAASplB,EAAAL,GACzB,IAAAiI,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GACAiN,EAAAhF,IAAAC,IAOA,OANA+E,EAAA,IAEAA,EAAA,EAAAxN,KAAAgD,KAAAwK,GACA5M,EAAA,GAAAL,EAAA,GAAAiN,EACA5M,EAAA,GAAAL,EAAA,GAAAiN,GAEA5M,EAUO,SAASqlB,GAAG1lB,EAAAE,GACnB,OAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAYO,SAASylB,GAAKtlB,EAAAL,EAAAE,GACrB,IAAAyI,EAAA3I,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAGA,OAFAG,EAAA,GAAAA,EAAA,KACAA,EAAA,GAAAsI,EACAtI,EAYO,SAASulB,GAAIvlB,EAAAL,EAAAE,EAAA5B,GACpB,IAAA+P,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GAGA,OAFAK,EAAA,GAAAgO,EAAA/P,GAAA4B,EAAA,GAAAmO,GACAhO,EAAA,GAAAiO,EAAAhQ,GAAA4B,EAAA,GAAAoO,GACAjO,EAUO,SAASwlB,GAAMxlB,EAAAgD,GACtBA,KAAA,EACA,IAAAnF,EAAyB,EAAfsB,IAAeC,KAAAK,GAGzB,OAFAO,EAAA,GAAAZ,KAAAuC,IAAA9D,GAAAmF,EACAhD,EAAA,GAAAZ,KAAAsC,IAAA7D,GAAAmF,EACAhD,EAWO,SAAAylB,GAAAzlB,EAAAL,EAAAxC,GACP,IAAAyK,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GAGA,OAFAK,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EACA7H,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EACA7H,EAWO,SAAA0lB,GAAA1lB,EAAAL,EAAAxC,GACP,IAAAyK,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GAGA,OAFAK,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GACA6C,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GACA6C,EAYO,SAAS2lB,GAAa3lB,EAAAL,EAAAxC,GAC7B,IAAAyK,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GAGA,OAFAK,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GACA6C,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GACA6C,EAaO,SAAS4lB,GAAa5lB,EAAAL,EAAAxC,GAC7B,IAAAyK,EAAAjI,EAAA,GACAkI,EAAAlI,EAAA,GAGA,OAFAK,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,IACA6C,EAAA,GAAA7C,EAAA,GAAAyK,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,IACA6C,EAWO,SAAS6lB,GAAM7lB,EAAAL,EAAAE,EAAAzC,GAEtB,IAAA0oB,EAAAnmB,EAAA,GAAAE,EAAA,GACAkmB,EAAApmB,EAAA,GAAAE,EAAA,GACAmmB,EAAA5mB,KAAAsC,IAAAtE,GACA6oB,EAAA7mB,KAAAuC,IAAAvE,GAMA,OAHA4C,EAAA,GAAA8lB,EAAAG,EAAAF,EAAAC,EAAAnmB,EAAA,GACAG,EAAA,GAAA8lB,EAAAE,EAAAD,EAAAE,EAAApmB,EAAA,GAEAG,EASO,SAASkmB,GAAKvmB,EAAAE,GACrB,IAAAoS,EAAAtS,EAAA,GACAwS,EAAAxS,EAAA,GACA6I,EAAA3I,EAAA,GACA4I,EAAA5I,EAAA,GAEAsmB,EAAAlU,IAAAE,IACAgU,EAAA,IAEAA,EAAA,EAAA/mB,KAAAgD,KAAA+jB,IAGA,IAAAC,EAAA5d,IAAAC,IACA2d,EAAA,IAEAA,EAAA,EAAAhnB,KAAAgD,KAAAgkB,IAGA,IAAA3O,GAAAxF,EAAAzJ,EAAA2J,EAAA1J,GAAA0d,EAAAC,EAEA,OAAA3O,EAAA,EACA,EACGA,GAAA,EACHrY,KAAAK,GAEAL,KAAAsY,KAAAD,GAUO,SAAS4O,GAAG1mB,GACnB,cAAAA,EAAA,QAAAA,EAAA,OAUO,SAAS2mB,GAAW3mB,EAAAE,GAC3B,OAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,GAUO,SAAS0mB,GAAM5mB,EAAAE,GACtB,IAAAgB,EAAAlB,EAAA,GACAgB,EAAAhB,EAAA,GACAyB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,GACA,OAAAT,KAAAU,IAAAe,EAAAO,IAA8BrC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAe,GAAAzB,KAAAU,IAAAsB,KAAAhC,KAAAU,IAAAa,EAAAU,IAAqEtC,EAAgBK,KAAAW,IAAA,EAAAX,KAAAU,IAAAa,GAAAvB,KAAAU,IAAAuB,IAO5H,IAAImlB,GAAMxB,GAMNyB,GAAMrC,GAMNsC,GAAMrC,GAMNsC,GAAMrC,GAMNsC,GAAO9B,GAMP+B,GAAU9B,GAMV+B,GAAS7B,GAcT8B,GAAO,WAClB,IAAAjP,EAAYgM,KAEZ,gBAAAnkB,EAAA4Y,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA5b,OAAA,EACAC,OAAA,EAeA,IAdAub,IACAA,EAAA,GAGAC,IACAA,EAAA,GAIAxb,EADAyb,EACArZ,KAAA0V,IAAA2D,EAAAF,EAAAC,EAAA7Y,EAAAiZ,QAEAjZ,EAAAiZ,OAGA7b,EAAAyb,EAAoBzb,EAAAC,EAAOD,GAAAwb,EAC3BT,EAAA,GAAAnY,EAAA5C,GAAoB+a,EAAA,GAAAnY,EAAA5C,EAAA,GACpB2b,EAAAZ,IAAAa,GACAhZ,EAAA5C,GAAA+a,EAAA,GAAoBnY,EAAA5C,EAAA,GAAA+a,EAAA,GAGpB,OAAAnY,GA1BkB,GCplBlBhD,EAAAU,EAAA2pB,EAAA,6BAAAC,IAAAtqB,EAAAU,EAAA2pB,EAAA,yBAAAE,IAAAvqB,EAAAU,EAAA2pB,EAAA,0BAAAG,IAAAxqB,EAAAU,EAAA2pB,EAAA,yBAAAI,IAAAzqB,EAAAU,EAAA2pB,EAAA,yBAAAK,IAAA1qB,EAAAU,EAAA2pB,EAAA,yBAAAM,IAAA3qB,EAAAU,EAAA2pB,EAAA,0BAAAO,IAAA5qB,EAAAU,EAAA2pB,EAAA,yBAAAQ,IAAA7qB,EAAAU,EAAA2pB,EAAA,yBAAAS,IAAA9qB,EAAAU,EAAA2pB,EAAA,yBAAAU,wCCCA,IAAAC,EAAA,SACAA,GAGA,IAA4ErpB,EAA5EspB,OAAA,KAFAD,KAAA,IAEAA,EAAA,GAAqDE,EAAA,GAA+B,IAAAvpB,KAAAspB,EAAmBA,EAAAhpB,eAAAN,KAA+BupB,EAAAvpB,GAAAspB,EAAAtpB,IAAkCspB,EAAA,aAAuBA,EAAA,6BAAuCA,EAAA,cAAAE,EAAAC,GAAyC,MAAAA,GAAgBH,EAAA,UAAoBA,EAAA,WAAqB,IAA2FI,EAA3FC,GAAA,EAA6BC,GAAA,EAAgCC,GAAA,EAA6DF,EAAA,iBAAAG,OAA4CF,EAAA,mBAAAG,cAAwDF,EAAA,iBAAAG,IAA6DL,IAAAC,EAA2DF,GAAAC,IAAAE,IAAAD,EAAuF,IAAoNK,EAAWC,EAA/NC,EAAA,GAAuB,SAAAC,EAAAC,GAA0B,OAAAf,EAAA,WAAyBA,EAAA,WAAAe,EAAAF,GAAuDA,EAAAE,EAA6BR,GAAwBM,EAAAG,EAAA,IAAsDhB,EAAA,cAAAiB,EAAAC,GAAoD,IAAAC,EAA4J,OAApJR,MAAkB5rB,EAAQ,IAAM6rB,MAAsB7rB,EAAQ,IAAQksB,EAAAL,EAAA,UAAAK,GAAyCE,EAAAR,EAAA,aAAAM,GAAqCC,EAAAC,IAAAC,YAAkCpB,EAAA,oBAAAiB,GAAmD,IAAAE,EAAAnB,EAAA,KAAAiB,GAAA,GAAiG,OAA3DE,EAAAE,SAAgBF,EAAA,IAAAG,WAAAH,IAAwBI,EAAAJ,EAAAE,QAAmBF,GAAYT,EAAA,KAAA1P,OAAA,IAA6BgP,EAAA,YAAAU,EAAA,QAAAc,QAAA,YAA4DxB,EAAA,UAAAU,EAAA,KAAAe,MAAA,GAA6Cf,EAAA,gCAAAgB,GAAgD,KAAAA,aAAAC,IAAgC,MAAAD,IAAahB,EAAA,iCAAAkB,EAAA3qB,GAAuDypB,EAAA,UAAsBV,EAAA,cAAAE,GAAiCQ,EAAA,KAAAR,IAA0BF,EAAA,mBAA8B,qCAAqCI,GAA8B,oBAAAyB,OAA6B7B,EAAA,cAAAlX,GAAsC,OAAA+Y,KAAA/Y,KAAgBkX,EAAA,oBAAAlX,GAA4C,IAAAgZ,EAAS,yBAAAC,WAAmC,IAAAT,WAAAS,WAAAjZ,KAA2DyY,EAAA,iBAAtBO,EAAAD,KAAA/Y,EAAA,YAAqDgZ,IAAa,oBAAAE,WAAmChC,EAAA,UAAAgC,gBAA+B,IAAAC,YAAuCjC,EAAA,UAAAiC,WAA8B,mBAAAC,OAA6BlC,EAAA,cAAAE,GAAiCgC,KAAAhC,OAAgBG,GAAAC,KAAmDD,EAAuB8B,SAAAC,gBAA2BvB,EAAAsB,SAAAC,cAAAC,KAAiDxB,EAAAyB,KAAAC,SAAAC,KAA4E3B,EAAzC,IAAAA,EAAA4B,QAAA,SAAyC5B,EAAA6B,MAAA,KAAAjB,MAAA,MAAAkB,KAAA,SAA0E,GAAmB3C,EAAA,cAAA4C,GAAwC,IAAAC,EAAA,IAAAC,eAAoE,OAAzCD,EAAAE,KAAA,MAAAH,GAAA,GAA0BC,EAAAG,KAAA,MAAeH,EAAAI,cAAyB3C,IAA0BN,EAAA,oBAAA4C,GAA8C,IAAAC,EAAA,IAAAC,eAAmG,OAAxED,EAAAE,KAAA,MAAAH,GAAA,GAA0BC,EAAAK,aAAA,cAA+BL,EAAAG,KAAA,MAAe,IAAA1B,WAAAuB,EAAAM,YAAqCnD,EAAA,mBAAA4C,EAAAQ,EAAAC,GAA2D,IAAAR,EAAA,IAAAC,eAA2BD,EAAAE,KAAA,MAAAH,GAAA,GAAyBC,EAAAK,aAAA,cAA+BL,EAAAO,OAAA,WAAiC,KAAAP,EAAA3C,QAAA,GAAA2C,EAAA3C,QAAA2C,EAAAM,SAAiDC,EAAAP,EAAAM,UAA4BE,KAAWR,EAAAQ,UAAoBR,EAAAG,KAAA,OAAgBhD,EAAA,wBAAAsD,GAA0CnB,SAAAmB,UAA6B,IAAAlrB,EAAA4nB,EAAA,4BAAAuD,gBAAAC,IAAA7sB,KAAA4sB,SAAA,oBAAAE,YAAA,MAAwHC,EAAA1D,EAAA,+BAAA2D,kBAAA,oBAAAJ,iBAAAK,KAAAjtB,KAAA4sB,UAAAnrB,GAAmI,IAAA1B,KAAAupB,EAA4BA,EAAAjpB,eAAAN,KAAwCspB,EAAAtpB,GAAAupB,EAAAvpB,IAAkCupB,OAAA4D,EAA0B,IAAAC,EAAA,GAAmB,SAAAC,EAAAC,GAA2B,IAAA7C,EAAA8C,EAAkD,OAAhCA,IAAAD,EAAA,OAAgC7C,EAAW,SAAA+C,EAAAF,GAA4B,IAAA7C,EAAAgD,EAAAC,IAAA,GAAkCC,EAAAlD,EAAA6C,EAAA,OAAsD,IAA9BG,EAAAC,IAAA,GAAAC,EAA8BA,GAAAC,MAAsBC,KAAuE,OAA9BJ,EAAAC,IAAA,GAAAjD,EAA8B,EAAU,OAAAA,EAAW,SAAAqD,EAAAR,EAAAS,GAA2G,OAAzEA,MAAAX,GAA8BE,EAAAxsB,KAAAwV,KAAAgX,EAAAS,KAAsD,SAAAC,EAAA/sB,GAAiC,OAAAA,GAAa,2BAA2B,mBAAmB,mBAAmB,mBAAmB,qBAAqB,sBAAsB,QAAS,SAAAA,IAAAqZ,OAAA,GAA8B,SAAS,SAAArZ,EAAA,IAAuB,IAAAgtB,EAAAC,SAAAjtB,EAAAktB,OAAA,IAAqD,OAAnBtD,EAAAoD,EAAA,MAAmBA,EAAA,EAAmB,UAAqI,IAAAG,EAAA,CAAqBC,UAAA,SAAA/kB,EAAAC,GAAyB,OAAAD,EAAAC,GAAW+kB,SAAA,cAA4D,IAAA1tB,MAAA,GAAsV,IAAqB2tB,EAAA,EAA6B,SAAA1D,EAAA2D,EAAAC,GAAgCD,GAAeE,GAAA,qBAAAD,GAAimC,SAAAE,EAAAC,EAAAlvB,EAAAuB,EAAA4tB,GAAwG,OAA/C,OAAhB5tB,KAAA,MAAgB6tB,OAAA7tB,EAAAqZ,OAAA,KAAArZ,EAAA,OAA+CA,GAAa,SAAmC,SAAA8tB,EAAAH,GAAA,GAAAlvB,EAA6B,MAAM,UAAAsvB,EAAAJ,GAAA,GAAAlvB,EAA+B,MAAM,UAAA+tB,EAAAmB,GAAA,GAAAlvB,EAA+B,MAAM,UAAAuvB,QAAA,CAAAvvB,IAAA,GAAAwvB,WAAAxvB,GAAAyvB,GAAAD,aAAA,EAAAA,WAAA,KAAAE,IAAAC,GAAAH,WAAA,gCAAAI,IAAAJ,4BAAA,wBAAAzB,EAAAmB,GAAA,GAAAK,QAAA,GAAAxB,EAAAmB,EAAA,MAAAK,QAAA,GAA8Q,MAAM,YAAAM,EAAAX,GAAA,GAAAlvB,EAAkC,MAAM,aAAA8vB,EAAAZ,GAAA,GAAAlvB,EAAmC,MAAM,QAAAgvB,GAAA,8BAAAztB,IAAmD,IAAAwuB,EAAA,EAAmBC,EAAA,EAAmBC,EAAA,EAAiB,SAAAC,EAAAC,EAAAC,EAAAC,EAAAnB,GAA4C,IAAAoB,EAAA1C,EAAkB,iBAAAuC,GAA2BG,GAAA,EAAc1C,EAAAuC,IAAeG,GAAA,EAAe1C,EAAAuC,EAAAvV,QAAiB,IAAkDmQ,EAAlDwF,EAAA,iBAAAH,IAAA,KAAmR,GAA/LrF,EAA1BsF,GAAAJ,EAA0Bf,EAAa,oBAAAsB,MAAA7C,EAAA8C,GAAA9C,EAAAG,QAAAL,IAAA4C,EAAAL,EAAAK,GAAAjvB,KAAAW,IAAA6rB,EAAA2C,EAAA,EAAAH,EAAAxV,SAAkL0V,EAAA,CAAa,IAAAI,EAAuD,IAA9CxB,EAAAnE,EAAQI,EAAA,MAAAJ,IAAmB2F,EAAA3F,IAAA,EAAA6C,GAAwBsB,EAAAwB,EAASxB,GAAA,EAAQnB,EAAAmB,GAAA,KAA+B,IAAdwB,EAAA3F,EAAA6C,EAAcsB,EAAAwB,GAAgBrB,EAAAH,KAAA,KAAkB,OAAAnE,EAAW,UAAAwF,EAAmH,OAA7FJ,EAAAQ,UAAAR,EAAA9E,MAA8BuF,EAAAnuB,IAAA0tB,EAAApF,GAA0B6F,EAAAnuB,IAAA,IAAAyoB,WAAAiF,GAAApF,GAAqCA,EAA8C,IAAnC,IAAAxpB,EAAAsvB,EAAAC,EAAA/xB,EAAA,EAAmCA,EAAA6uB,GAAA,CAAc,IAAAmD,EAAAZ,EAAApxB,GAA2C,KAA1BwC,EAAAgvB,GAAAH,EAAArxB,KAAoD,OAAAwC,MAAA,OAA0B0tB,EAAAlE,EAAAhsB,EAAAgyB,EAAAxvB,GAA0BuvB,IAAAvvB,IAAwBsvB,EAAAvC,EAAA/sB,GAAiCuvB,EAAAvvB,GAAkBxC,GAAA8xB,GAA5I9xB,IAAwJ,OAAAgsB,EAAW,SAAAiG,EAAA9B,EAAAtU,GAAuC,OAAAA,IAAAsU,EAAA,SAAwD,IAA3B,IAAajvB,EAAbgxB,EAAA,EAAmBlyB,EAAA,EAAoCkyB,GAAnBhxB,EAAA2wB,EAAA1B,EAAAnwB,GAAA,IAA6B,GAAAkB,GAAA2a,KAAuB7b,KAAI6b,GAAA7b,GAAA6b,KAA2BA,MAAA7b,GAAoB,IAAAgsB,EAAA,GAAW,GAAAkG,EAAA,KAA2C,IAA5B,IAAmBF,EAASnW,EAAA,GAAgBmW,EAAAG,OAAAC,aAAAC,MAAAF,OAAAN,EAAAD,SAAAzB,IAAA9tB,KAAA0V,IAAA8D,EAA5C,QAAuImQ,MAAAgG,IAAsB7B,GAA7J,KAA4KtU,GAA5K,KAA8L,OAAAmQ,EAAW,OAAAsG,EAAAnC,GAAyB,IAAAoC,EAAA,oBAAAC,YAAA,IAAAA,YAAA,aAAA9D,EAAmF,SAAA+D,EAAAC,EAAAC,GAAuD,IAAf,IAAAC,EAAAD,EAAeD,EAAAE,QAA+B,GAAAA,EAAAD,EAAA,IAAAD,EAAAd,UAAAW,EAAiD,OAAAA,EAAAM,OAAAH,EAAAd,SAAAe,EAAAC,IAA8F,IAAjC,IAAAE,EAAA/S,EAAAC,EAAAC,EAAA8S,EAAsB5tB,EAAA,KAAW,CAA2B,KAAlB2tB,EAAAJ,EAAAC,MAAkB,OAAAxtB,EAAkB,OAAA2tB,EAAyE,GAArB/S,EAAA,GAAA2S,EAAAC,KAAqB,UAAAG,GAAqW,GAAlS9S,EAAA,GAAA0S,EAAAC,KAAqB,UAAAG,GAAkBA,GAAA,GAAAA,IAAA,GAAA/S,GAAA,EAAAC,GAA6BC,EAAA,GAAAyS,EAAAC,KAAqB,UAAAG,GAAkBA,GAAA,EAAAA,IAAA,GAAA/S,GAAA,GAAAC,GAAA,EAAAC,GAAmC8S,EAAA,GAAAL,EAAAC,KAAuCG,EAAlB,UAAAA,IAAkB,EAAAA,IAAA,GAAA/S,GAAA,GAAAC,GAAA,GAAAC,GAAA,EAAA8S,GAA+D,EAAAD,IAAA,GAAA/S,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAA8S,GAAA,EAArB,GAAAL,EAAAC,OAAmEG,EAAA,MAAa3tB,GAAAgtB,OAAAC,aAAAU,OAA6B,CAAK,IAAAE,EAAAF,EAAA,MAAgB3tB,GAAAgtB,OAAAC,aAAA,MAAAY,GAAA,cAAAA,QAAlZ7tB,GAAAgtB,OAAAC,cAAA,GAAAU,IAAA,EAAA/S,QAA7E5a,GAAAgtB,OAAAC,aAAAU,IAAuhB,SAAAR,EAAAnC,GAA2B,OAAAsC,EAAAZ,EAAA1B,GAAqC,SAAA8C,EAAA9tB,EAAA+tB,EAAAC,EAAAC,GAAkE,KAAAA,EAAA,YAAyF,IAAxD,IAAAC,EAAAF,EAAoBG,EAAAH,EAAAC,EAAA,EAAoCpzB,EAAA,EAAYA,EAAAmF,EAAA0W,SAAa7b,EAAA,CAAK,IAAAuzB,EAAApuB,EAAAquB,WAAAxzB,GAAwB,GAAAuzB,GAAA,OAAAA,GAAA,MAAkDA,EAAA,aAAAA,IAAA,SAA3BpuB,EAAAquB,aAAAxzB,GAA0D,GAAAuzB,GAAA,KAAW,GAAAJ,GAAAG,EAAA,MAAwBJ,EAAAC,KAAAI,OAAuB,GAAAA,GAAA,MAAiB,GAAAJ,EAAA,GAAAG,EAAA,MAA0BJ,EAAAC,KAAA,IAAAI,GAAA,EAA8BL,EAAAC,KAAA,OAAAI,OAA8B,GAAAA,GAAA,OAAkB,GAAAJ,EAAA,GAAAG,EAAA,MAA0BJ,EAAAC,KAAA,IAAAI,GAAA,GAA+BL,EAAAC,KAAA,IAAAI,GAAA,KAAiCL,EAAAC,KAAA,OAAAI,OAA8B,GAAAA,GAAA,SAAoB,GAAAJ,EAAA,GAAAG,EAAA,MAA0BJ,EAAAC,KAAA,IAAAI,GAAA,GAA+BL,EAAAC,KAAA,IAAAI,GAAA,MAAkCL,EAAAC,KAAA,IAAAI,GAAA,KAAiCL,EAAAC,KAAA,OAAAI,OAA8B,GAAAA,GAAA,UAAqB,GAAAJ,EAAA,GAAAG,EAAA,MAA0BJ,EAAAC,KAAA,IAAAI,GAAA,GAA+BL,EAAAC,KAAA,IAAAI,GAAA,MAAkCL,EAAAC,KAAA,IAAAI,GAAA,MAAkCL,EAAAC,KAAA,IAAAI,GAAA,KAAiCL,EAAAC,KAAA,OAAAI,MAA8B,CAAK,GAAAJ,EAAA,GAAAG,EAAA,MAA0BJ,EAAAC,KAAA,IAAAI,GAAA,GAA+BL,EAAAC,KAAA,IAAAI,GAAA,MAAkCL,EAAAC,KAAA,IAAAI,GAAA,MAAkCL,EAAAC,KAAA,IAAAI,GAAA,MAAkCL,EAAAC,KAAA,IAAAI,GAAA,KAAiCL,EAAAC,KAAA,OAAAI,GAAoD,OAArBL,EAAAC,GAAA,EAAqBA,EAAAE,EAAuB,SAAAI,EAAAtuB,EAAAuuB,EAAAN,GAAkD,OAAAH,EAAA9tB,EAAA0sB,EAAA6B,EAAAN,GAA4D,SAAAO,EAAAxuB,GAAwC,IAAV,IAAA0K,EAAA,EAAU7P,EAAA,EAAYA,EAAAmF,EAAA0W,SAAa7b,EAAA,CAAK,IAAAuzB,EAAApuB,EAAAquB,WAAAxzB,GAAwBuzB,GAAA,OAAAA,GAAA,QAAAA,EAAA,aAAAA,IAAA,SAAApuB,EAAAquB,aAAAxzB,IAAsEuzB,GAAA,MAAW1jB,EAAuBA,GAAjB0jB,GAAA,KAAiB,EAAOA,GAAA,MAAkB,EAAOA,GAAA,QAAoB,EAAOA,GAAA,SAAqB,EAAY,EAAQ,OAAA1jB,EAAW,oBAAA2iB,aAAA,IAAAA,YAAA,YAAsb,SAAAoB,IAAsB,IAAAC,EAApM,WAAwB,IAAAtF,EAAA,IAAAuF,MAAkB,IAAAvF,EAAAwF,MAAA,CAAe,IAAI,UAAAD,MAAA,GAAmB,MAAAE,GAASzF,EAAAyF,EAAM,IAAAzF,EAAAwF,MAAe,mCAAoC,OAAAxF,EAAAwF,MAAA9H,WAAkDgI,GAAwF,OAAlEpJ,EAAA,kBAAAgJ,GAAA,KAAAhJ,EAAA,mBAAkEgJ,EAApXxH,QAAzB,eAAyB,SAAAxhB,GAAuC,IAAAC,EAAAD,EAAkB,OAAAA,IAAAC,EAAAD,IAAA,KAAAC,EAAA,MAAkV,IAAsLohB,EAAAoE,EAAAuB,EAAAtB,EAAA2D,EAAAlF,EAAAmF,EAAArD,EAAAC,EAAyiBjC,EAAuCsF,EAAAC,EAAAC,EAAkCC,EAAAtF,GAAxyBuF,GAAA,MAAoBC,GAAA,MAAyBC,GAAA,SAA6BC,GAAA,SAA8B,SAAAC,GAAA/pB,EAAAgqB,GAAqE,OAAxChqB,EAAAgqB,EAAA,IAAiBhqB,GAAAgqB,EAAAhqB,EAAAgqB,GAAuBhqB,EAA+E,SAAAiqB,GAAAC,GAAiClK,EAAA,OAAAqB,EAAA6I,EAA4B,SAAAC,KAAmCnK,EAAA,MAAAyF,EAAA,IAAA2E,UAAA/I,GAA4CrB,EAAA,OAAA0F,EAAA,IAAA2E,WAAAhJ,GAA+CrB,EAAA,OAAAmE,EAAA,IAAAmG,WAAAjJ,GAA+CrB,EAAA,OAAAgH,EAAA,IAAA1F,WAAAD,GAA+CrB,EAAA,QAAAqJ,EAAA,IAAAkB,YAAAlJ,GAAkDrB,EAAA,QAAAsJ,EAAA,IAAAkB,YAAAnJ,GAAkDrB,EAAA,QAAAiG,EAAA,IAAA5uB,aAAAgqB,GAAmDrB,EAAA,QAAAkG,EAAA,IAAAuE,aAAApJ,GAAw8B,SAAAkD,KAAyB,IAAAmG,EAAA1K,EAAA,UAAA4J,GAAAC,GAAqEc,EAAA,WAAAD,EAAmC,GAAAvG,EAAAC,IAAA,GAAAuG,EAAoC,SAAa,IAAAC,EAAAtG,GAAuF,IAArDA,GAAA9sB,KAAAW,IAAAmsB,GAAAwF,IAAqDxF,GAAAH,EAAAC,IAAA,IAA0EE,GAA5BA,IAAA,UAA4ByF,GAAA,EAAAzF,GAAAoG,GAAwDlzB,KAAA0V,IAAA6c,IAAA,EAAAzF,GAAA,cAAAoG,GAAAC,GAAmF,IAAAE,EAAA7K,EAAA,cAAAsE,IAAsD,OAAAuG,KAAAC,YAAAxG,IAAkG2F,GAAAY,GAAgCV,MAA0B,IAArG7F,GAAAsG,GAA8B,GAAr5C3G,EAAAG,GAAA,EAAmdpE,EAAA,gBAAAA,EAAA,uBAAAgE,GAAoE,IAAA7C,EAAQ,IAAI,GAAA4J,YAAAC,SAAyB7J,EAAA4J,YAAAC,SAAA3J,EAAA2C,OAAsC,CAAK,IAAAiH,EAAAxF,EAAmBtE,EAAA,IAAA4J,YAAA/G,GAA0B,IAAAoG,UAAAjJ,GAA4BtoB,IAAAoyB,IAAoB,MAAA9B,GAAS,SAAyD,QAA5C+B,GAAA/J,IAAqEA,IAAwtB,IAAIgK,SAAAp0B,UAAAzB,KAAAqB,KAAAd,OAAAu1B,yBAAAL,YAAAh0B,UAAA,cAAAf,IAAiH80B,CAAA,IAAAC,YAAA,IAA+B,MAAA5B,IAAS,SAAA9H,GAA6B,OAAAA,EAAAyJ,aAA2B,IAAAO,GAAArL,EAAA,qBAA+CsE,GAAAtE,EAAA,uBAAujB,SAAAsL,GAAAC,GAAyC,KAAAA,EAAAva,OAAA,IAA0B,IAAAwa,EAAAD,EAAAE,QAA+B,sBAAAD,EAAA,CAAoD,IAAAE,EAAAF,EAAAE,KAAuB,iBAAAA,OAA2B7H,IAAA2H,EAAAza,IAA6BiP,EAAA,UAAA0L,GAA+B1L,EAAA,WAAA0L,EAAAF,EAAAza,KAA8C2a,OAAA7H,IAAA2H,EAAAza,IAAA,KAAAya,EAAAza,UAAhLya,KAAvoBlH,GAAA+G,IAAA3H,EAAA,uDAAAY,GAAA,kBAAA+G,GAAA,KAAuIrL,EAAA,OAAqBqB,EAAArB,EAAA,QAA6B,iBAAA2L,aAAA,mBAAAA,YAAAC,QAA0E5L,EAAA,eAAA2L,YAAAC,OAAA,CAA6CC,QAAAvH,GAAAsF,KAAwCvI,EAAArB,EAAA,WAAAqB,QAAwCA,EAAA,IAAA0J,YAAAzG,IAAqCtE,EAAA,OAAAqB,GAAwB8I,KAA6a,IAAA2B,GAAA,GAAoBC,GAAA,GAAkBC,GAAA,GAAkBC,GAAA,GAAkBC,GAAA,GAAqBC,IAAA,EAAwiC,IAAAtG,GAAAruB,KAAAU,IAAsB8tB,GAAAxuB,KAAAwV,KAAwB+Y,GAAAvuB,KAAAyV,MAA0B6Y,GAAAtuB,KAAA0V,IAAsBkf,GAAA50B,KAAA60B,MAA0BC,GAAA,EAAsBC,GAAA,KAA8BC,GAAA,KAA+B,SAAAC,GAAAC,GAAoC,OAAAA,EAAU,SAAAC,GAAAD,GAA8BJ,KAAkBtM,EAAA,wBAAqCA,EAAA,uBAAAsM,IAAmD,SAAAM,GAAAF,GAA0I,GAAzGJ,KAAkBtM,EAAA,wBAAqCA,EAAA,uBAAAsM,IAAkD,GAAAA,KAAuB,OAAAC,KAAgCM,cAAAN,IAAoCA,GAAA,MAA0BC,IAAA,CAA0B,IAAAhB,EAAAgB,GAAmCA,GAAA,KAA2BhB,KAAaxL,EAAA,mBAA6BA,EAAA,mBAA6B,IAAA8M,GAAA,wCAA0D,SAAAC,GAAA9L,GAA6B,OAAAqG,OAAAvwB,UAAAi2B,WAAA/L,EAAA+L,WAAAF,IAAA,IAAA7L,EAAAwB,QAAAqK,KAA0G,WAA2B,IAAAG,EAAA,gBAAiCC,EAAA,gBAAmCC,EAAA,uBAAyCJ,GAAAE,KAA6BA,EAAAnM,EAAAmM,IAAsCF,GAAAG,KAA+BA,EAAApM,EAAAoM,IAA0CH,GAAAI,KAA8BA,EAAArM,EAAAqM,IAAwC,IAAyBC,EAAA,CAAUC,OAAA,KAAAC,IAAA,KAAAC,SAAAzI,EAAA0I,OAAAxN,GAAqE/qB,EAAA,KAAmb,SAAAw4B,IAAqB,IAAI,GAAAzN,EAAA,WAAyB,WAAAsB,WAAAtB,EAAA,YAA4C,GAAAA,EAAA,WAAyB,OAAAA,EAAA,WAAAkN,GAAiD,uDAAwD,MAAAxJ,GAAW0B,GAAA1B,IAAgc,SAAAgK,EAAAL,EAAAC,EAAAK,GAAiD,oBAAAhC,YAAyE,OAAvCjI,EAAA,oCAAuC,EAAa,KAAA1D,EAAA,sBAAA2L,YAAAC,QAA6F,OAApClI,EAAA,iCAAoC,EAAwI,SAAAkK,EAAAC,EAAA34B,IAA0CD,EAAA44B,EAAA54B,SAAyB64B,QAA5/C,SAAAC,GAAgC,IAAAC,EAAAhO,EAAA,OAA+B+N,EAAAjD,WAAAkD,EAAAlD,YAA8CpH,EAAA,8GAAkH,IAAAuK,EAAA,IAAA7D,UAAA4D,GAAqC,IAAA5D,UAAA2D,GAAqCl1B,IAAAo1B,GAAqBhE,GAAA8D,GAA8B5D,KAAgqC+D,CAAAj5B,EAAA64B,QAA8C9N,EAAA,IAAA/qB,EAAsB+qB,EAAA,aAAyB4M,KAA6E,GAAxWU,EAAA,OAAAtN,EAAA,WAAmCoN,EAAA,QAAgBe,QAAAnlB,cAA+BokB,EAAA,eAAA51B,KAAyB41B,EAAA,IAAAE,EAAwNX,KAAqC3M,EAAA,gBAA8B,IAAI,OAAAA,EAAA,gBAAAoN,EAAAQ,GAAuD,MAAAzE,GAAsE,OAA7DzF,EAAA,sDAAAyF,IAA6D,EAAc,SAAAiF,EAAAC,GAA2CT,EAAAS,EAAA,SAAAA,EAAA,QAAqD,SAAAC,EAAAC,IAA9vCvO,EAAA,aAAAK,IAAAC,GAAA,mBAAAkO,MAAmV,IAAAC,QAAA,SAAAC,EAAAC,GAA6CD,EAAAjB,OAA9Re,MAAAtB,EAAA,CAA6B0B,YAAA,gBAA0BC,KAAA,SAAA1L,GAA2B,IAAAA,EAAA,GAAoB,4CAAA+J,EAAA,IAA+D,OAAA/J,EAAA,gBAAiC2L,MAAA,WAAqB,OAAArB,OAA2+BoB,KAAA,SAAA3N,GAA0C,OAAAyK,YAAAoD,YAAA7N,EAAAkM,KAA4CyB,KAAAN,GAAAO,MAAA,SAAAlN,GAA0C8B,EAAA,0CAAA9B,GAAsDwD,GAAAxD,KAAof,OAAne5B,EAAA,+BAAA2L,YAAAqD,sBAAAjC,GAAAG,IAAA,mBAAAsB,MAAibF,EAAAF,GAA1SzC,YAAAqD,qBAAAR,MAAAtB,EAAA,CAAuD0B,YAAA,gBAA0BxB,GAAAyB,KAAAT,GAAAU,MAAA,SAAAlN,GAAgE8B,EAAA,kCAAA9B,GAA8C8B,EAAA,6CAAiD4K,EAAAF,KAA4G,GAASpO,EAAA,WAAAA,EAAA,IAAmC,IAAAiP,EAAAjP,EAAA,cAAgcA,EAAA,uBAAAgE,GAAwC,gBAAAkL,EAA0BD,EAAAjL,GAAnd,SAAAA,GAA2GA,EAAA+F,GAAA/F,EAArEhE,EAAA,UAAA4J,GAAAC,IAAsG,IAAyBsF,EAAzBnP,EAAA,OAAyB8K,WAA2B,GAAA9K,EAAA,UAAwB,IAAsE,WAAlEA,EAAA,WAAAoP,MAAApL,EAAAmL,GAAvjG,OAA6oGnP,EAAA,OAAAA,EAAA,WAAAqB,OAAyD,KAAa,MAAA8H,GAAS,aAAuHkG,CAAArL,IAAkC,IAAAkL,EAAA,GAAmBlP,EAAA,aAAAqN,EAAAC,EAAAK,GAAz5F,IAAqkH14B,EAArmB,KAApBq4B,KAAoB,OAAkB,IAAAgC,EAAAtP,EAAA,mBAAuC6D,IAAAyL,MAAA,MAA0C,IAAAC,EAAAvP,EAAA,iBAA8C,iBAAA2L,aAAA,mBAAAA,YAAA6D,MAAwGlC,EAAA,WAA/BzJ,IAAA0L,EAA+B,IAAA5D,YAAA6D,MAAA,CAAoC3D,QAAAyD,EAAAG,QAAAF,EAAAG,QAAA,YAAyE,IAAA/D,YAAA6D,MAAA,CAAoC3D,QAAAyD,EAAAI,QAAA,YAA+CpC,EAAA,UAAAh2B,MAAAg4B,GAAmCtP,EAAA,UAAAsN,EAAA,MAAqP,OAApNA,EAAA,aAAuBA,EAAA,WAAAtN,EAAA,aAAwCsN,EAAA,YAAsBA,EAAA,aAA+E/L,EAAhDtsB,EAAAy4B,EAAAL,EAAAC,GAAgD,iCAAgDr4B,GAAkB06B,GAA0C1L,EAAA2L,OAA6B7D,GAAA8D,KAAA,CAAiBnE,KAAA,WAAiBoE,OAAgC,CAAEpE,KAAA,WAAiBqE,OAAmC,CAAErE,KAAA,WAAiBsE,OAA+B,CAAEtE,KAAA,WAAiBuE,OAAmC,CAAEvE,KAAA,WAAiBwE,QAAsDlQ,EAAA,YAAh4hB,KAAk6hBA,EAAA,YAAzD,OAA2F,IAAAmQ,GAAAlM,EAA4Y,SAAAmM,KAAsC,QAAAA,GAAAC,mBAAtZpM,GAAA,GAA4c,IAAAqM,GAAA,CAAgBC,KAAA,EAAAC,OAAA,GAAAC,MAAA,GAAyBC,SAAA,SAAAC,GAA8B,IAAAA,GAAAL,GAAAG,MAAAE,GAAA,OAAAA,EAAyD,QAAAj6B,KAAA45B,GAAAG,MAAA,CAAiC,IAAAnL,GAAA5uB,EAA4C,GAA/B45B,GAAAG,MAAAnL,GAA+BqL,aAA6B,OAAArL,EAAY,OAAAqL,GAAgBC,OAAA,SAAAtL,GAAwBA,GAAegL,GAAAG,MAAAnL,GAA+BuL,YAAgBC,OAAA,SAAAxL,GAAwB,GAAAA,EAAA,CAAe,IAAA8H,EAAAkD,GAAAG,MAAAnL,GAA+B/D,EAAA6L,EAAAyD,SAAA,GAAwBzD,EAAAyD,WAAgB,IAAAzD,EAAAyD,UAAAzD,EAAA2D,WAAsC3D,EAAA4D,YAAoBhR,EAAA,WAAAoN,EAAA4D,WAAA1L,UAA0CgL,GAAAG,MAAAnL,GAA6B2L,sBAAA3L,MAA4B4L,SAAA,SAAA5L,GAA0BA,IAAegL,GAAAG,MAAAnL,GAA+BuL,SAAA,KAAy3C,IAAAM,GAAA,CAAiBC,MAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,OAAA,GAAAC,OAAA,GAAAC,YAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,SAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,OAAA,GAAAC,MAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,UAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,MAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,KAAA,GAAAC,OAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,UAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,SAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,SAAA,GAAAC,OAAA,GAAAC,UAAA,GAAAC,aAAA,GAAAC,MAAA,GAAAC,WAAA,GAAAC,aAAA,GAAAC,WAAA,IAAAC,QAAA,IAAAC,aAAA,GAAAC,WAAA,GAAAC,SAAA,GAAAC,YAAA,GAAAC,UAAA,IAAAC,aAAA,IAAAC,WAAA,GAAAC,aAAA,IAAAC,YAAA,IAAAC,SAAA,IAAAC,UAAA,IAAAC,UAAA,IAAAC,aAAA,IAAAC,YAAA,IAAAC,SAAA,IAAAC,aAAA,GAAAC,SAAA,GAAAC,gBAAA,GAAAC,gBAAA,GAAAC,cAAA,GAAAC,UAAA,IAAAC,QAAA,IAAAC,SAAA,IAAAC,aAAA,IAAAC,OAAA,GAAAC,OAAA,IAAAC,OAAA,IAAAC,QAAA,GAAAC,UAAA,IAAAC,OAAA,GAAAC,UAAA,GAAAC,UAAA,IAAAC,gBAAA,IAAAC,WAAA,IAAAC,SAAA,IAA82CC,GAAA,CAAoBC,EAAA,UAAAC,EAAA,iBAAAC,EAAA,4BAAAC,EAAA,kBAAAC,EAAA,0BAAAC,EAAA,YAAAC,EAAA,4BAAAC,EAAA,oBAAAC,EAAA,oBAAAC,EAAA,kBAAAC,GAAA,cAAAC,GAAA,oBAAAC,GAAA,kBAAAC,GAAA,oBAAAC,GAAA,cAAAC,GAAA,wBAAAC,GAAA,oBAAAC,GAAA,cAAAC,GAAA,oBAAAC,GAAA,iBAAAC,GAAA,kBAAAC,GAAA,iBAAAC,GAAA,mBAAAC,GAAA,gCAAAC,GAAA,sBAAAC,GAAA,mBAAAC,GAAA,iBAAAC,GAAA,iBAAAC,GAAA,0BAAAC,GAAA,eAAAC,GAAA,wBAAAC,GAAA,iBAAAC,GAAA,cAAAC,GAAA,iCAAAC,GAAA,gCAAAC,GAAA,8BAAAC,GAAA,6BAAAC,GAAA,4BAAAC,GAAA,2BAAAC,GAAA,sBAAAC,GAAA,0BAAAC,GAAA,6BAAAC,GAAA,qBAAAC,GAAA,8BAAAC,GAAA,2BAAAC,GAAA,iBAAAC,GAAA,gBAAAC,GAAA,2BAAAC,GAAA,+BAAAC,GAAA,6BAAAC,GAAA,iBAAAC,GAAA,mBAAAC,GAAA,6BAAAC,GAAA,gBAAAC,GAAA,WAAAC,GAAA,uBAAAC,GAAA,eAAAC,GAAA,oBAAAC,GAAA,sBAAAC,GAAA,4BAAAC,GAAA,gBAAAC,GAAA,2BAAAC,GAAA,gCAAAC,GAAA,wBAAAC,GAAA,uBAAAC,GAAA,4BAAAC,GAAA,kBAAAC,GAAA,gBAAAC,GAAA,8BAAAC,GAAA,iBAAAC,GAAA,qBAAAC,GAAA,uCAAAC,GAAA,oCAAAC,GAAA,wCAAAC,GAAA,6BAAAC,GAAA,kCAAAC,GAAA,yBAAAC,GAAA,mCAAAC,GAAA,mCAAAC,GAAA,kCAAAC,GAAA,sCAAAC,GAAA,sCAAAC,GAAA,wBAAAC,GAAA,qBAAAC,GAAA,iBAAAC,GAAA,iCAAAC,GAAA,+BAAAC,GAAA,mBAAAC,GAAA,iCAAAC,GAAA,yBAAAC,GAAA,mBAAAC,GAAA,4BAAAC,GAAA,gBAAAC,GAAA,gCAAAC,GAAA,kDAAAC,GAAA,yBAAAC,GAAA,wBAAAC,IAAA,sCAAAC,IAAA,yBAAAC,IAAA,8BAAAC,IAAA,qBAAAC,IAAA,2BAAAC,IAAA,4BAAAC,IAAA,8BAAAC,IAAA,0BAAAC,IAAA,mCAAAC,IAAA,sBAAAC,IAAA,uBAAAC,IAAA,qBAAAC,IAAA,eAAAC,IAAA,sBAAAC,IAAA,2BAAAC,IAAA,iCAAAC,IAAA,oBAAAC,IAAA,iBAAAC,IAAA,4BAAAC,IAAA,qBAAAC,IAAA,sBAAAC,IAAA,yBAA8qG,SAAAC,GAAAjqC,GAA0G,OAA9E4pB,EAAA,oBAAAmE,EAAAnE,EAAA,wBAAA5pB,GAA8EA,EAAa,IAAAkqC,GAAA,CAAUC,UAAA,SAAAtf,GAA8G,MAAhF,gEAAgFuf,KAAAvf,GAAAQ,MAAA,IAA2Cgf,eAAA,SAAAC,EAAAC,GAA0D,IAAT,IAAAx2B,EAAA,EAAShV,EAAAurC,EAAA1vB,OAAA,EAAyB7b,GAAA,EAAKA,IAAA,CAAK,IAAAo7B,EAAAmQ,EAAAvrC,GAAkB,MAAAo7B,EAAemQ,EAAAE,OAAAzrC,EAAA,GAAkB,OAAAo7B,GAAqBmQ,EAAAE,OAAAzrC,EAAA,GAAkBgV,KAAKA,IAAYu2B,EAAAE,OAAAzrC,EAAA,GAAkBgV,KAAM,GAAAw2B,EAAmB,KAAKx2B,EAAGA,IAAMu2B,EAAAG,QAAA,MAAqB,OAAAH,GAAa/yB,UAAA,SAAAoT,GAA4B,IAAA+f,EAAA,MAAA/f,EAAAyE,OAAA,GAAAub,EAAA,MAAAhgB,EAAA8D,QAAA,GAA2O,OAAnK9D,EAAAuf,GAAAG,eAAA1f,EAAA2B,MAAA,KAAAse,OAAA,SAAA/pC,GAA6D,QAAAA,KAAU6pC,GAAAne,KAAA,OAA0Bme,IAAuB/f,EAAA,KAASA,GAAAggB,IAAwBhgB,GAAA,MAAU+f,EAAA,QAAA/f,GAA+BkgB,QAAA,SAAAlgB,GAA0B,IAAAmgB,EAAAZ,GAAAC,UAAAxf,GAAAogB,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GAA6D,OAAAC,GAAAC,GAA0BA,IAAQA,IAAAvc,OAAA,EAAAuc,EAAApwB,OAAA,IAA+BmwB,EAAAC,GAAjD,KAAiEC,SAAA,SAAAtgB,GAA2B,SAAAA,EAAA,UAAwB,IAAAugB,EAAAvgB,EAAAwgB,YAAA,KAAoC,WAAAD,EAAAvgB,EAA8BA,EAAA8D,OAAAyc,EAAA,IAAgCE,QAAA,SAAAzgB,GAA0B,OAAAuf,GAAAC,UAAAxf,GAAA,IAA+B4B,KAAA,WAAmB,IAAA8e,EAAAnqC,MAAAP,UAAA0qB,MAAAnsB,KAAA2sB,UAAA,GAAkD,OAAAqe,GAAA3yB,UAAA8zB,EAAA9e,KAAA,OAAuC+e,MAAA,SAAAtsC,EAAAa,GAAuB,OAAAqqC,GAAA3yB,UAAAvY,EAAA,IAAAa,IAA+By4B,QAAA,WAAiE,IAA3C,IAAAiT,EAAA,GAAAC,GAAA,EAA2CzsC,EAAA8sB,UAAAjR,OAAA,EAA6B7b,IAAA,IAAAysC,EAAyBzsC,IAAA,CAAK,IAAA4rB,EAAA5rB,GAAA,EAAA8sB,UAAA9sB,GAAA0sC,GAAAC,MAAoC,oBAAA/gB,EAA2B,UAAAghB,UAAA,6CAAiE,IAAAhhB,EAAe,SAAS4gB,EAAA5gB,EAAA,IAAA4gB,EAAmCC,EAAA,MAAA7gB,EAAAyE,OAAA,GAA6J,OAAAoc,EAAA,SAAvHD,EAAArB,GAAAG,eAAAkB,EAAAjf,MAAA,KAAAse,OAAA,SAAA/pC,GAA6E,QAAAA,KAAU2qC,GAAAjf,KAAA,OAAgC,KAAkDqf,SAAA,SAAAC,EAAAC,GAA8F,SAAAC,EAAAC,GAA+B,IAAZ,IAAAC,EAAA,EAAiBA,EAAAD,EAAApxB,QAA0B,KAAAoxB,EAAAC,GAATA,KAAuD,IAArB,IAAAhe,EAAA+d,EAAApxB,OAAA,EAA0BqT,GAAA,GAAc,KAAA+d,EAAA/d,GAAPA,KAA8B,OAAAge,EAAAhe,EAAA,GAAsB+d,EAAA3gB,MAAA4gB,EAAAhe,EAAAge,EAAA,GAA5OJ,EAAA3B,GAAA5R,QAAAuT,GAAApd,OAAA,GAAkCqd,EAAA5B,GAAA5R,QAAAwT,GAAArd,OAAA,GAAkY,IAApJ,IAAAyd,EAAAH,EAAAF,EAAAvf,MAAA,MAAoC6f,EAAAJ,EAAAD,EAAAxf,MAAA,MAAgC1R,EAAAxZ,KAAA0V,IAAAo1B,EAAAtxB,OAAAuxB,EAAAvxB,QAAqDwxB,EAAAxxB,EAA2B7b,EAAA,EAAYA,EAAA6b,EAAS7b,IAAK,GAAAmtC,EAAAntC,KAAAotC,EAAAptC,GAAA,CAA8BqtC,EAAArtC,EAAkB,MAAO,IAAAstC,EAAA,GAAmB,IAAAttC,EAAAqtC,EAA0BrtC,EAAAmtC,EAAAtxB,OAAmB7b,IAAKstC,EAAA5S,KAAA,MAAsF,OAA/D4S,IAAAC,OAAAH,EAAA9gB,MAAA+gB,KAA+D7f,KAAA,OAAgCggB,GAAA,CAASC,KAAA,GAAAC,KAAA,aAA0BC,SAAA,aAAwBC,SAAA,SAAAC,EAAAC,GAA8BN,GAAAC,KAAAI,GAAA,CAAeE,MAAA,GAAA7U,OAAA,GAAA4U,OAA4BpB,GAAAsB,eAAAH,EAAAL,GAAAS,aAAsCA,WAAA,CAAcrgB,KAAA,SAAAsgB,GAAuB,IAAAC,EAAAX,GAAAC,KAAAS,EAAAE,KAAAC,MAAmC,IAAAF,EAAS,UAAAzB,GAAA4B,WAAAtS,GAAAoB,QAA4C8Q,EAAAC,MAAeD,EAAAK,UAAA,GAAsBC,MAAA,SAAAN,GAA0BA,EAAAC,IAAAL,IAAAW,MAAAP,EAAAC,MAAiCM,MAAA,SAAAP,GAA0BA,EAAAC,IAAAL,IAAAW,MAAAP,EAAAC,MAAiCzhB,KAAA,SAAAwhB,EAAAhiB,EAAAzQ,EAAAI,EAAA6yB,GAAkD,IAAAR,EAAAC,MAAAD,EAAAC,IAAAL,IAAAa,SAA0C,UAAAjC,GAAA4B,WAAAtS,GAAAM,OAA2D,IAAhB,IAAAsS,EAAA,EAAgB5uC,EAAA,EAAYA,EAAA6b,EAAS7b,IAAA,CAAK,IAAA+rC,EAAW,IAAIA,EAAAmC,EAAAC,IAAAL,IAAAa,SAAAT,EAAAC,KAA2C,MAAAna,GAAS,UAAA0Y,GAAA4B,WAAAtS,GAAAK,KAAyC,QAAA3N,IAAAqd,GAAA,IAAA6C,EAAsC,UAAAlC,GAAA4B,WAAAtS,GAAAW,QAA4C,GAAAoP,QAAA,MAA2C6C,IAAY1iB,EAAAzQ,EAAAzb,GAAA+rC,EAAuE,OAA/C6C,IAAcV,EAAAE,KAAAS,UAAAC,KAAAC,OAAiCH,GAAiBI,MAAA,SAAAd,EAAAhiB,EAAAzQ,EAAAI,EAAA6yB,GAAmD,IAAAR,EAAAC,MAAAD,EAAAC,IAAAL,IAAAmB,SAA0C,UAAAvC,GAAA4B,WAAAtS,GAAAM,OAA2C,QAAAt8B,EAAA,EAAYA,EAAA6b,EAAS7b,IAAK,IAAIkuC,EAAAC,IAAAL,IAAAmB,SAAAf,EAAAC,IAAAjiB,EAAAzQ,EAAAzb,IAAqD,MAAAg0B,GAAS,UAAA0Y,GAAA4B,WAAAtS,GAAAK,KAAsF,OAA5CxgB,IAAWqyB,EAAAE,KAAAS,UAAAC,KAAAC,OAAiC/uC,IAAWkvC,gBAAA,CAAkBP,SAAA,SAAAR,GAAwB,IAAAA,EAAAJ,MAAAlyB,OAAA,CAAsB,IAAAkwB,EAAA,KAAgB,GAAA3gB,EAAA,CAAwB,IAAgB2J,EAAA,IAAAoa,EAAhB,KAA4CP,EAAA,EAAgBQ,EAAA,SAAA7jB,EAAA8jB,SAA8CC,EAAA/jB,EAAAgkB,MAAAD,GAAwB,GAAAF,EAAA,CAAoB,IAAAI,GAAA,EAAsB,IAAIF,EAAAG,GAAAC,SAAA,kBAAiCF,GAAA,EAAiB,MAAAxb,KAAW,IAAI4a,EAAAa,GAAAE,SAAAL,EAAAva,EAAA,EAAjP,IAAiP,MAA6C,MAAAf,GAAS,OAAAA,EAAA/H,WAAAqB,QAAA,OAA+C,MAAA0G,EAA/C4a,EAAA,EAA4DY,GAAgBC,GAAAG,UAAAN,GAAiCvD,EAAhB6C,EAAA,EAAgB7Z,EAAAzI,MAAA,EAAAsiB,GAAA3iB,SAAA,SAAqD,SAAa,oBAAAZ,QAAA,mBAAAA,OAAAwkB,OAAsG,QAAhC9D,EAAA1gB,OAAAwkB,OAAA,cAAkD9D,GAAA,MAAc,mBAAA+D,UAAuD,QAAlB/D,EAAA+D,cAAoC/D,GAAA,MAAc,IAAAA,EAAY,YAAYoC,EAAAJ,MAAAgC,GAAAhE,GAAA,GAA0C,OAAAoC,EAAAJ,MAAAzX,SAAyB2Y,SAAA,SAAAd,EAAA6B,GAA8B,OAAAA,GAAA,KAAAA,GAAyB/sC,EAAAwvB,EAAA0b,EAAAjV,OAAA,IAAqCiV,EAAAjV,OAAA,IAAmB,GAAA8W,GAAA7B,EAAAjV,OAAAwB,KAAAsV,IAAgCvB,MAAA,SAAAN,GAAuBA,EAAAjV,QAAAiV,EAAAjV,OAAArd,OAAA,IAAoC5Y,EAAAwvB,EAAA0b,EAAAjV,OAAA,IAAqCiV,EAAAjV,OAAA,MAAiB+W,iBAAA,CAAmBhB,SAAA,SAAAd,EAAA6B,GAA4B,OAAAA,GAAA,KAAAA,GAAyBzhB,EAAAkE,EAAA0b,EAAAjV,OAAA,IAAqCiV,EAAAjV,OAAA,IAAmB,GAAA8W,GAAA7B,EAAAjV,OAAAwB,KAAAsV,IAAgCvB,MAAA,SAAAN,GAAuBA,EAAAjV,QAAAiV,EAAAjV,OAAArd,OAAA,IAAoC0S,EAAAkE,EAAA0b,EAAAjV,OAAA,IAAqCiV,EAAAjV,OAAA,OAAmBgX,GAAA,CAAWC,UAAA,KAAAC,MAAA,SAAAA,GAAsC,OAAAF,GAAAG,WAAA,mBAA8CA,WAAA,SAAAhY,EAAA93B,EAAAY,EAAA0sC,GAA6C,GAAAnB,GAAA4D,SAAAnvC,IAAAurC,GAAA6D,OAAApvC,GAAuC,UAAAurC,GAAA4B,WAAAtS,GAAAC,OAA2CiU,GAAAC,YAAqBD,GAAAC,UAAA,CAAiBlE,IAAA,CAAKmC,KAAA,CAAMoC,QAAAN,GAAAO,SAAAD,QAAAE,QAAAR,GAAAO,SAAAC,QAAAC,OAAAT,GAAAO,SAAAE,OAAAC,MAAAV,GAAAO,SAAAG,MAAAC,OAAAX,GAAAO,SAAAI,OAAAC,OAAAZ,GAAAO,SAAAK,OAAAC,MAAAb,GAAAO,SAAAM,MAAAC,QAAAd,GAAAO,SAAAO,QAAAC,QAAAf,GAAAO,SAAAQ,SAAyQ/C,OAAA,CAASgD,OAAAhB,GAAAjC,WAAAiD,SAAgCC,KAAA,CAAO/C,KAAA,CAAMoC,QAAAN,GAAAO,SAAAD,QAAAE,QAAAR,GAAAO,SAAAC,SAA8DxC,OAAA,CAASgD,OAAAhB,GAAAjC,WAAAiD,OAAAxkB,KAAAwjB,GAAAjC,WAAAvhB,KAAAsiB,MAAAkB,GAAAjC,WAAAe,MAAA7d,SAAA+e,GAAAjC,WAAA9c,SAAAigB,KAAAlB,GAAAjC,WAAAmD,KAAAC,MAAAnB,GAAAjC,WAAAoD,QAAmLC,KAAA,CAAOlD,KAAA,CAAMoC,QAAAN,GAAAO,SAAAD,QAAAE,QAAAR,GAAAO,SAAAC,QAAAa,SAAArB,GAAAO,SAAAc,UAA+FrD,OAAA,IAAWsD,OAAA,CAASpD,KAAA,CAAMoC,QAAAN,GAAAO,SAAAD,QAAAE,QAAAR,GAAAO,SAAAC,SAA8DxC,OAAAxB,GAAA+E,qBAA+B,IAAArD,EAAA1B,GAAA2D,WAAAhY,EAAA93B,EAAAY,EAAA0sC,GAAwmB,OAA3jBnB,GAAAgF,MAAAtD,EAAAjtC,OAAwBitC,EAAAqC,SAAAP,GAAAC,UAAAlE,IAAAmC,KAAuCA,EAAAH,WAAAiC,GAAAC,UAAAlE,IAAAiC,OAA2CE,EAAAuD,SAAA,IAAiBjF,GAAAkF,OAAAxD,EAAAjtC,OAA8BitC,EAAAqC,SAAAP,GAAAC,UAAAgB,KAAA/C,KAAwCA,EAAAH,WAAAiC,GAAAC,UAAAgB,KAAAjD,OAA4CE,EAAAyD,UAAA,EAAiBzD,EAAAuD,SAAA,MAAmBjF,GAAAoF,OAAA1D,EAAAjtC,OAA8BitC,EAAAqC,SAAAP,GAAAC,UAAAmB,KAAAlD,KAAwCA,EAAAH,WAAAiC,GAAAC,UAAAmB,KAAApD,QAA4CxB,GAAAqF,SAAA3D,EAAAjtC,QAAgCitC,EAAAqC,SAAAP,GAAAC,UAAAqB,OAAApD,KAA0CA,EAAAH,WAAAiC,GAAAC,UAAAqB,OAAAtD,QAA8CE,EAAAS,UAAAC,KAAAC,MAA0B1W,IAAWA,EAAAsZ,SAAApxC,GAAA6tC,GAA2BA,GAAY4D,0BAAA,SAAA5D,GAA4C,GAAAA,EAAAuD,UAAAvD,EAAAuD,SAAA/f,SAAA,CAAqD,IAAX,IAAAqb,EAAA,GAAWjtC,EAAA,EAAYA,EAAAouC,EAAAyD,YAAiB7xC,EAAAitC,EAAAvS,KAAA0T,EAAAuD,SAAA3xC,IAA+B,OAAAitC,EAAW,OAAAmB,EAAAuD,UAAqBM,wBAAA,SAAA7D,GAA0C,OAAAA,EAAAuD,SAAwCvD,EAAAuD,SAAA/f,SAAAwc,EAAAuD,SAAA/f,SAAA,EAAAwc,EAAAyD,WAA0E,IAAA1lB,WAAAiiB,EAAAuD,UAAlH,IAAAxlB,YAAuJ+lB,kBAAA,SAAA9D,EAAA+D,GAAoN,GAApK/D,EAAAuD,UAAAvD,EAAAuD,SAAA/f,UAAAugB,EAAA/D,EAAAuD,SAAA91B,SAA4EuyB,EAAAuD,SAAAzB,GAAA8B,0BAAA5D,GAAoDA,EAAAyD,UAAAzD,EAAAuD,SAAA91B,SAAoCuyB,EAAAuD,UAAAvD,EAAAuD,SAAA/f,SAAA,CAA2C,IAAAwgB,EAAAhE,EAAAuD,SAAAvD,EAAAuD,SAAA91B,OAAA,EAAsD,GAAAu2B,GAAAD,EAAA,OAAwEA,EAAA9vC,KAAAW,IAAAmvC,EAAAC,KAApC,QAAoC,YAA8F,GAAAA,IAAAD,EAAA9vC,KAAAW,IAAAmvC,EAAA,MAAyD,IAAAE,EAAAjE,EAAAuD,SAAwJ,OAA1HvD,EAAAuD,SAAA,IAAAxlB,WAAAgmB,QAA0C/D,EAAAyD,UAAA,GAAAzD,EAAAuD,SAAAjuC,IAAA2uC,EAAAzgB,SAAA,EAAAwc,EAAAyD,WAAA,IAAyI,KAAlDzD,EAAAuD,UAAAQ,EAAA,IAAA/D,EAAAuD,SAAA,IAAkDvD,EAAAuD,SAAA91B,OAAAs2B,GAAA/D,EAAAuD,SAAAjX,KAAA,IAA6D4X,kBAAA,SAAAlE,EAAAmE,GAA4C,GAAAnE,EAAAyD,WAAAU,EAAA,CAAkC,MAAAA,EAAmD,OAApCnE,EAAAuD,SAAA,UAAmBvD,EAAAyD,UAAA,GAAwB,IAAAzD,EAAAuD,UAAAvD,EAAAuD,SAAA/f,SAAA,CAA2C,IAAAygB,EAAAjE,EAAAuD,SAAwM,OAA1KvD,EAAAuD,SAAA,IAAAxlB,WAAA,IAAAyJ,YAAA2c,IAAuDF,GAAgBjE,EAAAuD,SAAAjuC,IAAA2uC,EAAAzgB,SAAA,EAAAvvB,KAAA0V,IAAAw6B,EAAAnE,EAAAyD,kBAA4EzD,EAAAyD,UAAAU,GAAiE,GAAnCnE,EAAAuD,WAAAvD,EAAAuD,SAAA,IAAmCvD,EAAAuD,SAAA91B,OAAA02B,EAAAnE,EAAAuD,SAAA91B,OAAA02B,OAA6D,KAAAnE,EAAAuD,SAAA91B,OAAA02B,GAAAnE,EAAAuD,SAAAjX,KAAA,GAA8D0T,EAAAyD,UAAAU,IAAuB9B,SAAA,CAAYD,QAAA,SAAApC,GAAwB,IAAAoE,EAAA,GAAse,OAA1dA,EAAA3E,IAAAnB,GAAAqF,SAAA3D,EAAAjtC,MAAAitC,EAAA7W,GAAA,EAA0Cib,EAAAC,IAAArE,EAAA7W,GAAiBib,EAAArxC,KAAAitC,EAAAjtC,KAAoBqxC,EAAAE,MAAA,EAAaF,EAAAG,IAAA,EAAWH,EAAAI,IAAA,EAAWJ,EAAAnE,KAAAD,EAAAC,KAAoB3B,GAAAgF,MAAAtD,EAAAjtC,MAAwBqxC,EAAA3jB,KAAA,KAAe6d,GAAAkF,OAAAxD,EAAAjtC,MAA8BqxC,EAAA3jB,KAAAuf,EAAAyD,UAAyBnF,GAAAoF,OAAA1D,EAAAjtC,MAA8BqxC,EAAA3jB,KAAAuf,EAAAkD,KAAAz1B,OAAgC22B,EAAA3jB,KAAA,EAAY2jB,EAAAK,MAAA,IAAA/D,KAAAV,EAAAS,WAAoC2D,EAAAM,MAAA,IAAAhE,KAAAV,EAAAS,WAAoC2D,EAAAO,MAAA,IAAAjE,KAAAV,EAAAS,WAAoC2D,EAAAQ,QAAA,KAAkBR,EAAAS,OAAA5wC,KAAAwV,KAAA26B,EAAA3jB,KAAA2jB,EAAAQ,SAA8CR,GAAY9B,QAAA,SAAAtC,EAAAoE,QAA+B9jB,IAAA8jB,EAAArxC,OAA0BitC,EAAAjtC,KAAAqxC,EAAArxC,WAAoButB,IAAA8jB,EAAA3D,YAA+BT,EAAAS,UAAA2D,EAAA3D,gBAA8BngB,IAAA8jB,EAAA3jB,MAA0BqhB,GAAAoC,kBAAAlE,EAAAoE,EAAA3jB,OAAyC8hB,OAAA,SAAAtY,EAAA93B,GAAgC,MAAAmsC,GAAAwG,cAAAlX,GAAAE,SAA2C0U,MAAA,SAAAvY,EAAA93B,EAAAY,EAAA0sC,GAAwC,OAAAqC,GAAAG,WAAAhY,EAAA93B,EAAAY,EAAA0sC,IAA8CgD,OAAA,SAAAsC,EAAAC,EAAAC,GAA8C,GAAA3G,GAAAgF,MAAAyB,EAAAhyC,MAAA,CAA4B,IAAAmyC,EAAa,IAAIA,EAAA5G,GAAA6G,WAAAH,EAAAC,GAAyC,MAAArf,IAAU,GAAAsf,EAAa,QAAAtzC,KAAAszC,EAAA3B,SAAgC,UAAAjF,GAAA4B,WAAAtS,GAAAgF,kBAAiDmS,EAAA9a,OAAAsZ,SAAAwB,EAAA5yC,MAA+C4yC,EAAA5yC,KAAA8yC,EAAuBD,EAAAzB,SAAA0B,GAAAF,EAAoCA,EAAA9a,OAAA+a,GAAwBtC,OAAA,SAAAzY,EAAA93B,UAAgC83B,EAAAsZ,SAAApxC,IAA6BwwC,MAAA,SAAA1Y,EAAA93B,GAA+B,IAAA6tC,EAAA1B,GAAA6G,WAAAlb,EAAA93B,GAAoC,QAAAP,KAAAouC,EAAAuD,SAA4B,UAAAjF,GAAA4B,WAAAtS,GAAAgF,kBAA+C3I,EAAAsZ,SAAApxC,IAA6BywC,QAAA,SAAA5C,GAA0B,IAAAoF,EAAA,WAAuB,QAAAjyC,KAAA6sC,EAAAuD,SAA8BvD,EAAAuD,SAAA9vC,eAAAN,IAAgDiyC,EAAA9Y,KAAAn5B,GAAkB,OAAAiyC,GAAevC,QAAA,SAAA5Y,EAAAob,EAAAC,GAA4C,IAAAtF,EAAA8B,GAAAG,WAAAhY,EAAAob,EAAA,SAAwE,OAAlBrF,EAAAkD,KAAAoC,EAAkBtF,GAAYmD,SAAA,SAAAnD,GAA2B,IAAA1B,GAAAoF,OAAA1D,EAAAjtC,MAA0B,UAAAurC,GAAA4B,WAAAtS,GAAAuB,QAA4C,OAAA6Q,EAAAkD,OAAmBrD,WAAA,CAAavhB,KAAA,SAAAwhB,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,GAAqD,IAAAhC,EAAAzD,EAAAE,KAAAuD,SAAkC,GAAAgC,GAAAzF,EAAAE,KAAAyD,UAAA,SAA4C,IAAAhjB,EAAAxsB,KAAA0V,IAAAm2B,EAAAE,KAAAyD,UAAA8B,EAAA93B,GAAyE,GAAhBuQ,EAAAyC,GAAA,GAAgBA,EAAA,GAAA8iB,EAAA/f,SAA8B1F,EAAAxoB,IAAAiuC,EAAA/f,SAAA+hB,IAAA9kB,GAAApT,QAAkE,QAAAzb,EAAA,EAAYA,EAAA6uB,EAAO7uB,IAAAksB,EAAAzQ,EAAAzb,GAAA2xC,EAAAgC,EAAA3zC,GAA0C,OAAA6uB,GAAYmgB,MAAA,SAAAd,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,EAAAC,GAA+D,IAAA/3B,EAAA,SAAoB,IAAAuyB,EAAAF,EAAAE,KAA+C,GAA1BA,EAAAS,UAAAC,KAAAC,MAA0B7iB,EAAA0F,YAAAwc,EAAAuD,UAAAvD,EAAAuD,SAAA/f,UAAA,CAA8D,GAAAgiB,EAAqF,OAA1ExF,EAAAuD,SAAAzlB,EAAA0F,SAAAnW,IAAAI,GAAoDuyB,EAAAyD,UAAAh2B,EAAsBA,EAAc,OAAAuyB,EAAAyD,WAAA,IAAA8B,EAAoI,OAA1FvF,EAAAuD,SAAA,IAAAxlB,WAAAD,EAAA0F,SAAAnW,IAAAI,IAAoEuyB,EAAAyD,UAAAh2B,EAAsBA,EAAc,GAAA83B,EAAA93B,GAAAuyB,EAAAyD,UAA2G,OAAlEzD,EAAAuD,SAAAjuC,IAAAwoB,EAAA0F,SAAAnW,IAAAI,GAAA83B,GAAkE93B,EAA6D,GAA9Cq0B,GAAAgC,kBAAA9D,EAAAuF,EAAA93B,GAA8CuyB,EAAAuD,SAAA/f,UAAA1F,EAAA0F,SAAAwc,EAAAuD,SAAAjuC,IAAAwoB,EAAA0F,SAAAnW,IAAAI,GAAA83B,QAAkH,QAAA3zC,EAAA,EAAYA,EAAA6b,EAAS7b,IAAKouC,EAAAuD,SAAAgC,EAAA3zC,GAAAksB,EAAAzQ,EAAAzb,GAAoG,OAAxDouC,EAAAyD,UAAAxvC,KAAAW,IAAAorC,EAAAyD,UAAA8B,EAAA93B,GAAwDA,GAAcq1B,OAAA,SAAAhD,EAAAzyB,EAAAo4B,GAAyC,IAAAF,EAAAl4B,EAAkJ,GAA9H,IAAAo4B,EAAeF,GAAAzF,EAAAyF,SAA0B,IAAAE,GAAoBnH,GAAAkF,OAAA1D,EAAAE,KAAAjtC,QAAgCwyC,GAAAzF,EAAAE,KAAAyD,WAAiC8B,EAAA,EAAe,UAAAjH,GAAA4B,WAAAtS,GAAAuB,QAA4C,OAAAoW,GAAgBxiB,SAAA,SAAA+c,EAAAzyB,EAAAI,GAA2Cq0B,GAAAgC,kBAAAhE,EAAAE,KAAA3yB,EAAAI,GAAmDqyB,EAAAE,KAAAyD,UAAAxvC,KAAAW,IAAAkrC,EAAAE,KAAAyD,UAAAp2B,EAAAI,IAAoEu1B,KAAA,SAAAlD,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,EAAAG,EAAAC,GAAkE,IAAArH,GAAAkF,OAAA1D,EAAAE,KAAAjtC,MAAiC,UAAAurC,GAAA4B,WAAAtS,GAAAoB,QAA4C,IAAAjN,EAAQ6jB,EAAcrC,EAAAzD,EAAAE,KAAAuD,SAAkC,KAAAoC,GAAApC,EAAAzlB,YAAAylB,EAAAzlB,kBAAoH,CAAsP,IAAjPynB,EAAA,GAAAA,EAAA93B,EAAAqyB,EAAAE,KAAAyD,aAA4EF,EAAtBA,EAAA/f,SAAsB+f,EAAA/f,SAAA+hB,IAAA93B,GAA0D1Z,MAAAP,UAAA0qB,MAAAnsB,KAAAwxC,EAAAgC,IAAA93B,IAAwEm4B,GAAA,IAAe7jB,EAAAsB,GAAA5V,IAA6B,UAAA6wB,GAAA4B,WAAAtS,GAAAa,QAA4C3Q,EAAAxoB,IAAAiuC,EAAAxhB,QAAnV6jB,GAAA,EAAgB7jB,EAAAwhB,EAAAsC,WAA4V,OAAO9jB,MAAA6jB,cAA6B3C,MAAA,SAAAnD,EAAAhiB,EAAAzQ,EAAAI,EAAAq4B,GAAyD,IAAAxH,GAAAkF,OAAA1D,EAAAE,KAAAjtC,MAAiC,UAAAurC,GAAA4B,WAAAtS,GAAAoB,QAA4C,KAAA8W,EAAgB,SAAShE,GAAAjC,WAAAe,MAAAd,EAAAhiB,EAAA,EAAArQ,EAAAJ,GAAA,GAA6E,YAAa04B,GAAA,CAAWC,IAAA,GAAMC,UAAA,WAAuB,uBAAAA,UAAA,OAAAA,UAAmD,IAAAroB,EAAA,KAAqL,MAAxK,iBAAAX,SAAAW,EAAAX,OAAAgpB,WAAAhpB,OAAAipB,cAAAjpB,OAAAkpB,iBAAAlpB,OAAAmpB,aAAkHpoB,EAAAJ,EAAA,2CAAsDA,GAAWyoB,WAAA,GAAAC,cAAA,YAAAtE,MAAA,SAAAA,GAAiE,OAAAF,GAAAE,MAAA/d,MAAA,KAAAvF,YAAyC6nB,OAAA,SAAAvE,EAAAwE,EAAAve,GAA4C8d,GAAAU,YAAAzE,EAAA,SAAA7hB,EAAAumB,GAA6C,GAAAvmB,EAAA,OAAA8H,EAAA9H,GAA4B4lB,GAAAY,aAAA3E,EAAA,SAAA7hB,EAAAymB,GAA+C,GAAAzmB,EAAA,OAAA8H,EAAA9H,GAA4B,IAAArB,EAAA0nB,EAAAI,EAAAF,EAA8BG,EAAAL,EAAAE,EAAAE,EAA8Bb,GAAAe,UAAAhoB,EAAA+nB,EAAA5e,QAAwC8e,MAAA,SAAA50C,EAAA81B,GAAiC,IAAuD+e,EAAvDC,EAAAlB,GAAAC,IAAA7zC,GAAuB,GAAA80C,EAAO,OAAAhf,EAAA,KAAAgf,GAAiC,IAAID,EAAAjB,GAAAE,YAAAzmB,KAAArtB,EAAA4zC,GAAAM,YAAkD,MAAAzgB,GAAS,OAAAqC,EAAArC,GAAmB,IAAAohB,EAAS,OAAA/e,EAAA,kCAAkD+e,EAAAE,gBAAA,SAAAthB,GAAiC,IAA4DuhB,EAA5DF,EAAArhB,EAAA/d,OAAA81B,OAAuByJ,EAAAxhB,EAAA/d,OAAAu/B,aAAyGD,EAAtDF,EAAAI,iBAAAC,SAAAvB,GAAAO,eAAsDc,EAAAG,YAAAxB,GAAAO,eAA4DW,EAAAO,kBAAAzB,GAAAO,gBAAoDmB,WAAAH,SAAA,cAAgDH,EAAAO,YAAA,yBAA+CC,QAAA,KAAkBX,EAAAY,UAAA,WAA0BX,EAAAD,EAAArJ,OAAcoI,GAAAC,IAAA7zC,GAAA80C,EAAmBhf,EAAA,KAAAgf,IAAoBD,EAAAlnB,QAAA,SAAA8F,GAAyBqC,EAAA4f,KAAAC,OAAqBliB,EAAAmiB,mBAAqBtB,YAAA,SAAAzE,EAAA/Z,GAAwC,IAAAmd,EAAA,GAAe,SAAA4C,EAAAt0C,GAAsB,YAAAA,GAAA,OAAAA,EAAyB,SAAAu0C,EAAArK,GAA0B,gBAAAlqC,GAAmB,OAAAqpC,GAAAoB,MAAAP,EAAAlqC,IAAuH,IAA3F,IAAAw0C,EAAA5J,GAAAsE,QAAAZ,EAAAmG,YAAA1K,OAAAuK,GAAAI,IAAAH,EAAAjG,EAAAmG,aAA2FD,EAAAz6B,QAAA,CAAoB,IAAqB46B,EAArB7qB,EAAA0qB,EAAAI,MAA8B,IAAID,EAAA/J,GAAA+J,KAAA7qB,GAAmB,MAAAoI,GAAS,OAAAqC,EAAArC,GAAmB0Y,GAAAgF,MAAA+E,EAAAt1C,OAAwBm1C,EAAA5b,KAAArI,MAAAikB,EAAA5J,GAAAsE,QAAAplB,GAAAigB,OAAAuK,GAAAI,IAAAH,EAAAzqB,KAAiF4nB,EAAA5nB,GAAA,CAAeijB,UAAA4H,EAAA3D,OAAsB,OAAAzc,EAAA,MAAsB7zB,KAAA,QAAAgxC,aAA+BuB,aAAA,SAAA3E,EAAA/Z,GAAyC,IAAAmd,EAAA,GAAeW,GAAAgB,MAAA/E,EAAAmG,WAAA,SAAAhoB,EAAA8mB,GAA+C,GAAA9mB,EAAA,OAAA8H,EAAA9H,GAA4B,IAAI,IAAAinB,EAAAH,EAAAG,YAAA,CAAArB,GAAAO,eAAA,YAAiEc,EAAAtnB,QAAA,SAAA8F,GAAiCqC,EAAA4f,KAAAC,OAAqBliB,EAAAmiB,kBAAqBX,EAAAG,YAAAxB,GAAAO,eAAuDiC,MAAA,aAAmCC,gBAAAZ,UAAA,SAAAa,GAAiD,IAAAC,EAAAD,EAAA5gC,OAAA81B,OAA+B,IAAA+K,EAAY,OAAAzgB,EAAA,MAAsB7zB,KAAA,SAAA6yC,KAAA7B,YAAsCA,EAAAsD,EAAAC,YAAA,CAA4BlI,UAAAiI,EAAAv1C,KAAsBu1C,EAAAE,YAAoB,MAAAhjB,GAAS,OAAAqC,EAAArC,OAAuBijB,eAAA,SAAArrB,EAAAyK,GAA0C,IAAAogB,EAAArI,EAAc,IAAmCA,EAA/B1B,GAAAwK,WAAAtrB,GAA+BwiB,KAAiBqI,EAAA/J,GAAA+J,KAAA7qB,GAAmB,MAAAoI,GAAS,OAAAqC,EAAArC,GAAmB,OAAA0Y,GAAAgF,MAAA+E,EAAAt1C,MAAwBk1B,EAAA,MAAsBwY,UAAA4H,EAAA3D,MAAA3xC,KAAAs1C,EAAAt1C,OAAsCurC,GAAAkF,OAAA6E,EAAAt1C,OAA8BitC,EAAAuD,SAAAzB,GAAA+B,wBAAA7D,GAAkD/X,EAAA,MAAsBwY,UAAA4H,EAAA3D,MAAA3xC,KAAAs1C,EAAAt1C,KAAAwwC,SAAAvD,EAAAuD,YAAkEtb,EAAA,IAAAvC,MAAA,6BAAuDqjB,gBAAA,SAAAvrB,EAAAwrB,EAAA/gB,GAAiD,IAAI,GAAAqW,GAAAgF,MAAA0F,EAAAj2C,MAAyBurC,GAAA2K,MAAAzrB,EAAAwrB,EAAAj2C,UAA0B,KAAAurC,GAAAkF,OAAAwF,EAAAj2C,MAAoF,OAAAk1B,EAAA,IAAAvC,MAAA,4BAArD4Y,GAAA4K,UAAA1rB,EAAAwrB,EAAAzF,SAAA,CAAkCiC,QAAA,IAAyElH,GAAA6K,MAAA3rB,EAAAwrB,EAAAj2C,MAA0BurC,GAAA8K,MAAA5rB,EAAAwrB,EAAAvI,UAAAuI,EAAAvI,WAA+C,MAAA7a,GAAS,OAAAqC,EAAArC,GAAmBqC,EAAA,OAAeohB,iBAAA,SAAA7rB,EAAAyK,GAA4C,IAAIqW,GAAAwK,WAAAtrB,GAAA,IAA+B6qB,EAAA/J,GAAA+J,KAAA7qB,GAAuB8gB,GAAAgF,MAAA+E,EAAAt1C,MAAwBurC,GAAAqE,MAAAnlB,GAAe8gB,GAAAkF,OAAA6E,EAAAt1C,OAA8BurC,GAAAoE,OAAAllB,GAAiB,MAAAoI,GAAS,OAAAqC,EAAArC,GAAmBqC,EAAA,OAAeqhB,gBAAA,SAAAC,EAAA/rB,EAAAyK,GAAiD,IAAA+e,EAAAuC,EAAA92C,IAAA+qB,GAAwBwpB,EAAAY,UAAA,SAAAa,GAA+BxgB,EAAA,KAAAwgB,EAAA5gC,OAAA81B,SAAqCqJ,EAAAlnB,QAAA,SAAA8F,GAAyBqC,EAAA4f,KAAAC,OAAqBliB,EAAAmiB,mBAAqByB,iBAAA,SAAAD,EAAA/rB,EAAAwrB,EAAA/gB,GAAwD,IAAA+e,EAAAuC,EAAAE,IAAAT,EAAAxrB,GAA8BwpB,EAAAY,UAAA,WAA0B3f,EAAA,OAAiB+e,EAAAlnB,QAAA,SAAA8F,GAAyBqC,EAAA4f,KAAAC,OAAqBliB,EAAAmiB,mBAAqB2B,kBAAA,SAAAH,EAAA/rB,EAAAyK,GAAmD,IAAA+e,EAAAuC,EAAAI,OAAAnsB,GAA2BwpB,EAAAY,UAAA,WAA0B3f,EAAA,OAAiB+e,EAAAlnB,QAAA,SAAA8F,GAAyBqC,EAAA4f,KAAAC,OAAqBliB,EAAAmiB,mBAAqBjB,UAAA,SAAAhoB,EAAA+nB,EAAA5e,GAAwC,IAAA2hB,EAAA,EAAY12C,EAAA,GAAcZ,OAAAu3C,KAAA/qB,EAAAsmB,SAAAj4B,QAAA,SAAAha,GAAgD,IAAAyyB,EAAA9G,EAAAsmB,QAAAjyC,GAAuB22C,EAAAjD,EAAAzB,QAAAjyC,KAAwB22C,GAAAlkB,EAAA6a,UAAAqJ,EAAArJ,aAAkCvtC,EAAAo5B,KAAAn5B,GAAiBy2C,OAAY,IAAAG,EAAA,GAAkJ,GAApIz3C,OAAAu3C,KAAAhD,EAAAzB,SAAAj4B,QAAA,SAAAha,GAAgD0zC,EAAAzB,QAAAjyC,GAAuB2rB,EAAAsmB,QAAAjyC,KAAgC42C,EAAAzd,KAAAn5B,GAAiBy2C,QAAYA,EAAW,OAAA3hB,EAAA,MAAsB,IAAA+hB,EAAA,EAAyD5C,GAAzC,WAAAtoB,EAAA1qB,KAAA0qB,EAAAmoB,GAAAJ,EAAAI,IAAyCG,YAAA,CAAArB,GAAAO,eAAA,aAAkEiD,EAAAnC,EAAAG,YAAAxB,GAAAO,eAAuD,SAAA2D,EAAA9pB,GAAmB,OAAAA,EAAQ8pB,EAAAC,aAAyD,GAAvCD,EAAAC,SAAA,EAAkBjiB,EAAA9H,MAA4B6pB,GAAAJ,EAAuB3hB,EAAA,WAAvB,EAA8Cmf,EAAAtnB,QAAA,SAAA8F,GAAiCqkB,EAAApC,KAAAC,OAAiBliB,EAAAmiB,kBAAqB70C,EAAAi3C,OAAAh9B,QAAA,SAAAqQ,GAAsC,UAAAqpB,EAAAzyC,KAAuB2xC,GAAAuD,gBAAAC,EAAA/rB,EAAA,SAAA2C,EAAA6oB,GAAsD,GAAA7oB,EAAA,OAAA8pB,EAAA9pB,GAAwB4lB,GAAAgD,gBAAAvrB,EAAAwrB,EAAAiB,KAA+ClE,GAAA8C,eAAArrB,EAAA,SAAA2C,EAAA6oB,GAA+C,GAAA7oB,EAAA,OAAA8pB,EAAA9pB,GAAwB4lB,GAAAyD,iBAAAD,EAAA/rB,EAAAwrB,EAAAiB,OAAqDF,EAAAI,OAAAC,UAAAj9B,QAAA,SAAAqQ,GAAgD,UAAAqpB,EAAAzyC,KAAuB2xC,GAAAsD,iBAAA7rB,EAAAysB,GAAuClE,GAAA2D,kBAAAH,EAAA/rB,EAAAysB,OAAgDI,GAAA,CAAYC,WAAA,EAAAC,WAAA,WAAuCF,GAAAC,YAAAntB,EAAA8jB,SAAAuJ,MAAA,QAAkD,IAAA7E,EAAAxoB,EAAA,qBAA0CwoB,EAAA,KAAgBA,IAAA,IAAkB0E,GAAAI,gBAAA,CAAwBC,KAAA/E,EAAA,SAAAtM,GAAAsM,EAAA,QAAAgF,IAAAhF,EAAA,OAAApQ,EAAAoQ,EAAA,SAAAlQ,EAAAkQ,EAAA,OAAAiF,KAAAjF,EAAA,OAAAkF,IAAAlF,EAAA,QAAAnQ,EAAAmQ,EAAA,WAAoLmF,WAAA,SAAAC,GAAoC,OAAAhK,EAAAiK,MAAAjK,EAAArC,KAAAqM,GAAA,IAAAhK,EAAAgK,IAAqE/I,MAAA,SAAAA,GAAqD,OAA5BhkB,EAAAhB,GAA4BqtB,GAAApI,WAAA,SAAAoI,GAAAY,QAAAjJ,EAAAkJ,KAAAtN,MAAA,IAAqEqE,WAAA,SAAAhY,EAAA93B,EAAAY,EAAA0sC,GAA6C,IAAAnB,GAAAgF,MAAAvwC,KAAAurC,GAAAkF,OAAAzwC,KAAAurC,GAAAoF,OAAA3wC,GAAwD,UAAAurC,GAAA4B,WAAAtS,GAAAuB,QAA4C,IAAA6Q,EAAA1B,GAAA2D,WAAAhY,EAAA93B,EAAAY,GAAyG,OAAhEitC,EAAAqC,SAAAgI,GAAAhI,SAA8BrC,EAAAH,WAAAwK,GAAAxK,WAAkCG,GAAYiL,QAAA,SAAAztB,GAA0B,IAAA6qB,EAAS,IAAIA,EAAAhH,GAAA8J,UAAA3tB,GAAwB6sB,GAAAC,YAAqBjC,EAAAt1C,KAAAs1C,EAAAt1C,MAAA,IAAAs1C,EAAAt1C,OAAA,GAAwC,MAAA6yB,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,OAA6C,OAAA/C,EAAAt1C,MAAiBs4C,SAAA,SAAArL,GAAwC,IAAb,IAAA7C,EAAA,GAAa6C,EAAA/V,SAAA+V,GAA0B7C,EAAA7Q,KAAA0T,EAAA7tC,MAAsB6tC,IAAA/V,OAAkE,OAAjDkT,EAAA7Q,KAAA0T,EAAAgC,MAAAkJ,KAAAtN,MAAiCT,EAAAiN,UAAgBrN,GAAA3d,KAAA6E,MAAA,KAAAkZ,IAAmCmO,aAAA,SAAA3F,GAAgCA,IAAA,QAAgBA,IAAA,KAAaA,IAAA,MAAcA,IAAA,OAAe,IAAA4F,EAAA,EAAe,QAAA/4B,KAAA63B,GAAAI,gBAAqC9E,EAAAnzB,IAAY+4B,GAAAlB,GAAAI,gBAAAj4B,GAAoCmzB,GAAAnzB,GAAU,GAAAmzB,EAAgC,UAAArH,GAAA4B,WAAAtS,GAAAuB,QAArB,OAAAoc,GAAkElJ,SAAA,CAAYD,QAAA,SAAApC,GAAwB,IAA+BqI,EAA/B7qB,EAAA6sB,GAAAgB,SAAArL,GAAwC,IAAIqI,EAAAhH,GAAA8J,UAAA3tB,GAAwB,MAAAoI,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,OAA4L,OAA/If,GAAAC,YAAAjC,EAAAzD,UAAoCyD,EAAAzD,QAAA,MAAkByF,GAAAC,YAAAjC,EAAAxD,SAAmCwD,EAAAxD,QAAAwD,EAAA5nB,KAAA4nB,EAAAzD,QAAA,GAAAyD,EAAAzD,QAAA,GAAsD,CAAOnF,IAAA4I,EAAA5I,IAAA4E,IAAAgE,EAAAhE,IAAAtxC,KAAAs1C,EAAAt1C,KAAAuxC,MAAA+D,EAAA/D,MAAAC,IAAA8D,EAAA9D,IAAAC,IAAA6D,EAAA7D,IAAAvE,KAAAoI,EAAApI,KAAAxf,KAAA4nB,EAAA5nB,KAAAgkB,MAAA4D,EAAA5D,MAAAC,MAAA2D,EAAA3D,MAAAC,MAAA0D,EAAA1D,MAAAC,QAAAyD,EAAAzD,QAAAC,OAAAwD,EAAAxD,SAA8MvC,QAAA,SAAAtC,EAAAoE,GAA+B,IAAA5mB,EAAA6sB,GAAAgB,SAAArL,GAA+B,IAA+E,QAA3E1f,IAAA8jB,EAAArxC,OAA0BsuC,GAAAmK,UAAAhuB,EAAA4mB,EAAArxC,MAA6BitC,EAAAjtC,KAAAqxC,EAAArxC,WAAoButB,IAAA8jB,EAAA3D,UAAA,CAA+B,IAAAgL,EAAA,IAAA/K,KAAA0D,EAAA3D,WAAkCY,GAAAqK,WAAAluB,EAAAiuB,UAA8BnrB,IAAA8jB,EAAA3jB,MAA0B4gB,GAAAsK,aAAAnuB,EAAA4mB,EAAA3jB,MAAiC,MAAAmF,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8C7I,OAAA,SAAAtY,EAAA93B,GAAgC,IAAAqrB,EAAAuf,GAAAoB,MAAAkM,GAAAgB,SAAAphB,GAAA93B,GAAkDY,EAAAs3C,GAAAY,QAAAztB,GAA8B,OAAA6sB,GAAApI,WAAAhY,EAAA93B,EAAAY,IAA2CyvC,MAAA,SAAAvY,EAAA93B,EAAAY,EAAA0sC,GAAwC,IAAAO,EAAAqK,GAAApI,WAAAhY,EAAA93B,EAAAY,EAAA0sC,GAAiDjiB,EAAA6sB,GAAAgB,SAAArL,GAA+B,IAAI1B,GAAAgF,MAAAtD,EAAAjtC,MAAwBsuC,GAAAuK,UAAApuB,EAAAwiB,EAAAjtC,MAAkCsuC,GAAAwK,cAAAruB,EAAA,IAA0BzqB,KAAAitC,EAAAjtC,OAAkB,MAAA6yB,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,OAA6C,OAAApL,GAAYyC,OAAA,SAAAqJ,EAAAC,EAAAC,GAA2C,IAAAC,EAAA5B,GAAAgB,SAAAS,GAAqCI,EAAAnP,GAAAoB,MAAAkM,GAAAgB,SAAAU,GAAAC,GAAwD,IAAI3K,GAAA8K,WAAAF,EAAAC,GAA+B,MAAAtmB,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8C1I,OAAA,SAAAzY,EAAA93B,GAAgC,IAAAqrB,EAAAuf,GAAAoB,MAAAkM,GAAAgB,SAAAphB,GAAA93B,GAAkD,IAAIkvC,GAAA+K,WAAA5uB,GAAoB,MAAAoI,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8CzI,MAAA,SAAA1Y,EAAA93B,GAA+B,IAAAqrB,EAAAuf,GAAAoB,MAAAkM,GAAAgB,SAAAphB,GAAA93B,GAAkD,IAAIkvC,GAAAgL,UAAA7uB,GAAmB,MAAAoI,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8CxI,QAAA,SAAA5C,GAA0B,IAAAxiB,EAAA6sB,GAAAgB,SAAArL,GAA+B,IAAI,OAAAqB,GAAAiL,YAAA9uB,GAA4B,MAAAoI,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8CvI,QAAA,SAAA5Y,EAAA+hB,EAAAC,GAA4C,IAAAC,EAAAnP,GAAAoB,MAAAkM,GAAAgB,SAAAphB,GAAA+hB,GAAwD,IAAI3K,GAAAkL,YAAAN,EAAAC,GAAgC,MAAAtmB,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8CjI,SAAA,SAAAnD,GAA2B,IAAAxiB,EAAA6sB,GAAAgB,SAAArL,GAA+B,IAAyG,OAArGxiB,EAAA6jB,GAAAmL,aAAAhvB,GAA2BA,EAAAivB,GAAAhO,SAAAgO,GAAAthB,QAAA6U,EAAAgC,MAAAkJ,KAAAtN,MAAApgB,GAAsF,MAAAoI,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,UAAgDvL,WAAA,CAAargB,KAAA,SAAAsgB,GAAuB,IAAAtiB,EAAA6sB,GAAAgB,SAAAvL,EAAAE,MAAsC,IAAI1B,GAAAkF,OAAA1D,EAAAE,KAAAjtC,QAAgC+sC,EAAA4M,IAAArL,GAAAC,SAAA9jB,EAAA6sB,GAAAiB,aAAAxL,EAAA6F,SAAgE,MAAA/f,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8ChL,MAAA,SAAAN,GAA0B,IAAIxB,GAAAkF,OAAA1D,EAAAE,KAAAjtC,OAAA+sC,EAAA4M,KAA4CrL,GAAAG,UAAA1B,EAAA4M,KAA0B,MAAA9mB,GAAS,IAAAA,EAAAwlB,KAAA,MAAAxlB,EAAmB,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8C9sB,KAAA,SAAAwhB,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,GAAuD,OAAA93B,EAAA,SAAuB,IAAI,OAAA4zB,GAAAE,SAAAzB,EAAA4M,IAAArC,GAAAS,WAAAhtB,UAAAzQ,EAAAI,EAAA83B,GAAuF,MAAA3f,GAAS,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8CxK,MAAA,SAAAd,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,GAAwD,IAAI,OAAAlE,GAAAsL,UAAA7M,EAAA4M,IAAArC,GAAAS,WAAAhtB,UAAAzQ,EAAAI,EAAA83B,GAAwF,MAAA3f,GAAS,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,SAA8CtI,OAAA,SAAAhD,EAAAzyB,EAAAo4B,GAAyC,IAAAF,EAAAl4B,EAAoB,OAAAo4B,EAAeF,GAAAzF,EAAAyF,cAA0B,OAAAE,GAAoBnH,GAAAkF,OAAA1D,EAAAE,KAAAjtC,MAAgC,IAAsCwyC,GAAlClE,GAAAuL,UAAA9M,EAAA4M,KAAkCjsB,KAAoB,MAAAmF,GAAS,UAAA0Y,GAAA4B,WAAAtS,GAAAhI,EAAAwlB,OAA+C,GAAA7F,EAAA,EAAe,UAAAjH,GAAA4B,WAAAtS,GAAAuB,QAA4C,OAAAoW,KAAoBsH,GAAA,CAAcC,SAAA,MAAAC,UAAA,MAAAC,OAAA,KAAAhL,MAAA,SAAAA,GAAkEhkB,EAAAjB,GAA8B8vB,GAAAG,SAAAH,GAAAG,OAAA,IAAAC,gBAAuD,IAAArP,EAAAiP,GAAA5K,WAAA,SAAA4K,GAAAC,SAAA,GAA2DI,EAAA,GAAsB,SAAAC,EAAA3vB,GAAsE,IAA1C,IAAA2f,EAAA3f,EAAA2B,MAAA,KAA0B8K,EAAA2T,EAAgBhsC,EAAA,EAAYA,EAAAurC,EAAA1vB,OAAA,EAAiB7b,IAAA,CAAK,IAAAgyB,EAAAuZ,EAAAjf,MAAA,EAAAtsB,EAAA,GAAAwtB,KAAA,KAAsC8tB,EAAAtpB,KAA0BspB,EAAAtpB,GAAAipB,GAAA5K,WAAAhY,EAAAkT,EAAAvrC,GAAAi7C,GAAAC,SAAA,IAA8E7iB,EAAAijB,EAAAtpB,GAA4B,OAAAqG,EAAc,SAAAmjB,EAAA5vB,GAAoB,IAAA2f,EAAA3f,EAAA2B,MAAA,KAA0B,OAAAge,IAAA1vB,OAAA,GAAmmB,OAAtkB1Z,MAAAP,UAAA2Z,QAAApb,KAAAiwC,EAAAkJ,KAAA,mBAAAnI,GAAqE8J,GAAA5K,WAAAkL,EAAApK,EAAA5wC,MAAAi7C,EAAArK,EAAA5wC,MAAA06C,GAAAE,UAAA,EAAAhK,IAAAsK,qBAAgHrL,EAAAkJ,KAAA,WAAA/9B,QAAA,SAAAmgC,GAAiDT,GAAA5K,WAAAkL,EAAAG,EAAA,MAAAF,EAAAE,EAAA,MAAAT,GAAAE,UAAA,EAAAO,EAAA,SAAqGtL,EAAAkJ,KAAA,cAAA/9B,QAAA,SAAAogC,GAAqDA,EAAA,SAAAC,MAAArgC,QAAA,SAAA41B,GAA+C,IAAA5wC,EAAA4wC,EAAArlB,SAAA4D,OAAA,GAAiCurB,GAAA5K,WAAAkL,EAAAh7C,GAAAi7C,EAAAj7C,GAAA06C,GAAAE,UAAA,EAAAQ,EAAA,KAAArvB,MAAA6kB,EAAAjE,MAAAiE,EAAAjiB,UAAsH8c,GAAYqE,WAAA,SAAAhY,EAAA93B,EAAAY,EAAA0sC,EAAA8D,EAAAmB,GAA4D,IAAA1E,EAAA1B,GAAA2D,WAAAhY,EAAA93B,EAAAY,GAA8W,OAArUitC,EAAAjtC,OAAeitC,EAAAqC,SAAAwK,GAAAxK,SAAgCrC,EAAAH,WAAAgN,GAAAhN,WAAoCG,EAAAS,WAAAiE,GAAA,IAAAhE,MAAA+M,UAA2CzvB,EAAA6uB,GAAAE,YAAAF,GAAAC,UAA+C/5C,IAAA85C,GAAAE,WAA8B/M,EAAAvf,KAAA8iB,EAAA9iB,KAAwBuf,EAAAuD,aAA4BvD,EAAAvf,KAAA,KAAeuf,EAAAuD,SAAA,IAAiBtZ,IAAWA,EAAAsZ,SAAApxC,GAAA6tC,GAA2BA,GAAYqC,SAAA,CAAYD,QAAA,SAAApC,GAAwB,OAAOP,IAAA,EAAA4E,SAAA/jB,EAAAvtB,KAAAitC,EAAAjtC,KAAAuxC,MAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAvE,UAAA3f,EAAAG,KAAAuf,EAAAvf,KAAAgkB,MAAA,IAAA/D,KAAAV,EAAAS,WAAAiE,MAAA,IAAAhE,KAAAV,EAAAS,WAAAkE,MAAA,IAAAjE,KAAAV,EAAAS,WAAAmE,QAAA,KAAAC,OAAA5wC,KAAAwV,KAAAu2B,EAAAvf,KAAA,QAAiO6hB,QAAA,SAAAtC,EAAAoE,QAA+B9jB,IAAA8jB,EAAArxC,OAA0BitC,EAAAjtC,KAAAqxC,EAAArxC,WAAoButB,IAAA8jB,EAAA3D,YAA+BT,EAAAS,UAAA2D,EAAA3D,YAA+B8B,OAAA,SAAAtY,EAAA93B,GAAgC,UAAAmsC,GAAA4B,WAAAtS,GAAAE,SAA4C0U,MAAA,SAAAvY,EAAA93B,EAAAY,EAAA0sC,GAAwC,UAAAnB,GAAA4B,WAAAtS,GAAAC,QAA2C4U,OAAA,SAAAqJ,EAAAC,EAAAC,GAA2C,UAAA1N,GAAA4B,WAAAtS,GAAAC,QAA2C6U,OAAA,SAAAzY,EAAA93B,GAAgC,UAAAmsC,GAAA4B,WAAAtS,GAAAC,QAA2C8U,MAAA,SAAA1Y,EAAA93B,GAA+B,UAAAmsC,GAAA4B,WAAAtS,GAAAC,QAA2C+U,QAAA,SAAA5C,GAA0B,IAAAoF,EAAA,WAAuB,QAAAjyC,KAAA6sC,EAAAuD,SAA8BvD,EAAAuD,SAAA9vC,eAAAN,IAAgDiyC,EAAA9Y,KAAAn5B,GAAkB,OAAAiyC,GAAevC,QAAA,SAAA5Y,EAAA+hB,EAAAC,GAA4C,UAAA3N,GAAA4B,WAAAtS,GAAAC,QAA2CsV,SAAA,SAAAnD,GAA2B,UAAA1B,GAAA4B,WAAAtS,GAAAC,SAA6CgS,WAAA,CAAavhB,KAAA,SAAAwhB,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,GAAqD,GAAAA,GAAAzF,EAAAE,KAAAvf,KAAA,SAAuC,IAAAitB,EAAA5N,EAAAE,KAAAuD,SAAArlB,MAAAqnB,IAAA93B,GAA+D/U,EAAAm0C,GAAAG,OAAAW,kBAAAD,GAAsF,OAAtC5vB,EAAAxoB,IAAA,IAAAyoB,WAAArlB,GAAA2U,GAAsCqgC,EAAAjtB,MAAkBmgB,MAAA,SAAAd,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,GAAwD,UAAAjH,GAAA4B,WAAAtS,GAAAK,MAAyC6U,OAAA,SAAAhD,EAAAzyB,EAAAo4B,GAAyC,IAAAF,EAAAl4B,EAA6I,GAAzH,IAAAo4B,EAAeF,GAAAzF,EAAAyF,SAA0B,IAAAE,GAAoBnH,GAAAkF,OAAA1D,EAAAE,KAAAjtC,QAAgCwyC,GAAAzF,EAAAE,KAAAvf,MAA4B8kB,EAAA,EAAe,UAAAjH,GAAA4B,WAAAtS,GAAAuB,QAA4C,OAAAoW,KAAoB7kB,GAAA,GAAcA,GAAA,GAAcA,GAAA,GAAc,IAAA4d,GAAA,CAAQV,KAAA,KAAAgQ,OAAA,GAAAC,QAAA,GAA8BC,QAAA,GAAAC,UAAA,EAAAC,UAAA,KAAAC,YAAA,IAAAC,aAAA,EAAAC,mBAAA,EAAAC,iBAAA,GAAmHC,SAAA,CAAWC,UAAA,CAAWC,KAAA,EAAAC,MAAA,IAAgBtO,WAAA,KAAA4E,cAAA,GAAiC2J,YAAA,KAAAC,eAAA,EAAAC,cAAA,SAAA/oB,GAA8D,KAAAA,aAAA0Y,GAAA4B,YAAA,MAAAta,EAAA,MAAAJ,IAA4D,OAAAsX,GAAAlX,EAAAgpB,QAA4B9F,WAAA,SAAAtrB,EAAA0tB,GAAiF,GAAdA,KAAA,KAAjC1tB,EAAAuf,GAAA5R,QAAAmT,GAAAC,MAAA/gB,IAA+C,OAAgBA,KAAA,GAAAwiB,KAAA,MAAmB,IAAA6O,EAAA,CAAcC,cAAA,EAAAC,cAAA,GAAmC,QAAA57C,KAAA07C,OAAyBvuB,IAAA4qB,EAAA/3C,KAA0B+3C,EAAA/3C,GAAA07C,EAAA17C,IAAyB,GAAA+3C,EAAA6D,cAAA,EAAyB,UAAAzQ,GAAA4B,WAAAtS,GAAAkF,OAA0K,IAA/H,IAAAqK,EAAAJ,GAAAG,eAAA1f,EAAA2B,MAAA,KAAAse,OAAA,SAAA/pC,GAAkE,QAAAA,KAAU,GAAUs7C,EAAA1Q,GAAAV,KAAoBqR,EAAA,IAAqBr9C,EAAA,EAAYA,EAAAurC,EAAA1vB,OAAe7b,IAAA,CAAK,IAAAs9C,EAAAt9C,IAAAurC,EAAA1vB,OAAA,EAA8B,GAAAyhC,GAAAhE,EAAAjhB,OAAwB,MAA+L,GAAzL+kB,EAAA1Q,GAAA6G,WAAA6J,EAAA7R,EAAAvrC,IAAwCq9C,EAAAlS,GAAAoB,MAAA8Q,EAAA9R,EAAAvrC,IAA+C0sC,GAAA6Q,aAAAH,MAA6BE,MAAAhE,EAAA4D,gBAAuCE,IAAAI,QAAAxR,OAA8BsR,GAAAhE,EAAAmE,OAAqC,IAAZ,IAAA/hC,EAAA,EAAYgxB,GAAAoF,OAAAsL,EAAAj8C,OAAA,CAA+B,IAAAmwC,EAAA5E,GAAA6E,SAAA8L,GAA4L,GAAzJA,EAAAlS,GAAA5R,QAAA4R,GAAAW,QAAAuR,GAAA/L,GAAqI8L,EAA1E1Q,GAAAwK,WAAAmG,EAAA,CAAuCF,cAAA7D,EAAA6D,gBAAmC/O,KAAoB1yB,IAAA,GAAe,UAAAgxB,GAAA4B,WAAAtS,GAAAkF,QAA8C,OAAOtV,KAAAyxB,EAAAjP,KAAAgP,IAAgCM,QAAA,SAAAtP,GAAmC,IAAT,IAAAxiB,IAAS,CAAY,GAAA8gB,GAAAiR,OAAAvP,GAAA,CAAoB,IAAAgC,EAAAhC,EAAAgC,MAAAmG,WAAgC,OAAA3qB,EAAsB,MAAAwkB,IAAAv0B,OAAA,GAAAu0B,EAAA,IAAAxkB,EAAAwkB,EAAAxkB,EAAtBwkB,EAAmFxkB,IAAAwiB,EAAA7tC,KAAA,IAAAqrB,EAAAwiB,EAAA7tC,KAAuC6tC,IAAA/V,SAAkBulB,SAAA,SAAAC,EAAAt9C,GAA+C,IAAX,IAAAu9C,EAAA,EAAW99C,EAAA,EAAYA,EAAAO,EAAAsb,OAAc7b,IAAK89C,MAAA,GAAAA,EAAAv9C,EAAAizB,WAAAxzB,GAAA,EAAyC,OAAA69C,EAAAC,IAAA,GAAApR,GAAA0P,UAAAvgC,QAA8CkiC,YAAA,SAAA3P,GAA8B,IAAA0P,EAAApR,GAAAkR,SAAAxP,EAAA/V,OAAAd,GAAA6W,EAAA7tC,MAA+C6tC,EAAA4P,UAAAtR,GAAA0P,UAAA0B,GAAkCpR,GAAA0P,UAAA0B,GAAA1P,GAAwB6P,eAAA,SAAA7P,GAAiC,IAAA0P,EAAApR,GAAAkR,SAAAxP,EAAA/V,OAAAd,GAAA6W,EAAA7tC,MAA+C,GAAAmsC,GAAA0P,UAAA0B,KAAA1P,EAA8B1B,GAAA0P,UAAA0B,GAAA1P,EAAA4P,eAAsE,IAA/B,IAAAZ,EAAA1Q,GAAA0P,UAAA0B,GAA+BV,GAAA,CAAe,GAAAA,EAAAY,YAAA5P,EAAA,CAA6BgP,EAAAY,UAAA5P,EAAA4P,UAAiC,MAAMZ,IAAAY,YAA4BzK,WAAA,SAAAlb,EAAA93B,GAAoC,IAAAguB,EAAAme,GAAAwR,UAAA7lB,GAA6B,GAAA9J,EAAQ,UAAAme,GAAA4B,WAAA/f,EAAA8J,GAAyE,IAArC,IAAAylB,EAAApR,GAAAkR,SAAAvlB,EAAAd,GAAAh3B,GAAqC6tC,EAAA1B,GAAA0P,UAAA0B,GAAgC1P,EAAKA,IAAA4P,UAAA,CAAqB,IAAAG,EAAA/P,EAAA7tC,KAAuB,GAAA6tC,EAAA/V,OAAAd,KAAAc,EAAAd,IAAA4mB,IAAA59C,EAAgD,OAAA6tC,EAAa,OAAA1B,GAAAiE,OAAAtY,EAAA93B,IAA8B8vC,WAAA,SAAAhY,EAAA93B,EAAAY,EAAAktC,GAA8C,IAAA3B,GAAA0R,OAAA,CAAe1R,GAAA0R,OAAA,SAAA/lB,EAAA93B,EAAAY,EAAAktC,GAA2ChW,IAAYA,EAAA4d,MAAYA,KAAA5d,SAAmB4d,KAAA7F,MAAA/X,EAAA+X,MAAwB6F,KAAAuH,QAAA,KAAkBvH,KAAA1e,GAAAmV,GAAAyP,YAAuBlG,KAAA11C,OAAe01C,KAAA90C,OAAe80C,KAAAxF,SAAA,GAAiBwF,KAAAhI,WAAA,GAAmBgI,KAAA5H,QAAiB3B,GAAA0R,OAAAx8C,UAAA,GAA6DlB,OAAA29C,iBAAA3R,GAAA0R,OAAAx8C,UAAA,CAA6C8qB,KAAA,CAAM7rB,IAAA,WAAgB,OAAzG,UAAyGo1C,KAAA90C,OAAsCuC,IAAA,SAAAssC,GAAqBA,EAAAiG,KAAA90C,MAApK,IAAoK80C,KAAA90C,OAAA,MAA+C6tC,MAAA,CAAQnuC,IAAA,WAAgB,OAAvN,UAAuNo1C,KAAA90C,OAAwCuC,IAAA,SAAAssC,GAAqBA,EAAAiG,KAAA90C,MAApR,IAAoR80C,KAAA90C,OAAA,MAAiDm9C,SAAA,CAAWz9C,IAAA,WAAgB,OAAA6rC,GAAAgF,MAAAuE,KAAA90C,QAA6Bo9C,SAAA,CAAW19C,IAAA,WAAgB,OAAA6rC,GAAAqF,SAAAkE,KAAA90C,UAAmC,IAAAitC,EAAA,IAAA1B,GAAA0R,OAAA/lB,EAAA93B,EAAAY,EAAAktC,GAAmE,OAArB3B,GAAAqR,YAAA3P,GAAqBA,GAAYoQ,YAAA,SAAApQ,GAA8B1B,GAAAuR,eAAA7P,IAAwBuP,OAAA,SAAAvP,GAAyB,OAAAA,MAAA/V,QAA0BklB,aAAA,SAAAnP,GAA+B,QAAAA,EAAAoP,SAAqB5L,OAAA,SAAAzwC,GAAyB,qBAAAA,IAA2BuwC,MAAA,SAAAvwC,GAAwB,qBAAAA,IAA2B2wC,OAAA,SAAA3wC,GAAyB,qBAAAA,IAA2B4wC,SAAA,SAAA5wC,GAA2B,oBAAAA,IAA0BmvC,SAAA,SAAAnvC,GAA2B,qBAAAA,IAA2BovC,OAAA,SAAApvC,GAAyB,oBAAAA,IAA0Bs9C,SAAA,SAAAt9C,GAA2B,qBAAAA,IAA2Bu9C,UAAA,CAAa59C,EAAA,EAAA69C,GAAA,QAAAC,KAAA,EAAApzC,EAAA,IAAAU,GAAA,IAAA2yC,GAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAp8C,EAAA,KAAAqO,GAAA,KAAAguC,GAAA,KAAAC,KAAA,KAAAC,MAAA,KAAAC,MAAA,MAA8IC,kBAAA,SAAAl6C,GAAkC,IAAA4uC,EAAArH,GAAAgS,UAAAv5C,GAA4B,YAAA4uC,EAA+B,UAAAjgB,MAAA,2BAAA3uB,GAAgD,OAAA4uC,GAAauL,wBAAA,SAAAC,GAA0C,IAAAC,EAAA,iBAAAD,GAAyD,OAAxB,IAAAA,IAAaC,GAAA,KAAWA,GAAaC,gBAAA,SAAArR,EAAAoR,GAAwC,OAAA9S,GAAA6P,kBAAyB,IAAS,IAAAiD,EAAAlyB,QAAA,UAAA8gB,EAAAjtC,SAAwE,IAAAq+C,EAAAlyB,QAAA,UAAA8gB,EAAAjtC,SAA6E,IAAAq+C,EAAAlyB,QAAA,SAAA8gB,EAAAjtC,MAA4E,EAAnL66B,GAAAc,QAA4LohB,UAAA,SAAAjS,GAA2B,IAAA1d,EAAAme,GAAA+S,gBAAAxT,EAAA,KAAoC,OAAA1d,IAAkB0d,EAAAwE,SAAAE,OAAkD,EAAlD3U,GAAAc,SAA2D4iB,UAAA,SAAAzT,EAAA1rC,GAAgC,IAAImsC,GAAA6G,WAAAtH,EAAA1rC,GAAiC,OAAAy7B,GAAAkB,OAA0B,MAAAlJ,IAAU,OAAA0Y,GAAA+S,gBAAAxT,EAAA,OAAoC0T,UAAA,SAAA1T,EAAA1rC,EAAAq/C,GAAsC,IAAAxR,EAAS,IAAIA,EAAA1B,GAAA6G,WAAAtH,EAAA1rC,GAA6B,MAAAyzB,GAAS,OAAAA,EAAAgpB,MAAe,IAAAzuB,EAAAme,GAAA+S,gBAAAxT,EAAA,MAAqC,GAAA1d,EAAQ,OAAAA,EAAW,GAAAqxB,EAAA,CAAU,IAAAlT,GAAAgF,MAAAtD,EAAAjtC,MAAyB,OAAA66B,GAAAqB,QAA2B,GAAAqP,GAAAiR,OAAAvP,IAAA1B,GAAAgR,QAAAtP,KAAA1B,GAAAC,MAAiD,OAAA3Q,GAAAiB,WAA+B,GAAAyP,GAAAgF,MAAAtD,EAAAjtC,MAAwB,OAAA66B,GAAAsB,OAA2B,UAASuiB,QAAA,SAAAzR,EAAA2F,GAAgC,OAAA3F,EAAoC1B,GAAAoF,OAAA1D,EAAAjtC,MAAyB66B,GAAAkF,MAAyBwL,GAAAgF,MAAAtD,EAAAjtC,QAA6B,MAAAurC,GAAA4S,wBAAAvL,IAAA,IAAAA,GAAuD/X,GAAAsB,OAA2BoP,GAAA+S,gBAAArR,EAAA1B,GAAA4S,wBAAAvL,IAA3L/X,GAAAE,QAA6P4jB,aAAA,KAAAC,OAAA,SAAAC,EAAAC,GAAsDD,KAAA,EAAqBC,KAAAvT,GAAAoT,aAA+B,QAAAxQ,EAAA0Q,EAAoB1Q,GAAA2Q,EAAW3Q,IAAM,IAAA5C,GAAAwP,QAAA5M,GAAoB,OAAAA,EAAW,UAAA5C,GAAA4B,WAAAtS,GAAAyB,SAA4CyiB,UAAA,SAAA5Q,GAA0B,OAAA5C,GAAAwP,QAAA5M,IAAsB6Q,aAAA,SAAAjS,EAAA8R,EAAAC,GAAiDvT,GAAA0T,WAAiB1T,GAAA0T,SAAA,aAA2B1T,GAAA0T,SAAAx+C,UAAA,GAAyBlB,OAAA29C,iBAAA3R,GAAA0T,SAAAx+C,UAAA,CAA+CF,OAAA,CAAQb,IAAA,WAAgB,OAAAo1C,KAAA7H,MAAiB1qC,IAAA,SAAAssC,GAAqBiG,KAAA7H,KAAA4B,IAAgBqQ,OAAA,CAASx/C,IAAA,WAAgB,mBAAAo1C,KAAAlC,SAAiCuM,QAAA,CAAUz/C,IAAA,WAAgB,mBAAAo1C,KAAAlC,SAAiCwM,SAAA,CAAW1/C,IAAA,WAAgB,YAAAo1C,KAAAlC,WAA4B,IAAAyM,EAAA,IAAA9T,GAAA0T,SAA8B,QAAAt+C,KAAAosC,EAAqBsS,EAAA1+C,GAAAosC,EAAApsC,GAAuBosC,EAAAsS,EAAiB,IAAAlR,EAAA5C,GAAAqT,OAAAC,EAAAC,GAAqE,OAAnC/R,EAAAoB,KAAa5C,GAAAwP,QAAA5M,GAAApB,EAAsBA,GAAcuS,YAAA,SAAAnR,GAA4B5C,GAAAwP,QAAA5M,GAAA,MAAoBmC,kBAAA,CAAqB7jB,KAAA,SAAAsgB,GAAuB,IAAAwS,EAAAhU,GAAAiU,UAAAzS,EAAAE,KAAAC,MAA0CH,EAAAD,WAAAyS,EAAAzS,WAAoCC,EAAAD,WAAArgB,MAA2BsgB,EAAAD,WAAArgB,KAAAsgB,IAAgCgD,OAAA,WAAqB,UAAAxE,GAAA4B,WAAAtS,GAAA8B,UAA8C8iB,MAAA,SAAA/S,GAAsB,OAAAA,GAAA,GAAcgT,MAAA,SAAAhT,GAAuB,WAAAA,GAAeiT,QAAA,SAAAC,EAAAC,GAA2B,OAAAD,GAAA,EAAAC,GAAgBhT,eAAA,SAAAH,EAAAC,GAAoCpB,GAAAuP,QAAApO,GAAA,CAAiBI,WAAAH,IAAgB6S,UAAA,SAAA9S,GAA2B,OAAAnB,GAAAuP,QAAApO,IAAuBoT,UAAA,SAAA7Q,GAA6D,IAAhC,IAAA4L,EAAA,GAAc1F,EAAA,CAAAlG,GAAkBkG,EAAAz6B,QAAA,CAAoB,IAAAzb,EAAAk2C,EAAAI,MAAkBsF,EAAAthB,KAAAt6B,GAAek2C,EAAA5b,KAAArI,MAAAikB,EAAAl2C,EAAA47C,QAAiC,OAAAA,GAAcrH,OAAA,SAAAC,EAAAve,GAAsC,mBAAAue,IAAiCve,EAAAue,EAAkBA,GAAA,GAAelI,GAAAoQ,iBAAoBpQ,GAAAoQ,eAAA,GAAwB1uB,QAAAC,IAAA,YAAAqe,GAAAoQ,eAAA,2EAAqH,IAAAd,EAAAtP,GAAAuU,UAAAvU,GAAAV,KAAAoE,OAAuCgI,EAAA,EAAgB,SAAA8I,EAAA3yB,GAAyE,OAAhDnC,EAAAsgB,GAAAoQ,eAAA,GAA4BpQ,GAAAoQ,iBAAoBzmB,EAAA9H,GAAqB,SAAA8pB,EAAA9pB,GAAmB,GAAAA,EAAQ,OAAA8pB,EAAAC,aAA2D,GAAzCD,EAAAC,SAAA,EAAkB4I,EAAA3yB,MAA8B6pB,GAAA4D,EAAAngC,QAA+BqlC,EAAA,MAAkBlF,EAAAzgC,QAAA,SAAA60B,GAAgC,IAAAA,EAAA5tC,KAAAmyC,OAAuB,OAAA0D,EAAA,MAAkBjI,EAAA5tC,KAAAmyC,OAAAvE,EAAAwE,EAAAyD,MAA0CjI,MAAA,SAAA5tC,EAAA82C,EAAA/C,GAAwC,IAAiDnI,EAAjDpC,EAAA,MAAAuK,EAA0B4K,GAAA5K,EAAgC,GAAAvK,GAAAU,GAAAV,KAAkB,UAAAU,GAAA4B,WAAAtS,GAAAiB,OAA2C,IAAA+O,IAAAmV,EAAA,CAAwB,IAAAxQ,EAAAjE,GAAAwK,WAAAX,EAAA,CAAqC2G,cAAA,IAA6D,GAAxC3G,EAAA5F,EAAA/kB,KAAuBwiB,EAAAuC,EAAAvC,KAAiB1B,GAAA6Q,aAAAnP,GAA0B,UAAA1B,GAAA4B,WAAAtS,GAAAiB,OAA2C,IAAAyP,GAAAgF,MAAAtD,EAAAjtC,MAAyB,UAAAurC,GAAA4B,WAAAtS,GAAAqB,SAA8C,IAAA+S,EAAA,CAAW5tC,OAAA82C,OAAA/C,aAAAyF,OAAA,IAAqDoF,EAAA5+C,EAAA4tC,SAAqL,OAArJgR,EAAAhR,QAAsBA,EAAApE,KAAAoV,EAAqBpV,EAASU,GAAAV,KAAAoV,EAAkBhT,IAAcA,EAAAoP,QAAApN,EAAmBhC,EAAAgC,OAAehC,EAAAgC,MAAA4L,OAAAthB,KAAA0V,IAA+BgR,GAAiBC,QAAA,SAAA9K,GAAgC,IAAA5F,EAAAjE,GAAAwK,WAAAX,EAAA,CAAqC2G,cAAA,IAAqB,IAAAxQ,GAAA6Q,aAAA5M,EAAAvC,MAAkC,UAAA1B,GAAA4B,WAAAtS,GAAAuB,QAA4C,IAAA6Q,EAAAuC,EAAAvC,KAAqBgC,EAAAhC,EAAAoP,QAAuBxB,EAAAtP,GAAAuU,UAAA7Q,GAA+B1vC,OAAAu3C,KAAAvL,GAAA0P,WAAA7gC,QAAA,SAAAuiC,GAAiF,IAA/B,IAAAV,EAAA1Q,GAAA0P,UAAA0B,GAA+BV,GAAA,CAAe,IAAAkE,EAAAlE,EAAAY,WAA2B,IAAAhC,EAAA1uB,QAAA8vB,EAAAhN,QAAuC1D,GAAA8R,YAAApB,GAAwBA,EAAAkE,KAAiBlT,EAAAoP,QAAA,KAAkB,IAAA7qB,EAAAyb,EAAAgC,MAAA4L,OAAA1uB,QAAA8iB,GAAyChkB,GAAA,IAAAuG,GAAiByb,EAAAgC,MAAA4L,OAAAvQ,OAAA9Y,EAAA,IAAgCge,OAAA,SAAAtY,EAAA93B,GAAgC,OAAA83B,EAAAoY,SAAAE,OAAAtY,EAAA93B,IAA2CqwC,MAAA,SAAAhlB,EAAAzqB,EAAA0sC,GAAiC,IAA6CxV,EAA7CqU,GAAAwK,WAAAtrB,EAAA,CAA+ByM,QAAA,IAAc+V,KAAuB7tC,EAAA4qC,GAAAe,SAAAtgB,GAA6B,IAAArrB,GAAA,MAAAA,GAAA,OAAAA,EAAmC,UAAAmsC,GAAA4B,WAAAtS,GAAAuB,QAA4C,IAAAhP,EAAAme,GAAAgT,UAAArnB,EAAA93B,GAAkC,GAAAguB,EAAQ,UAAAme,GAAA4B,WAAA/f,GAA6B,IAAA8J,EAAAoY,SAAAG,MAA2B,UAAAlE,GAAA4B,WAAAtS,GAAAC,OAA2C,OAAA5D,EAAAoY,SAAAG,MAAAvY,EAAA93B,EAAAY,EAAA0sC,IAAmDvsC,OAAA,SAAAsqB,EAAAzqB,GAAoF,OAAtDA,OAAAutB,IAAAvtB,IAAA,IAA+BA,GAAA,KAAWA,GAAA,MAAYurC,GAAAkE,MAAAhlB,EAAAzqB,EAAA,IAA6Bk2C,MAAA,SAAAzrB,EAAAzqB,GAAsF,OAAzDA,OAAAutB,IAAAvtB,IAAA,IAA+BA,GAAA,KAAcA,GAAA,MAAYurC,GAAAkE,MAAAhlB,EAAAzqB,EAAA,IAA6BogD,UAAA,SAAA31B,EAAAzqB,GAAmE,IAAlC,IAAAqgD,EAAA51B,EAAA2B,MAAA,KAAyBjtB,EAAA,GAASN,EAAA,EAAYA,EAAAwhD,EAAA3lC,SAAc7b,EAAK,GAAAwhD,EAAAxhD,GAAA,CAAqBM,GAAA,IAAAkhD,EAAAxhD,GAAe,IAAI0sC,GAAA2K,MAAA/2C,EAAAa,GAAiB,MAAA6yB,GAAS,GAAAA,EAAAgpB,OAAAhhB,GAAAkB,OAAA,MAAAlJ,KAAyCytB,MAAA,SAAA71B,EAAAzqB,EAAA0sC,GAA2F,YAA1D,IAAAA,IAA6BA,EAAA1sC,EAASA,EAAA,KAASA,GAAA,KAAWurC,GAAAkE,MAAAhlB,EAAAzqB,EAAA0sC,IAA+BoD,QAAA,SAAAyC,EAAAgO,GAAqC,IAAAvW,GAAA5R,QAAAma,GAA2B,UAAAhH,GAAA4B,WAAAtS,GAAAE,QAA4C,IAAgD7D,EAAhDqU,GAAAwK,WAAAwK,EAAA,CAAkCrpB,QAAA,IAAc+V,KAAuB,IAAA/V,EAAY,UAAAqU,GAAA4B,WAAAtS,GAAAE,QAA4C,IAAAuX,EAAAtI,GAAAe,SAAAwV,GAAmCnzB,EAAAme,GAAAgT,UAAArnB,EAAAob,GAAqC,GAAAllB,EAAQ,UAAAme,GAAA4B,WAAA/f,GAA6B,IAAA8J,EAAAoY,SAAAQ,QAA6B,UAAAvE,GAAA4B,WAAAtS,GAAAC,OAA2C,OAAA5D,EAAAoY,SAAAQ,QAAA5Y,EAAAob,EAAAC,IAAuD7C,OAAA,SAAA8Q,EAAAC,GAAsC,IAAwJC,EAAAzO,EAAxJ0O,EAAA3W,GAAAW,QAAA6V,GAAuCI,EAAA5W,GAAAW,QAAA8V,GAAuCI,EAAA7W,GAAAe,SAAAyV,GAAqCtO,EAAAlI,GAAAe,SAAA0V,GAAgE,IAAiDC,EAA7CnV,GAAAwK,WAAAyK,EAAA,CAA+BtpB,QAAA,IAAc+V,KAAiEgF,EAA7C1G,GAAAwK,WAAA0K,EAAA,CAA+BvpB,QAAA,IAAc+V,KAAoB,MAAApa,GAAS,UAAA0Y,GAAA4B,WAAAtS,GAAAiB,OAA2C,IAAA4kB,IAAAzO,EAAA,UAAA1G,GAAA4B,WAAAtS,GAAAE,QAAkE,GAAA2lB,EAAAzR,QAAAgD,EAAAhD,MAAkC,UAAA1D,GAAA4B,WAAAtS,GAAAmB,OAA2C,IAAgSmW,EAAhSH,EAAAzG,GAAA6G,WAAAsO,EAAAG,GAA6CnV,EAAA1B,GAAA0B,SAAA8U,EAAAI,GAAiD,SAAAlV,EAAAxc,OAAA,GAA6B,UAAAqc,GAAA4B,WAAAtS,GAAAuB,QAAyF,UAA7CsP,EAAA1B,GAAA0B,SAAA+U,EAAAE,IAA6CzxB,OAAA,GAA6B,UAAAqc,GAAA4B,WAAAtS,GAAAgF,WAA4D,IAAIsS,EAAA5G,GAAA6G,WAAAH,EAAAC,GAAyC,MAAArf,IAAU,GAAAmf,IAAAG,EAAA,CAA+B,IAAAsM,EAAAlT,GAAAgF,MAAAyB,EAAAhyC,MAAkCotB,EAAAme,GAAAiT,UAAAkC,EAAAG,EAAApC,GAA6C,GAAArxB,EAAQ,UAAAme,GAAA4B,WAAA/f,GAA8G,GAAjFA,EAAA+kB,EAAA5G,GAAAiT,UAAAvM,EAAAC,EAAAuM,GAAAlT,GAAAgT,UAAAtM,EAAAC,GAAyF,UAAA3G,GAAA4B,WAAA/f,GAA6B,IAAAszB,EAAApR,SAAAI,OAA6B,UAAAnE,GAAA4B,WAAAtS,GAAAC,OAA2C,GAAAyQ,GAAA6Q,aAAApK,IAAAG,GAAA5G,GAAA6Q,aAAAjK,GAAmE,UAAA5G,GAAA4B,WAAAtS,GAAAiB,OAA2C,GAAAmW,IAAAyO,IAAsBtzB,EAAAme,GAAA+S,gBAAAoC,EAAA,MAA4C,UAAAnV,GAAA4B,WAAA/f,GAA8B,IAAIme,GAAA8P,iBAAA,cAAwC9P,GAAA8P,iBAAA,aAAAmF,EAAAC,GAAwD,MAAA5tB,GAAS5F,QAAAC,IAAA,wCAAAszB,EAAA,OAAAC,EAAA,0BAAA5tB,EAAAiuB,SAAkHvV,GAAAuR,eAAA9K,GAA4B,IAAI0O,EAAApR,SAAAI,OAAAsC,EAAAC,EAAAC,GAAmD,MAAArf,GAAS,MAAAA,EAAQ,QAAQ0Y,GAAAqR,YAAA5K,GAAyB,IAAIzG,GAAA8P,iBAAA,YAAA9P,GAAA8P,iBAAA,WAAAmF,EAAAC,GAA0F,MAAA5tB,GAAS5F,QAAAC,IAAA,sCAAAszB,EAAA,OAAAC,EAAA,0BAAA5tB,EAAAiuB,YAAiHlR,MAAA,SAAAnlB,GAAwB,IAA6CyM,EAA7CqU,GAAAwK,WAAAtrB,EAAA,CAA+ByM,QAAA,IAAc+V,KAAuB7tC,EAAA4qC,GAAAe,SAAAtgB,GAA6BwiB,EAAA1B,GAAA6G,WAAAlb,EAAA93B,GAAoCguB,EAAAme,GAAAiT,UAAAtnB,EAAA93B,GAAA,GAAuC,GAAAguB,EAAQ,UAAAme,GAAA4B,WAAA/f,GAA6B,IAAA8J,EAAAoY,SAAAM,MAA2B,UAAArE,GAAA4B,WAAAtS,GAAAC,OAA2C,GAAAyQ,GAAA6Q,aAAAnP,GAA0B,UAAA1B,GAAA4B,WAAAtS,GAAAiB,OAA2C,IAAIyP,GAAA8P,iBAAA,gBAA0C9P,GAAA8P,iBAAA,eAAA5wB,GAA6C,MAAAoI,GAAS5F,QAAAC,IAAA,0CAAAzC,EAAA,0BAAAoI,EAAAiuB,SAAgG5pB,EAAAoY,SAAAM,MAAA1Y,EAAA93B,GAAmCmsC,GAAA8R,YAAApQ,GAAqB,IAAI1B,GAAA8P,iBAAA,cAAA9P,GAAA8P,iBAAA,aAAA5wB,GAAiF,MAAAoI,GAAS5F,QAAAC,IAAA,wCAAAzC,EAAA,0BAAAoI,EAAAiuB,WAA+FjR,QAAA,SAAAplB,GAA0B,IAA6CwiB,EAA7C1B,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAA,IAAcrP,KAAqB,IAAAA,EAAAqC,SAAAO,QAA2B,UAAAtE,GAAA4B,WAAAtS,GAAAqB,SAA6C,OAAA+Q,EAAAqC,SAAAO,QAAA5C,IAAmC0C,OAAA,SAAAllB,GAAyB,IAA6CyM,EAA7CqU,GAAAwK,WAAAtrB,EAAA,CAA+ByM,QAAA,IAAc+V,KAAuB7tC,EAAA4qC,GAAAe,SAAAtgB,GAA6BwiB,EAAA1B,GAAA6G,WAAAlb,EAAA93B,GAAoCguB,EAAAme,GAAAiT,UAAAtnB,EAAA93B,GAAA,GAAwC,GAAAguB,EAAQ,UAAAme,GAAA4B,WAAA/f,GAA6B,IAAA8J,EAAAoY,SAAAK,OAA4B,UAAApE,GAAA4B,WAAAtS,GAAAC,OAA2C,GAAAyQ,GAAA6Q,aAAAnP,GAA0B,UAAA1B,GAAA4B,WAAAtS,GAAAiB,OAA2C,IAAIyP,GAAA8P,iBAAA,gBAA0C9P,GAAA8P,iBAAA,eAAA5wB,GAA6C,MAAAoI,GAAS5F,QAAAC,IAAA,0CAAAzC,EAAA,0BAAAoI,EAAAiuB,SAAgG5pB,EAAAoY,SAAAK,OAAAzY,EAAA93B,GAAoCmsC,GAAA8R,YAAApQ,GAAqB,IAAI1B,GAAA8P,iBAAA,cAAA9P,GAAA8P,iBAAA,aAAA5wB,GAAiF,MAAAoI,GAAS5F,QAAAC,IAAA,wCAAAzC,EAAA,0BAAAoI,EAAAiuB,WAA+F1Q,SAAA,SAAA3lB,GAA2B,IAA+B0lB,EAA/B5E,GAAAwK,WAAAtrB,GAA+BwiB,KAAqB,IAAAkD,EAAU,UAAA5E,GAAA4B,WAAAtS,GAAAE,QAA4C,IAAAoV,EAAAb,SAAAc,SAA4B,UAAA7E,GAAA4B,WAAAtS,GAAAuB,QAA4C,OAAA4N,GAAA5R,QAAAmT,GAAAgR,QAAApM,EAAAjZ,QAAAiZ,EAAAb,SAAAc,SAAAD,KAA0EmF,KAAA,SAAA7qB,EAAAs2B,GAAkC,IAAoD9T,EAApD1B,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAAyE,IAAqB9T,KAAqB,IAAAA,EAAU,UAAA1B,GAAA4B,WAAAtS,GAAAE,QAA4C,IAAAkS,EAAAqC,SAAAD,QAA2B,UAAA9D,GAAA4B,WAAAtS,GAAAC,OAA2C,OAAAmS,EAAAqC,SAAAD,QAAApC,IAAmC+T,MAAA,SAAAv2B,GAAwB,OAAA8gB,GAAA+J,KAAA7qB,GAAA,IAA0B2rB,MAAA,SAAA3rB,EAAAzqB,EAAA+gD,GAAwC,IAAA9T,EAAS,iBAAAxiB,EAA+EwiB,EAApD1B,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAAyE,IAAqB9T,KAAsBA,EAAAxiB,EAAU,IAAAwiB,EAAAqC,SAAAC,QAA2B,UAAAhE,GAAA4B,WAAAtS,GAAAC,OAA2CmS,EAAAqC,SAAAC,QAAAtC,EAAA,CAA4BjtC,KAAA,KAAAA,GAAA,KAAAitC,EAAAjtC,KAAA0tC,UAAAC,KAAAC,SAAsDqT,OAAA,SAAAx2B,EAAAzqB,GAA8BurC,GAAA6K,MAAA3rB,EAAAzqB,GAAA,IAAyBkhD,OAAA,SAAA/S,EAAAnuC,GAA4B,IAAA+sC,EAAAxB,GAAAwT,UAAA5Q,GAA4B,IAAApB,EAAY,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAA2CiQ,GAAA6K,MAAArJ,EAAAE,KAAAjtC,IAA2BmhD,MAAA,SAAA12B,EAAA+mB,EAAAC,EAAAsP,GAA2C,IAAA9T,EAAS,iBAAAxiB,EAA+EwiB,EAApD1B,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAAyE,IAAqB9T,KAAsBA,EAAAxiB,EAAU,IAAAwiB,EAAAqC,SAAAC,QAA2B,UAAAhE,GAAA4B,WAAAtS,GAAAC,OAA2CmS,EAAAqC,SAAAC,QAAAtC,EAAA,CAA4BS,UAAAC,KAAAC,SAAuBwT,OAAA,SAAA32B,EAAA+mB,EAAAC,GAAiClG,GAAA4V,MAAA12B,EAAA+mB,EAAAC,GAAA,IAA4B4P,OAAA,SAAAlT,EAAAqD,EAAAC,GAA+B,IAAA1E,EAAAxB,GAAAwT,UAAA5Q,GAA4B,IAAApB,EAAY,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAA2CiQ,GAAA4V,MAAApU,EAAAE,KAAAuE,EAAAC,IAA8B6P,SAAA,SAAA72B,EAAA/b,GAA+B,GAAAA,EAAA,EAAU,UAAA68B,GAAA4B,WAAAtS,GAAAuB,QAA4C,IAAA6Q,EAAS,iBAAAxiB,EAAwEwiB,EAA7C1B,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAA,IAAcrP,KAAsBA,EAAAxiB,EAAU,IAAAwiB,EAAAqC,SAAAC,QAA2B,UAAAhE,GAAA4B,WAAAtS,GAAAC,OAA2C,GAAAyQ,GAAAgF,MAAAtD,EAAAjtC,MAAwB,UAAAurC,GAAA4B,WAAAtS,GAAAsB,QAA4C,IAAAoP,GAAAkF,OAAAxD,EAAAjtC,MAA0B,UAAAurC,GAAA4B,WAAAtS,GAAAuB,QAA4C,IAAAhP,EAAAme,GAAA+S,gBAAArR,EAAA,KAAqC,GAAA7f,EAAQ,UAAAme,GAAA4B,WAAA/f,GAA6B6f,EAAAqC,SAAAC,QAAAtC,EAAA,CAA4Bvf,KAAAhf,EAAAg/B,UAAAC,KAAAC,SAAgC2T,UAAA,SAAApT,EAAAz/B,GAA8B,IAAAq+B,EAAAxB,GAAAwT,UAAA5Q,GAA4B,IAAApB,EAAY,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAA2C,eAAAyR,EAAA6F,OAA+B,UAAArH,GAAA4B,WAAAtS,GAAAuB,QAA4CmP,GAAA+V,SAAAvU,EAAAE,KAAAv+B,IAA6B2nC,MAAA,SAAA5rB,EAAAinB,EAAAC,GAAoC,IAA6C1E,EAA7C1B,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAA,IAAcrP,KAAqBA,EAAAqC,SAAAC,QAAAtC,EAAA,CAA4BS,UAAAxsC,KAAAW,IAAA6vC,EAAAC,MAAkCllB,KAAA,SAAAhC,EAAAmoB,EAAA5yC,EAAA6+C,EAAAC,GAAkD,QAAAr0B,EAAc,UAAA8gB,GAAA4B,WAAAtS,GAAAE,QAAkM,IAAAkS,EAAS,GAA/FjtC,OAAA,IAAAA,EAAA,IAAAA,EAAqDA,EAAb,IAAxG4yC,EAAA,iBAAAA,EAAArH,GAAA2S,kBAAAtL,MAAqH,KAAA5yC,EAAA,MAA0B,EAAgB,iBAAAyqB,EAA2BwiB,EAAAxiB,MAAU,CAAKA,EAAAuf,GAAA3yB,UAAAoT,GAA0B,IAA4DwiB,EAAxD1B,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,SAAA,OAAA1J,KAAyB3F,KAAiB,MAAApa,KAAW,IAAA2uB,GAAA,EAAkB,MAAA5O,EAAa,GAAA3F,GAAS,OAAA2F,EAAc,UAAArH,GAAA4B,WAAAtS,GAAAkB,aAAkDkR,EAAA1B,GAAAkE,MAAAhlB,EAAAzqB,EAAA,GAA2BwhD,GAAA,EAAc,IAAAvU,EAAU,UAAA1B,GAAA4B,WAAAtS,GAAAE,QAAmF,GAAvCwQ,GAAAqF,SAAA3D,EAAAjtC,QAA2B4yC,IAAA,KAAY,MAAAA,IAAArH,GAAAgF,MAAAtD,EAAAjtC,MAAsC,UAAAurC,GAAA4B,WAAAtS,GAAAqB,SAA6C,IAAAslB,EAAA,CAAa,IAAAp0B,EAAAme,GAAAmT,QAAAzR,EAAA2F,GAA+B,GAAAxlB,EAAQ,UAAAme,GAAA4B,WAAA/f,GAA8B,IAAAwlB,GAAcrH,GAAA+V,SAAArU,EAAA,GAAoB2F,IAAA,IAAkB,IAAA7F,EAAAxB,GAAAyT,aAAA,CAA4B/R,OAAAxiB,KAAA8gB,GAAAgR,QAAAtP,GAAA2F,QAAAxF,UAAA,EAAAoF,SAAA,EAAA1F,WAAAG,EAAAH,WAAA2U,SAAA,GAAA1M,OAAA,GAAwH8J,EAAAC,GAAkB/R,EAAAD,WAAArgB,MAA2BsgB,EAAAD,WAAArgB,KAAAsgB,IAA+BrjB,EAAA,gBAAAkpB,IAAuCrH,GAAAmW,YAAAnW,GAAAmW,UAAA,IAAiCj3B,KAAA8gB,GAAAmW,YAA4BnW,GAAAmW,UAAAj3B,GAAA,EAAqB2C,EAAA,cAAA3C,KAAyB,IAAI,GAAA8gB,GAAA8P,iBAAA,YAAsC,IAAAsG,EAAA,EAAoB,YAAA/O,KAAwB+O,GAAApW,GAAA+P,SAAAC,UAAAC,MAA0C,YAAA5I,KAAwB+O,GAAApW,GAAA+P,SAAAC,UAAAE,OAA2ClQ,GAAA8P,iBAAA,WAAA5wB,EAAAk3B,IAAuD,MAAA9uB,GAAS5F,QAAAC,IAAA,sCAAAzC,EAAA,iCAAAoI,EAAAiuB,SAAmG,OAAA/T,GAAcM,MAAA,SAAAN,GAA0B,GAAAxB,GAAAqW,SAAA7U,GAAwB,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAA2CyR,EAAA8U,WAAA9U,EAAA8U,SAAA,MAAwC,IAAI9U,EAAAD,WAAAO,OAA4BN,EAAAD,WAAAO,MAAAN,GAAiC,MAAAla,GAAS,MAAAA,EAAQ,QAAQ0Y,GAAA+T,YAAAvS,EAAAoB,IAA0BpB,EAAAoB,GAAA,MAAeyT,SAAA,SAAA7U,GAA6B,cAAAA,EAAAoB,IAAwB4B,OAAA,SAAAhD,EAAAzyB,EAAAo4B,GAAyC,GAAAnH,GAAAqW,SAAA7U,GAAwB,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAA2C,IAAAyR,EAAAK,WAAAL,EAAAD,WAAAiD,OAAgD,UAAAxE,GAAA4B,WAAAtS,GAAA8B,QAA8H,OAAlFoQ,EAAAyF,SAAAzF,EAAAD,WAAAiD,OAAAhD,EAAAzyB,EAAAo4B,GAA+D3F,EAAA0U,SAAA,GAAmB1U,EAAAyF,UAAuBjnB,KAAA,SAAAwhB,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,GAAuD,GAAA93B,EAAA,GAAA83B,EAAA,EAAyB,UAAAjH,GAAA4B,WAAAtS,GAAAuB,QAA4C,GAAAmP,GAAAqW,SAAA7U,GAAwB,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAA2C,eAAAyR,EAAA6F,OAA+B,UAAArH,GAAA4B,WAAAtS,GAAAS,OAA2C,GAAAiQ,GAAAgF,MAAAxD,EAAAE,KAAAjtC,MAA+B,UAAAurC,GAAA4B,WAAAtS,GAAAsB,QAA4C,IAAA4Q,EAAAD,WAAAvhB,KAA4B,UAAAggB,GAAA4B,WAAAtS,GAAAuB,QAA4C,IAAA0lB,OAAA,IAAAtP,EAA0C,GAAAsP,GAAsC,IAAA/U,EAAAK,SAA0B,UAAA7B,GAAA4B,WAAAtS,GAAA8B,aAAnD6V,EAAAzF,EAAAyF,SAA+F,IAAA/E,EAAAV,EAAAD,WAAAvhB,KAAAwhB,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,GAAkH,OAAvCsP,IAAA/U,EAAAyF,UAAA/E,GAAuCA,GAAiBI,MAAA,SAAAd,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,EAAAC,GAA+D,GAAA/3B,EAAA,GAAA83B,EAAA,EAAyB,UAAAjH,GAAA4B,WAAAtS,GAAAuB,QAA4C,GAAAmP,GAAAqW,SAAA7U,GAAwB,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAA2C,eAAAyR,EAAA6F,OAA+B,UAAArH,GAAA4B,WAAAtS,GAAAS,OAA2C,GAAAiQ,GAAAgF,MAAAxD,EAAAE,KAAAjtC,MAA+B,UAAAurC,GAAA4B,WAAAtS,GAAAsB,QAA4C,IAAA4Q,EAAAD,WAAAe,MAA6B,UAAAtC,GAAA4B,WAAAtS,GAAAuB,QAA4C,KAAA2Q,EAAA6F,OAAsBrH,GAAAwE,OAAAhD,EAAA,KAAsB,IAAA+U,OAAA,IAAAtP,EAA0C,GAAAsP,GAAsC,IAAA/U,EAAAK,SAA0B,UAAA7B,GAAA4B,WAAAtS,GAAA8B,aAAnD6V,EAAAzF,EAAAyF,SAA+F,IAAAuP,EAAAhV,EAAAD,WAAAe,MAAAd,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,EAAAC,GAAsFqP,IAAA/U,EAAAyF,UAAAuP,GAA0C,IAAIhV,EAAAtiB,MAAA8gB,GAAA8P,iBAAA,eAAA9P,GAAA8P,iBAAA,cAAAtO,EAAAtiB,MAAuG,MAAAoI,GAAS5F,QAAAC,IAAA,yCAAAzC,KAAA,0BAAAoI,EAAAiuB,SAA+F,OAAAiB,GAAoB/xB,SAAA,SAAA+c,EAAAzyB,EAAAI,GAA2C,GAAA6wB,GAAAqW,SAAA7U,GAAwB,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAA2C,GAAAhhB,EAAA,GAAAI,GAAA,EAAwB,UAAA6wB,GAAA4B,WAAAtS,GAAAuB,QAA4C,eAAA2Q,EAAA6F,OAA+B,UAAArH,GAAA4B,WAAAtS,GAAAS,OAA2C,IAAAiQ,GAAAkF,OAAA1D,EAAAE,KAAAjtC,QAAAurC,GAAAgF,MAAAxD,EAAAE,KAAAjtC,MAA8D,UAAAurC,GAAA4B,WAAAtS,GAAAoB,QAA4C,IAAA8Q,EAAAD,WAAA9c,SAAgC,UAAAub,GAAA4B,WAAAtS,GAAAmF,YAAgD+M,EAAAD,WAAA9c,SAAA+c,EAAAzyB,EAAAI,IAAiDu1B,KAAA,SAAAlD,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,EAAAG,EAAAC,GAAkE,eAAA7F,EAAA6F,OAA+B,UAAArH,GAAA4B,WAAAtS,GAAAc,QAA4C,IAAAoR,EAAAD,WAAAmD,KAA4B,UAAA1E,GAAA4B,WAAAtS,GAAAoB,QAA4C,OAAA8Q,EAAAD,WAAAmD,KAAAlD,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,EAAAG,EAAAC,IAA+E1C,MAAA,SAAAnD,EAAAhiB,EAAAzQ,EAAAI,EAAAq4B,GAAyD,OAAAhG,KAAAD,WAAAoD,MAA+CnD,EAAAD,WAAAoD,MAAAnD,EAAAhiB,EAAAzQ,EAAAI,EAAAq4B,GAAT,GAA+EiP,OAAA,SAAAjV,GAA2B,UAASkV,MAAA,SAAAlV,EAAAmV,EAAAznC,GAAkC,IAAAsyB,EAAAD,WAAAmV,MAA6B,UAAA1W,GAAA4B,WAAAtS,GAAA0B,QAA4C,OAAAwQ,EAAAD,WAAAmV,MAAAlV,EAAAmV,EAAAznC,IAA+C0nC,SAAA,SAAA13B,EAAA0tB,GAA+G,IAA/EA,KAAA,IAAcvF,MAAAuF,EAAAvF,OAAA,IAA2BuF,EAAAiK,SAAAjK,EAAAiK,UAAA,SAAsC,SAAAjK,EAAAiK,UAAA,WAAAjK,EAAAiK,SAAqD,UAAAzvB,MAAA,0BAAAwlB,EAAAiK,SAAA,KAA6D,IAAAv3B,EAAQkiB,EAAAxB,GAAA9e,KAAAhC,EAAA0tB,EAAAvF,OAA2Dl4B,EAAvB6wB,GAAA+J,KAAA7qB,GAAuBiD,KAAqBkG,EAAA,IAAA5I,WAAAtQ,GAAiL,OAAlJ6wB,GAAAhgB,KAAAwhB,EAAAnZ,EAAA,EAAAlZ,EAAA,GAA+B,SAAAy9B,EAAAiK,SAA2Bv3B,EAAAyG,EAAAsC,EAAA,GAA6B,WAAAukB,EAAAiK,WAAkCv3B,EAAA+I,GAAQ2X,GAAA8B,MAAAN,GAAiBliB,GAAWsrB,UAAA,SAAA1rB,EAAAe,EAAA2sB,IAAsCA,KAAA,IAAcvF,MAAAuF,EAAAvF,OAAA,IAA2B,IAAA7F,EAAAxB,GAAA9e,KAAAhC,EAAA0tB,EAAAvF,MAAAuF,EAAAn4C,MAA8C,oBAAAwrB,EAAA,CAA2B,IAAAoI,EAAA,IAAA5I,WAAAwH,EAAAhH,GAAA,GAAgD62B,EAAAvwB,EAAAtG,EAAAoI,EAAA,EAAAA,EAAAlZ,QAA4D6wB,GAAAsC,MAAAd,EAAAnZ,EAAA,EAAAyuB,OAAA90B,EAAA4qB,EAAA1F,YAA4D,KAAAhe,YAAA6tB,OAAA92B,GAAqG,UAAAmH,MAAA,yBAAnE4Y,GAAAsC,MAAAd,EAAAvhB,EAAA,EAAAA,EAAAgJ,gBAAAjH,EAAA4qB,EAAA1F,QAA4GlH,GAAA8B,MAAAN,IAAiBvB,IAAA,WAAkB,OAAAD,GAAA2P,aAAsBqH,MAAA,SAAA93B,GAAwB,IAAA+kB,EAAAjE,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAA,IAAc,UAAA9M,EAAAvC,KAAuB,UAAA1B,GAAA4B,WAAAtS,GAAAE,QAA4C,IAAAwQ,GAAAgF,MAAAf,EAAAvC,KAAAjtC,MAAgC,UAAAurC,GAAA4B,WAAAtS,GAAAqB,SAA6C,IAAA9O,EAAAme,GAAA+S,gBAAA9O,EAAAvC,KAAA,KAA4C,GAAA7f,EAAQ,UAAAme,GAAA4B,WAAA/f,GAA6Bme,GAAA2P,YAAA1L,EAAA/kB,MAA2B+3B,yBAAA,WAAuCjX,GAAA2K,MAAA,QAAiB3K,GAAA2K,MAAA,SAAkB3K,GAAA2K,MAAA,mBAA2BuM,qBAAA,WAA4Y,IAAAC,EAAkB,GAA3XnX,GAAA2K,MAAA,QAAiB3K,GAAAsB,eAAAtB,GAAAoU,QAAA,MAAmCp0B,KAAA,WAAiB,UAASsiB,MAAA,SAAAd,EAAAhiB,EAAAzQ,EAAAI,EAAA6yB,GAAmD,OAAA7yB,KAAkB6wB,GAAA+U,MAAA,YAAA/U,GAAAoU,QAAA,MAAsCtT,GAAAI,SAAAlB,GAAAoU,QAAA,KAAAtT,GAAA0B,iBAAkD1B,GAAAI,SAAAlB,GAAAoU,QAAA,KAAAtT,GAAAyC,kBAAmDvD,GAAA+U,MAAA,WAAA/U,GAAAoU,QAAA,MAAqCpU,GAAA+U,MAAA,YAAA/U,GAAAoU,QAAA,MAAwD,oBAAAgD,OAAA,CAAgC,IAAAC,EAAA,IAAA53B,WAAA,GAAmC03B,EAAA,WAA+D,OAArCC,OAAAE,gBAAAD,GAAqCA,EAAA,SAAsDF,EAA7Bz4B,EAA6B,WAA0B,OAAOxrB,EAAQ,IAAQ,mBAA8B,WAA0B,WAAAyC,KAAAC,SAAA,GAA6BoqC,GAAAuX,aAAA,gBAAAJ,GAA+CnX,GAAAuX,aAAA,iBAAAJ,GAAgDnX,GAAA2K,MAAA,YAAqB3K,GAAA2K,MAAA,iBAAyB6M,yBAAA,WAAuCxX,GAAA2K,MAAA,SAAkB3K,GAAA2K,MAAA,cAAuB3K,GAAA2K,MAAA,iBAA0B3K,GAAA0D,MAAA,CAAUA,MAAA,WAAkB,IAAAhC,EAAA1B,GAAA2D,WAAA,4BAAqU,OAA9QjC,EAAAqC,SAAA,CAAeE,OAAA,SAAAtY,EAAA93B,GAA8B,IAAA+uC,GAAA/uC,EAAa2tC,EAAAxB,GAAAwT,UAAA5Q,GAA4B,IAAApB,EAAA,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAAsD,IAAAzQ,EAAA,CAASqM,OAAA,KAAA+X,MAAA,CAAmBmG,WAAA,QAAkB9F,SAAA,CAAWc,SAAA,WAAqB,OAAArD,EAAAtiB,QAAsC,OAAfI,EAAAqM,OAAArM,EAAeA,IAAcoiB,IAAc,GAAG,kBAAkB+V,sBAAA,WAAoCt5B,EAAA,MAAoB6hB,GAAAuX,aAAA,eAAAp5B,EAAA,OAAqD6hB,GAAAuE,QAAA,yBAAoCpmB,EAAA,OAAqB6hB,GAAAuX,aAAA,qBAAAp5B,EAAA,QAA4D6hB,GAAAuE,QAAA,0BAAqCpmB,EAAA,OAAqB6hB,GAAAuX,aAAA,qBAAAp5B,EAAA,QAA4D6hB,GAAAuE,QAAA,2BAAsC,IAAA1B,EAAA7C,GAAA9e,KAAA,kBAAoCxB,EAAA,IAAAmjB,EAAAD,GAAA,6BAAAC,EAAAD,GAAA,KAA+D,IAAA8U,EAAA1X,GAAA9e,KAAA,mBAAsCxB,EAAA,IAAAg4B,EAAA9U,GAAA,8BAAA8U,EAAA9U,GAAA,KAAkE,IAAA+U,EAAA3X,GAAA9e,KAAA,mBAAsCxB,EAAA,IAAAi4B,EAAA/U,GAAA,8BAAA+U,EAAA/U,GAAA,MAAkEgV,iBAAA,WAA+B5X,GAAA4B,aAAwB5B,GAAA4B,WAAA,SAAA0O,EAAA5O,GAA8C6H,KAAA7H,OAAe6H,KAAAsO,SAAA,SAAAvH,GAAgD,QAAAz7C,KAAjB00C,KAAA+G,QAAiBhhB,GAA4B,GAAAA,GAAAz6B,KAAAy7C,EAAA,CAA6B/G,KAAAuD,KAAAj4C,EAAc,QAAU00C,KAAAsO,SAAAvH,GAAqB/G,KAAAgM,QAAAve,GAAAsZ,GAAmC/G,KAAAliB,OAAArzB,OAAAC,eAAAs1C,KAAA,SAAkDh1C,OAAA,IAAA6yB,OAAAC,MAAAywB,UAAA,KAAyC9X,GAAA4B,WAAA1sC,UAAA,IAAAkyB,MAAkC4Y,GAAA4B,WAAA1sC,UAAA6iD,YAAA/X,GAAA4B,WAAkD,CAAAtS,GAAAE,QAAA3gB,QAAA,SAAAi+B,GAA6C9M,GAAAwG,cAAAsG,GAAA,IAAA9M,GAAA4B,WAAAkL,GAA+C9M,GAAAwG,cAAAsG,GAAAzlB,MAAA,gCAA4D4kB,WAAA,WAAyBjM,GAAA4X,mBAAsB5X,GAAA0P,UAAA,IAAAj6C,MAAA,MAA6BuqC,GAAA0D,MAAAF,GAAA,GAAiB,KAAMxD,GAAAiX,2BAA8BjX,GAAAkX,uBAA0BlX,GAAAwX,2BAA8BxX,GAAAmQ,YAAA,CAAgB3M,SAAAiE,SAAAsE,UAAAwC,cAAiEvN,KAAA,SAAAK,EAAA7U,EAAAgd,GAAqC9pB,GAAAsgB,GAAAgB,KAAA4O,YAAA,gLAA4M5P,GAAAgB,KAAA4O,aAAA,EAAyB5P,GAAA4X,mBAAsBz5B,EAAA,MAAAkjB,GAAAljB,EAAA,MAAuCA,EAAA,OAAAqO,GAAArO,EAAA,OAA0CA,EAAA,OAAAqrB,GAAArrB,EAAA,OAAyC6hB,GAAAyX,yBAA2Bp3B,KAAA,WAAmB2f,GAAAgB,KAAA4O,aAAA,EAA0B,IAAAoI,EAAA75B,EAAA,QAA6B65B,KAAA,GAAoB,QAAA1kD,EAAA,EAAYA,EAAA0sC,GAAAwP,QAAArgC,OAAoB7b,IAAA,CAAK,IAAAkuC,EAAAxB,GAAAwP,QAAAl8C,GAAyBkuC,GAAqBxB,GAAA8B,MAAAN,KAAkBmL,QAAA,SAAAsL,EAAAC,GAAsC,IAAAzjD,EAAA,EAAyD,OAA9CwjD,IAAAxjD,GAAA,KAAwByjD,IAAAzjD,GAAA,KAAsBA,GAAY0jD,SAAA,SAAAtZ,EAAAuZ,GAA0C,IAAAl5B,EAAAuf,GAAA3d,KAAA6E,MAAA,KAAAkZ,GAAwF,OAAnDuZ,GAAA,KAAAl5B,EAAA,KAAAA,IAAA8D,OAAA,IAAmD9D,GAAYm5B,aAAA,SAAAlY,EAAA2O,GAAwC,OAAArQ,GAAA5R,QAAAiiB,EAAA3O,IAAmCmY,gBAAA,SAAAp5B,GAAkC,OAAAuf,GAAA3yB,UAAAoT,IAA4Bq5B,WAAA,SAAAr5B,EAAAs5B,GAAiD,IAAAl5B,EAAA0gB,GAAAyY,YAAAv5B,EAAAs5B,GAAiD,OAAAl5B,EAAAo5B,OAAep5B,EAAAtqB,QAAuBwpC,GAAAlf,EAAAkqB,OAAuB,OAAaiP,YAAA,SAAAv5B,EAAAs5B,GAAkD,IAAiEt5B,GAA7D+kB,EAAAjE,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAAyH,KAA8Bt5B,KAAiB,MAAAoI,IAAU,IAAAhI,EAAA,CAAS2xB,QAAA,EAAAyH,QAAA,EAAAlP,MAAA,EAAA31C,KAAA,KAAAqrB,KAAA,KAAAlqB,OAAA,KAAA2jD,cAAA,EAAAC,WAAA,KAAAC,aAAA,MAAwH,IAAI,IAAA5U,EAAAjE,GAAAwK,WAAAtrB,EAAA,CAA+ByM,QAAA,IAAcrM,EAAAq5B,cAAA,EAAsBr5B,EAAAs5B,WAAA3U,EAAA/kB,KAA2BI,EAAAu5B,aAAA5U,EAAAvC,KAA6BpiB,EAAAzrB,KAAA4qC,GAAAe,SAAAtgB,GAA6B+kB,EAAAjE,GAAAwK,WAAAtrB,EAAA,CAA2B6xB,QAAAyH,IAA8Bl5B,EAAAo5B,QAAA,EAAgBp5B,EAAAJ,KAAA+kB,EAAA/kB,KAAqBI,EAAAtqB,OAAAivC,EAAAvC,KAAuBpiB,EAAAzrB,KAAAowC,EAAAvC,KAAA7tC,KAA0ByrB,EAAA2xB,OAAA,MAAAhN,EAAA/kB,KAA6B,MAAAoI,GAAShI,EAAAkqB,MAAAliB,EAAAgpB,MAAkB,OAAAhxB,GAAWw5B,aAAA,SAAAntB,EAAA93B,EAAAokD,EAAAC,GAAuD,IAAAh5B,EAAAuf,GAAAoB,MAAA,iBAAAlU,IAAAqU,GAAAgR,QAAArlB,GAAA93B,GAA6EY,EAAAurC,GAAA2M,QAAAsL,EAAAC,GAAsC,OAAAlY,GAAA2K,MAAAzrB,EAAAzqB,IAA2BskD,WAAA,SAAAptB,EAAAzM,EAAA+4B,EAAAC,GAAqDvsB,EAAA,iBAAAA,IAAAqU,GAAAgR,QAAArlB,GAA8F,IAApC,IAAAkT,EAAA3f,EAAA2B,MAAA,KAAAirB,UAAoCjN,EAAA1vB,QAAA,CAAoB,IAAA6pC,EAAAna,EAAAmL,MAAqB,GAAAgP,EAAA,CAAkB,IAAAtI,EAAAjS,GAAAoB,MAAAlU,EAAAqtB,GAAoC,IAAIhZ,GAAA2K,MAAA+F,GAAkB,MAAAppB,IAAUqE,EAAA+kB,GAAe,OAAAA,GAAeuI,WAAA,SAAAttB,EAAA93B,EAAAqlD,EAAAjB,EAAAC,GAAgE,IAAAh5B,EAAAuf,GAAAoB,MAAA,iBAAAlU,IAAAqU,GAAAgR,QAAArlB,GAAA93B,GAA6EY,EAAAurC,GAAA2M,QAAAsL,EAAAC,GAAsC,OAAAlY,GAAAprC,OAAAsqB,EAAAzqB,IAA4B0kD,eAAA,SAAAxtB,EAAA93B,EAAAosB,EAAAg4B,EAAAC,EAAAhR,GAAqE,IAAAhoB,EAAArrB,EAAA4qC,GAAAoB,MAAA,iBAAAlU,IAAAqU,GAAAgR,QAAArlB,GAAA93B,GAAA83B,EAAyFl3B,EAAAurC,GAAA2M,QAAAsL,EAAAC,GAAsCxW,EAAA1B,GAAAprC,OAAAsqB,EAAAzqB,GAA8B,GAAAwrB,EAAA,CAAS,oBAAAA,EAAA,CAA0D,IAA/B,IAAAsgB,EAAA,IAAA9qC,MAAAwqB,EAAA9Q,QAA+B7b,EAAA,EAAA6P,EAAA8c,EAAA9Q,OAA4B7b,EAAA6P,IAAM7P,EAAAitC,EAAAjtC,GAAA2sB,EAAA6G,WAAAxzB,GAA8B2sB,EAAAsgB,EAASP,GAAA6K,MAAAnJ,EAAA,IAAAjtC,GAAwB,IAAA+sC,EAAAxB,GAAA9e,KAAAwgB,EAAA,KAA6B1B,GAAAsC,MAAAd,EAAAvhB,EAAA,EAAAA,EAAA9Q,OAAA,EAAA+3B,GAA6ClH,GAAA8B,MAAAN,GAAiBxB,GAAA6K,MAAAnJ,EAAAjtC,GAAoB,OAAAitC,GAAY6V,aAAA,SAAA5rB,EAAA93B,EAAAwtC,EAAA7U,GAAmD,IAAAtN,EAAAuf,GAAAoB,MAAA,iBAAAlU,IAAAqU,GAAAgR,QAAArlB,GAAA93B,GAA6EY,EAAAurC,GAAA2M,UAAAtL,IAAA7U,GAAsCwT,GAAAuX,aAAArD,QAAAlU,GAAAuX,aAAArD,MAAA,IAAmD,IAAA/S,EAAAnB,GAAAoU,QAAApU,GAAAuX,aAAArD,QAAA,GAA2yB,OAA7vBlU,GAAAsB,eAAAH,EAAA,CAAuBjgB,KAAA,SAAAsgB,GAAuBA,EAAAK,UAAA,GAAsBC,MAAA,SAAAN,GAA0BhV,KAAAhN,QAAAgN,EAAAhN,OAAArQ,QAAgDqd,EAAA,KAAYxM,KAAA,SAAAwhB,EAAAhiB,EAAAzQ,EAAAI,EAAA6yB,GAAkE,IAAhB,IAAAE,EAAA,EAAgB5uC,EAAA,EAAYA,EAAA6b,EAAS7b,IAAA,CAAK,IAAA+rC,EAAW,IAAIA,EAAAgC,IAAe,MAAA/Z,GAAS,UAAA0Y,GAAA4B,WAAAtS,GAAAK,KAAyC,QAAA3N,IAAAqd,GAAA,IAAA6C,EAAsC,UAAAlC,GAAA4B,WAAAtS,GAAAW,QAA4C,GAAAoP,QAAA,MAA2C6C,IAAY1iB,EAAAzQ,EAAAzb,GAAA+rC,EAAuE,OAA/C6C,IAAcV,EAAAE,KAAAS,UAAAC,KAAAC,OAAiCH,GAAiBI,MAAA,SAAAd,EAAAhiB,EAAAzQ,EAAAI,EAAA6yB,GAAmD,QAAA1uC,EAAA,EAAYA,EAAA6b,EAAS7b,IAAK,IAAIk5B,EAAAhN,EAAAzQ,EAAAzb,IAAyB,MAAAg0B,GAAS,UAAA0Y,GAAA4B,WAAAtS,GAAAK,KAAsF,OAA5CxgB,IAAWqyB,EAAAE,KAAAS,UAAAC,KAAAC,OAAiC/uC,KAAa0sC,GAAA+U,MAAA71B,EAAAzqB,EAAA0sC,IAA+BiY,WAAA,SAAAztB,EAAA93B,EAAA0V,EAAA0uC,EAAAC,GAA4D,IAAAh5B,EAAAuf,GAAAoB,MAAA,iBAAAlU,IAAAqU,GAAAgR,QAAArlB,GAAA93B,GAA6E,OAAAmsC,GAAAuE,QAAAh7B,EAAA2V,IAA+Bm6B,cAAA,SAAArK,GAA+B,GAAAA,EAAA6C,UAAA7C,EAAA4C,UAAA5C,EAAApK,MAAAoK,EAAA/J,SAAA,SAAkE,IAAAqU,GAAA,EAAiB,uBAAAr4B,eAAwC,UAAAmG,MAAA,oMAAoN,IAAAjJ,EAAA,KAAyJ,UAAAiJ,MAAA,iDAAjI,IAAI4nB,EAAA/J,SAAA5B,GAAAllB,EAAA,KAAA6wB,EAAAjuB,MAAA,GAA8DiuB,EAAA7J,UAAA6J,EAAA/J,SAAA91B,OAAkC,MAAAmY,GAASgyB,GAAA,EAA8H,OAAzCA,GAAA9a,GAAAlP,GAAAK,KAAyC2pB,GAAeC,eAAA,SAAA5tB,EAAA93B,EAAAktB,EAAAk3B,EAAAC,GAA6D,SAAAsB,IAA0BjQ,KAAAkQ,aAAA,EAAuBlQ,KAAAmQ,OAAA,GAAwvE,GAAzuEF,EAAAtkD,UAAAf,IAAA,SAAA8xB,GAA8D,KAAAA,EAAAsjB,KAAAp6B,OAAA,GAAA8W,EAAA,IAA8C,IAAA0zB,EAAA1zB,EAAAsjB,KAAAqQ,UAAmCC,EAAA5zB,EAAAsjB,KAAAqQ,UAAA,EAAkC,OAAArQ,KAAAz1C,OAAA+lD,GAAAF,KAA2CH,EAAAtkD,UAAA4kD,cAAA,SAAAhmD,GAAqFy1C,KAAAz1C,UAAoB0lD,EAAAtkD,UAAA6kD,YAAA,WAA2E,IAAA/4B,EAAA,IAAAC,eAAqE,GAA1CD,EAAAE,KAAA,OAAAH,GAAA,GAA2BC,EAAAG,KAAA,QAAeH,EAAA3C,QAAA,KAAA2C,EAAA3C,OAAA,WAAA2C,EAAA3C,QAAA,UAAA+I,MAAA,iBAAArG,EAAA,aAAAC,EAAA3C,QAAsH,IAA+D27B,EAA/DC,EAAAC,OAAAl5B,EAAAm5B,kBAAA,mBAA0EC,GAAAJ,EAAAh5B,EAAAm5B,kBAAA,6BAAAH,EAAqFK,GAAAL,EAAAh5B,EAAAm5B,kBAAA,+BAAAH,EAAiFJ,EAAA,QAAwBQ,IAAAR,EAAAK,GAAwC,IAA8uBK,EAAA/Q,KAAmB+Q,EAAAR,cAAA,SAAAD,GAA4C,IAAArZ,EAAAqZ,EAAAD,EAA6Bp3B,GAAAq3B,EAAA,GAAAD,EAAA,EAAgK,GAA/Hp3B,EAAA7sB,KAAA0V,IAAAmX,EAAAy3B,EAAA,QAA+B,IAAAK,EAAAZ,OAAAG,KAAoDS,EAAAZ,OAAAG,GAA97B,SAAAzZ,EAAAC,GAA6B,GAAAD,EAAAC,EAAA,UAAAjZ,MAAA,kBAAAgZ,EAAA,KAAAC,EAAA,4BAAsF,GAAAA,EAAA4Z,EAAA,YAAA7yB,MAAA,QAAA6yB,EAAA,uCAA6F,IAAAj5B,EAAA,IAAAC,eAAsS,GAA3QD,EAAAE,KAAA,MAAAH,GAAA,GAA0Bk5B,IAAAL,GAAA54B,EAAAu5B,iBAAA,iBAAAna,EAAA,IAAAC,GAA6E,oBAAA5gB,aAAAuB,EAAAK,aAAA,eAAiEL,EAAAw5B,kBAAyBx5B,EAAAw5B,iBAAA,sCAA2Dx5B,EAAAG,KAAA,QAAeH,EAAA3C,QAAA,KAAA2C,EAAA3C,OAAA,WAAA2C,EAAA3C,QAAA,UAAA+I,MAAA,iBAAArG,EAAA,aAAAC,EAAA3C,QAAsH,YAAA2D,IAAAhB,EAAAM,SAA6B,IAAA7B,WAAAuB,EAAAM,UAAA,IAA6C+hB,GAAAriB,EAAAI,cAAA,OAAwQq5B,CAAAja,EAAAhe,SAA4C,IAAA83B,EAAAZ,OAAAG,GAAA,UAAAzyB,MAAA,iBAAoF,OAAAkzB,EAAAZ,OAAAG,MAAqCQ,GAAAJ,IAA0BL,EAAAK,EAAA,EAAuBA,EAAA1Q,KAAAz1C,OAAA,GAAAqb,OAAiCyqC,EAAAK,EAAqBv4B,QAAAC,IAAA,gFAA2F4nB,KAAAmR,QAAAT,EAAwB1Q,KAAAoR,WAAAf,EAA0BrQ,KAAAkQ,aAAA,GAAuB,oBAAAx4B,eAAA,CAAwC,IAAAxC,EAAA,2HAAqJ,IAAA67B,EAAA,IAAAd,EAAiCxlD,OAAA29C,iBAAA2I,EAAA,CAAmCnrC,OAAA,CAAQhb,IAAA,WAAyD,OAAzCo1C,KAAAkQ,aAAsBlQ,KAAAwQ,cAAmBxQ,KAAAmR,UAAsBd,UAAA,CAAYzlD,IAAA,WAAyD,OAAzCo1C,KAAAkQ,aAAsBlQ,KAAAwQ,cAAmBxQ,KAAAoR,eAA4B,IAAAzB,EAAA,CAAgBrH,UAAA,EAAA5M,SAAAqV,QAAwCpB,EAAA,CAAgBrH,UAAA,EAAA9wB,OAAwB,IAAA2gB,EAAA1B,GAAAiZ,WAAAttB,EAAA93B,EAAAqlD,EAAAjB,EAAAC,GAAgEgB,EAAAjU,SAAwBvD,EAAAuD,SAAAiU,EAAAjU,SAAkCiU,EAAAn4B,MAAwB2gB,EAAAuD,SAAA,KAAmBvD,EAAA3gB,IAAAm4B,EAAAn4B,KAAwB/sB,OAAA29C,iBAAAjQ,EAAA,CAA8ByD,UAAA,CAAWhxC,IAAA,WAAgB,OAAAo1C,KAAAtE,SAAA91B,WAAiC,IAAAoyB,EAAA,GAAuuB,OAArtBvtC,OAAAu3C,KAAA7J,EAAAH,YAAsC1yB,QAAA,SAAAha,GAA4B,IAAAoa,EAAAyyB,EAAAH,WAAA1sC,GAA4B0sC,EAAA1sC,GAAA,WAA6C,IAAAmrC,GAAAqZ,cAAA3X,GAA4B,UAAA1B,GAAA4B,WAAAtS,GAAAK,KAAyC,OAAA1gB,EAAA0W,MAAA,KAAAvF,cAAoCmhB,EAAAvhB,KAAA,SAAAwhB,EAAAhiB,EAAAzQ,EAAAI,EAAA83B,GAA+E,IAAAjH,GAAAqZ,cAAA3X,GAA4B,UAAA1B,GAAA4B,WAAAtS,GAAAK,KAAyC,IAAAsV,EAAAzD,EAAAE,KAAAuD,SAAkC,GAAAgC,GAAAhC,EAAA91B,OAAA,SAAsC,IAAAgT,EAAAxsB,KAAA0V,IAAA45B,EAAA91B,OAAA83B,EAAA93B,GAAmE,GAAhBuQ,EAAAyC,GAAA,GAAgB8iB,EAAArlB,MAAmB,QAAAtsB,EAAA,EAAYA,EAAA6uB,EAAO7uB,IAAKksB,EAAAzQ,EAAAzb,GAAA2xC,EAAAgC,EAAA3zC,QAA4C,IAAAA,EAAA,EAAYA,EAAA6uB,EAAO7uB,IAAKksB,EAAAzQ,EAAAzb,GAAA2xC,EAAA9wC,IAAA8yC,EAAA3zC,GAA2C,OAAA6uB,GAAauf,EAAAH,aAA2BG,GAAYkZ,oBAAA,SAAAjvB,EAAA93B,EAAAktB,EAAAk3B,EAAAC,EAAA32B,EAAAC,EAAAq5B,EAAA3T,EAAA4T,GAAiHC,GAAA/Z,OAAe,IAAAga,EAAAnnD,EAAA4qC,GAAA5R,QAAA4R,GAAAoB,MAAAlU,EAAA93B,IAAA83B,EAA+Df,GAAA,MAAAowB,GAA+C,SAAAC,EAAAC,GAAgC,SAAAC,EAAAD,GAA2BJ,OAAyBD,GAAoB7a,GAAAmZ,eAAAxtB,EAAA93B,EAAAqnD,EAAAjD,EAAAC,EAAAhR,GAAiE3lB,OAAmBwJ,KAAyB,IAAAqwB,GAAA,EAAkBj9B,EAAA,eAAAtP,QAAA,SAAAwsC,GAAmDD,GAAkBC,EAAA,UAAAL,KAAkCK,EAAA,OAAAH,EAAAF,EAAAG,EAAA,WAAuD35B,OAAqBuJ,OAA4BqwB,GAAA,KAAiBA,GAAAD,EAAAD,GAA8BpwB,KAAsB,iBAAA/J,EAAyBg6B,GAAAO,UAAAv6B,EAAA,SAAAm6B,GAA2CD,EAAAC,IAAuB15B,GAAgBy5B,EAAAl6B,IAAkB4mB,UAAA,WAAwB,OAAAhpB,OAAAgpB,WAAAhpB,OAAAipB,cAAAjpB,OAAAkpB,iBAAAlpB,OAAAmpB,aAAyFyT,QAAA,WAAsB,eAAA58B,OAAA+B,SAAA86B,UAAwCzT,WAAA,GAAAC,cAAA,YAAAyT,cAAA,SAAA7b,EAAAre,EAAAC,GAAwFD,KAAA,aAA8BC,KAAA,aAAgC,IAAAmmB,EAAA3H,GAAA2H,YAA6B,IAAI,IAAA+T,EAAA/T,EAAAzmB,KAAA8e,GAAAub,UAAAvb,GAAA+H,YAA2D,MAAAzgB,GAAS,OAAA9F,EAAA8F,GAAkBo0B,EAAA9S,gBAAA,WAAmElnB,QAAAC,IAAA,eAA2B+5B,EAAArc,OAA0B6J,kBAAAlJ,GAAAgI,gBAAwC0T,EAAApS,UAAA,WAAuD,IAA0BR,EAA1B4S,EAAArc,OAA0ByJ,YAAA,CAAA9I,GAAAgI,eAAA,aAA+DkH,EAAApG,EAAAG,YAAAjJ,GAAAgI,eAAoD2T,EAAA,EAAAC,EAAA,EAAAtQ,EAAA1L,EAAAzwB,OAAmC,SAAAgsC,IAAkB,GAAAS,EAAAr6B,IAAoBC,IAAeoe,EAAA/wB,QAAA,SAAAqQ,GAA8B,IAAA28B,EAAA3M,EAAA/D,IAAAnL,GAAAyY,YAAAv5B,GAAAlqB,OAAAiwC,SAAA/lB,GAAoE28B,EAAAvS,UAAA,aAAqDqS,EAAKC,GAAAtQ,GAAA6P,KAA4BU,EAAAr6B,QAAA,WAAwDm6B,KAAPC,GAAOtQ,GAAA6P,OAA+BrS,EAAAtnB,WAA6Bk6B,EAAAl6B,WAA4Bs6B,gBAAA,SAAAlc,EAAAre,EAAAC,GAAkDD,KAAA,aAA8BC,KAAA,aAAgC,IAAAmmB,EAAA3H,GAAA2H,YAA6B,IAAI,IAAA+T,EAAA/T,EAAAzmB,KAAA8e,GAAAub,UAAAvb,GAAA+H,YAA2D,MAAAzgB,GAAS,OAAA9F,EAAA8F,GAAkBo0B,EAAA9S,gBAAApnB,EAAoCk6B,EAAApS,UAAA,WAAuD,IAAAX,EAAA+S,EAAArc,OAA0B,IAAI,IAAAyJ,EAAAH,EAAAG,YAAA,CAAA9I,GAAAgI,eAAA,YAA8D,MAAA1gB,GAAoB,YAAX9F,EAAA8F,GAAkB,IAAA4nB,EAAApG,EAAAG,YAAAjJ,GAAAgI,eAAoD2T,EAAA,EAAAC,EAAA,EAAAtQ,EAAA1L,EAAAzwB,OAAmC,SAAAgsC,IAAkB,GAAAS,EAAAr6B,IAAoBC,IAAeoe,EAAA/wB,QAAA,SAAAqQ,GAA8B,IAAA68B,EAAA7M,EAAA/6C,IAAA+qB,GAA+B68B,EAAAzS,UAAA,WAAqDtJ,GAAAyY,YAAAv5B,GAAAw5B,QAAgC1Y,GAAAoE,OAAAllB,GAAgB8gB,GAAAmZ,eAAA1a,GAAAW,QAAAlgB,GAAAuf,GAAAe,SAAAtgB,GAAA68B,EAAA1c,QAAA,WAA2Fsc,EAAKC,GAAAtQ,GAAA6P,KAA4BY,EAAAv6B,QAAA,WAAwDm6B,KAAPC,GAAOtQ,GAAA6P,OAA+BrS,EAAAtnB,WAA6Bk6B,EAAAl6B,YAA+Bw6B,GAAA,CAAcC,iBAAA,EAAAC,SAAA,GAA8BC,MAAA,IAAAC,YAAA,SAAAC,EAAAn9B,GAA6C,SAAAA,EAAA,IAAkB,IAAAqgB,EAAQ,UAAA8c,EAAiB9c,EAAAS,GAAAC,UAAa,CAAK,IAAAqc,EAAAtc,GAAAwT,UAAA6I,GAAkC,IAAAC,EAAA,UAAAtc,GAAA4B,WAAAtS,GAAAS,OAAyDwP,EAAA+c,EAAAp9B,KAAmBA,EAAAuf,GAAAoB,MAAAN,EAAArgB,GAA0B,OAAAA,GAAYq9B,OAAA,SAAA1yB,EAAA3K,EAAAmJ,GAAkC,IAAI,IAAA0hB,EAAAlgB,EAAA3K,GAAoB,MAAAoI,GAAS,GAAAA,KAAAoa,MAAAjD,GAAA3yB,UAAAoT,KAAAuf,GAAA3yB,UAAAk0B,GAAAgR,QAAA1pB,EAAAoa,OAAyE,OAAApS,GAAAqB,QAA2B,MAAArJ,EAA2hB,OAAnhBhF,EAAA+F,GAAA,GAAA0hB,EAAA5I,IAAwB7e,EAAA+F,EAAA,QAAmB/F,EAAA+F,EAAA,MAAA0hB,EAAAhE,IAA0BzjB,EAAA+F,EAAA,OAAA0hB,EAAAt1C,KAA4B6tB,EAAA+F,EAAA,OAAA0hB,EAAA/D,MAA6B1jB,EAAA+F,EAAA,OAAA0hB,EAAA9D,IAA2B3jB,EAAA+F,EAAA,OAAA0hB,EAAA7D,IAA2B5jB,EAAA+F,EAAA,OAAA0hB,EAAApI,KAA4Brf,EAAA+F,EAAA,SAAoB/F,EAAA+F,EAAA,OAAA0hB,EAAA5nB,KAA4BG,EAAA+F,EAAA,YAAuB/F,EAAA+F,EAAA,OAAA0hB,EAAAxD,OAA8BjkB,EAAA+F,EAAA,OAAA0hB,EAAA5D,MAAAgJ,UAAA,MAA6C7sB,EAAA+F,EAAA,SAAoB/F,EAAA+F,EAAA,OAAA0hB,EAAA3D,MAAA+I,UAAA,MAA6C7sB,EAAA+F,EAAA,SAAoB/F,EAAA+F,EAAA,OAAA0hB,EAAA1D,MAAA8I,UAAA,MAA6C7sB,EAAA+F,EAAA,SAAoB/F,EAAA+F,EAAA,OAAA0hB,EAAAhE,IAA2B,GAASyW,QAAA,SAAAC,EAAAjb,EAAAr+B,EAAAkkC,GAA2C,IAAA7nB,EAAA,IAAAC,WAAA0F,EAAAD,SAAAu3B,IAAAt5C,IAA0D68B,GAAA2E,MAAAnD,EAAAhiB,EAAA,EAAArc,EAAAkkC,IAAoCqV,QAAA,SAAAx9B,EAAAzqB,GAA8I,MAArF,OAA1ByqB,EAAAuf,GAAA3yB,UAAAoT,IAA0BA,EAAA/P,OAAA,KAAA+P,IAAA8D,OAAA,EAAA9D,EAAA/P,OAAA,IAA+D6wB,GAAA2K,MAAAzrB,EAAAzqB,EAAA,GAAsB,GAASkoD,QAAA,SAAAz9B,EAAAzqB,EAAA0sC,GAAmC,aAAA1sC,GAAmB,2DAA2D,eAAA66B,GAAAuB,OAA0D,OAAxBmP,GAAAkE,MAAAhlB,EAAAzqB,EAAA0sC,GAAwB,GAASyb,WAAA,SAAA19B,EAAAmJ,EAAAw0B,GAAyC,GAAAA,GAAA,SAAAvtB,GAAAuB,OAAwC,IAAAvR,EAAA0gB,GAAA6E,SAAA3lB,GAA0B/b,EAAAxN,KAAA0V,IAAAwxC,EAAA51B,EAAA3H,IAA+Cw9B,EAAAl5B,EAAAyE,EAAAllB,GAAkF,OAAvD4jB,EAAAzH,EAAA+I,EAAAw0B,EAAA,GAAgCj5B,EAAAyE,EAAAllB,GAAA25C,EAAuB35C,GAAW45C,SAAA,SAAA79B,EAAA89B,GAAiC,MAAAA,EAAa,OAAA1tB,GAAAuB,OAA0B,IAAA6Q,EAAsDA,EAA7C1B,GAAAwK,WAAAtrB,EAAA,CAA+B6xB,QAAA,IAAcrP,KAAiB,IAAAoR,EAAA,GAA+E,OAAlE,EAAAkK,IAAAlK,GAAA,KAAsB,EAAAkK,IAAAlK,GAAA,KAAsB,EAAAkK,IAAAlK,GAAA,KAAsBA,GAAA9S,GAAA+S,gBAAArR,EAAAoR,IAA0CxjB,GAAAc,OAA0B,GAAS6sB,MAAA,SAAA/9B,EAAAmoB,EAAA6V,GAAwC,IAAAC,EAAAnd,GAAAwT,UAAA0J,GAAiE,OAA7BC,GAAAnd,GAAA8B,MAAAqb,GAA6Bnd,GAAA9e,KAAAhC,EAAAmoB,EAAA,EAAA6V,KAAAta,IAAoDwa,QAAA,SAAA5b,EAAA6b,EAAAC,EAAAvuC,GAAwD,IAAV,IAAAuQ,EAAA,EAAUhsB,EAAA,EAAYA,EAAAgqD,EAAShqD,IAAA,CAAK,IAAAmwB,EAAAnB,EAAA+6B,EAAA,EAAA/pD,GAAA,GAA2B6P,EAAAmf,EAAA+6B,GAAA,EAAA/pD,EAAA,OAA+BgyB,EAAA0a,GAAAhgB,KAAAwhB,EAAA5d,EAAAH,EAAAtgB,EAAA4L,GAA8C,GAAAuW,EAAA,WAA6B,GAAVhG,GAAAgG,EAAUA,EAAAniB,EAAA,MAAkB,OAAAmc,GAAWi+B,SAAA,SAAA/b,EAAA6b,EAAAC,EAAAvuC,GAAyD,IAAV,IAAAuQ,EAAA,EAAUhsB,EAAA,EAAYA,EAAAgqD,EAAShqD,IAAA,CAAK,IAAAmwB,EAAAnB,EAAA+6B,EAAA,EAAA/pD,GAAA,GAA2B6P,EAAAmf,EAAA+6B,GAAA,EAAA/pD,EAAA,OAA+BgyB,EAAA0a,GAAAsC,MAAAd,EAAA5d,EAAAH,EAAAtgB,EAAA4L,GAA+C,GAAAuW,EAAA,WAAmBhG,GAAAgG,EAAU,OAAAhG,GAAWk+B,QAAA,EAAArpD,IAAA,SAAAqpD,GAA6F,OAA1DxB,GAAAwB,SAAA,EAAoBl7B,EAAA05B,GAAAwB,QAAA,OAAiDC,OAAA,WAA+D,OAA1Cl4B,EAAAy2B,GAAA7nD,QAAqDupD,gBAAA,WAA8B,IAAAlc,EAAAxB,GAAAwT,UAAAwI,GAAA7nD,OAAwC,IAAAqtC,EAAA,UAAAxB,GAAA4B,WAAAtS,GAAAS,OAAsD,OAAAyR,GAAcmc,gBAAA,WAA8B,IAAAC,EAAAC,OAAAC,UAAA9B,GAAA7nD,OAA4C,IAAAypD,EAAA,UAAA5d,GAAA4B,WAAAtS,GAAAS,OAAsD,OAAA6tB,GAAcG,iBAAA,SAAAC,GAAwC,IAAAC,EAAAjC,GAAA7nD,MAAA+pD,EAAAlC,GAAA7nD,MAAgD,GAAA6pD,GAAA,IAAAC,EAAA,YAAoC,IAAA1yB,EAAA4yB,gBAAAF,EAAAC,GAAwC,GAAA3yB,EAAA+kB,MAAA,UAAAtQ,GAAA4B,WAAArW,EAAA+kB,OAAkG,OAAhD/kB,EAAAkxB,KAAA2B,IAAAC,YAAA9yB,EAAAkxB,OAAAlxB,EAAAkxB,KAAgDlxB,GAAY+yB,MAAA,WAAoB,IAAAC,EAAAvC,GAAA7nD,MAAAqqD,EAAAxC,GAAA7nD,MAA6F,OAAlDurB,EAAA6+B,GAAA,MAAAC,GAA2B,IAAAA,GAAuBD,GAAWE,QAAA,WAAsB/+B,EAAA,IAAAs8B,GAAA7nD,SAAwjG,IAAAuqD,GAAA,GAA0B,SAAAC,GAAAC,GAAqC,KAAAA,EAAAzvC,QAAA,CAA0B,IAAAsU,EAAAm7B,EAAA5U,MAA0B4U,EAAA5U,KAA0B6U,CAAAp7B,IAAU,SAAAq7B,GAAAC,GAA6C,OAAAxV,KAAA,aAAA9hB,EAAAs3B,GAAA,IAAiD,IAAAC,GAAA,GAA4BC,GAAA,GAAuBC,GAAA,GAAwBC,GAAA,GAAcC,GAAA,GAAc,SAAAC,GAAAxrD,GAAqC,QAAAmuB,IAAAnuB,EAAqB,iBAAyD,IAAAoT,GAAxCpT,IAAA8rB,QAAA,uBAAwCmH,WAAA,GAAyB,OAAA7f,GAAAk4C,IAAAl4C,GAAAm4C,GAAyB,IAAAvrD,EAAoBA,EAAa,SAAAyrD,GAAAzrD,EAAA0rD,GAAyE,OAAjC1rD,EAAAwrD,GAAAxrD,GAAiC,IAAAy1B,SAAA,0BAAAz1B,EAAA,wEAA+H0rD,GAAY,SAAAC,GAAAC,EAAAC,GAA8C,IAAAC,EAAAL,GAAAI,EAAA,SAAAnK,GAAgEhM,KAAA11C,KAAA6rD,EAAoBnW,KAAAgM,UAAqB,IAAAluB,EAAA,IAAAD,MAAAmuB,GAAAluB,WAAqCrF,IAAAqF,IAAsBkiB,KAAAliB,MAAAkiB,KAAAhqB,WAAA,KAAA8H,EAAA1H,QAAA,4BAAsT,OAA3OggC,EAAAzqD,UAAAlB,OAAAY,OAAA6qD,EAAAvqD,WAA4DyqD,EAAAzqD,UAAA6iD,YAAA4H,EAA4CA,EAAAzqD,UAAAqqB,SAAA,WAA0C,YAAAyC,IAAAunB,KAAAgM,QAA6BhM,KAAA11C,KAAsB01C,KAAA11C,KAAA,KAAA01C,KAAAgM,SAAsCoK,EAAkB,IAAAC,QAAA59B,EAA4B,SAAA69B,GAAAtK,GAAqC,UAAAqK,GAAArK,GAAiC,SAAAuK,GAAAC,EAAAC,EAAAC,GAA0J,SAAAC,EAAAC,GAAoC,IAAAC,EAAAH,EAAAE,GAAuDC,EAAAjxC,SAAA4wC,EAAA5wC,QAA6C0wC,GAAA,mCAAsD,QAAAvsD,EAAA,EAAYA,EAAAysD,EAAA5wC,SAAiB7b,EAAK+sD,GAAAN,EAAAzsD,GAAA8sD,EAAA9sD,IAAzSysD,EAAAlxC,QAAA,SAAA/Y,GAAgCopD,GAAAppD,GAAAkqD,IAAuT,IAAAG,EAAA,IAAA1qD,MAAAuqD,EAAA7wC,QAAoDmxC,EAAA,GAAyBC,EAAA,EAAiBP,EAAAnxC,QAAA,SAAA2xC,EAAAltD,GAAuC2rD,GAAA9pD,eAAAqrD,GAAuCL,EAAA7sD,GAAA2rD,GAAAuB,IAA2CF,EAAAtyB,KAAAwyB,GAA2BxB,GAAA7pD,eAAAqrD,KAA6CxB,GAAAwB,GAAA,IAA4BxB,GAAAwB,GAAAxyB,KAAA,WAA0CmyB,EAAA7sD,GAAA2rD,GAAAuB,KAAsCD,IAAaD,EAAAnxC,QAA0C+wC,EAAAC,QAAmC,IAAAG,EAAAnxC,QAAiC+wC,EAAAC,GAA6mD,SAAAM,GAAAt+B,GAAgC,OAAAA,GAAa,gBAAgB,gBAAgB,gBAAgB,gBAAgB,kBAAA+d,UAAA,sBAAA/d,IAAyD,SAAAu+B,KAA0D,IAAzB,IAAAC,EAAA,IAAAlrD,MAAA,KAAyBnC,EAAA,EAAYA,EAAA,MAAMA,EAAKqtD,EAAArtD,GAAAmyB,OAAAC,aAAApyB,GAAgCstD,GAAAD,EAAuB,IAAAC,QAAA5+B,EAA+B,SAAA6+B,GAAAp9B,GAAoD,IAArB,IAAAnE,EAAA,GAAW3rB,EAAA8vB,EAAU0B,EAAAxxB,IAAiB2rB,GAAAshC,GAAAz7B,EAAAxxB,MAAmC,OAAA2rB,EAAW,IAAAwhC,QAAA9+B,EAA2B,SAAA++B,GAAAxL,GAAoC,UAAAuL,GAAAvL,GAAgC,SAAA8K,GAAAW,EAAAC,EAAAC,GAA8E,GAApBA,KAAA,KAAoB,mBAAAD,GAA6C,UAAA/gB,UAAA,2DAA+E,IAAArsC,EAAAotD,EAAAptD,KAA+H,GAA9FmtD,GAAaD,GAAA,SAAAltD,EAAA,iDAAiForD,GAAA9pD,eAAA6rD,GAAA,CAA4C,GAAAE,EAAAC,6BAAyC,OAAYJ,GAAA,yBAAAltD,EAAA,WAAyI,GAA7EorD,GAAA+B,GAAAC,SAA4C/B,GAAA8B,GAAiChC,GAAA7pD,eAAA6rD,GAAA,CAAiD,IAAAt3B,EAAAs1B,GAAAgC,UAA4ChC,GAAAgC,GAAqCt3B,EAAA7a,QAAA,SAAAuyC,GAAgCA,OAAmkB,SAAAC,GAAAC,GAAsC,KAAA/X,gBAAAgY,IAAmC,SAAa,KAAAD,aAAAC,IAAoC,SAAuJ,IAA1I,IAAAC,EAAAjY,KAAAkY,GAAAC,QAAAC,gBAA8Ct7C,EAAAkjC,KAAAkY,GAAAh+B,IAAqBm+B,EAAAN,EAAAG,GAAAC,QAAAC,gBAAgDr7C,EAAAg7C,EAAAG,GAAAh+B,IAAuB+9B,EAAAK,WAA2Bx7C,EAAAm7C,EAAAM,OAAAz7C,GAA4Bm7C,IAAAK,UAA8B,KAAAD,EAAAC,WAA4Bv7C,EAAAs7C,EAAAE,OAAAx7C,GAA+Bs7C,IAAAC,UAAgC,OAAAL,IAAAI,GAAAv7C,IAAAC,EAA4C,SAAAy7C,GAAAhuD,GAAuC,OAAOib,MAAAjb,EAAAib,MAAAgzC,gBAAAjuD,EAAAiuD,gBAAAC,wBAAAluD,EAAAkuD,wBAAAx+B,IAAA1vB,EAAA0vB,IAAAi+B,QAAA3tD,EAAA2tD,QAAAQ,SAAAnuD,EAAAmuD,SAAAC,aAAApuD,EAAAouD,cAA+K,SAAAC,GAAApT,GAA6H+R,GAAA/R,EAA9CyS,GAAAC,QAAAC,gBAAA9tD,KAA8C,6BAAwE,SAAAwuD,KAAgF,GAAnD9Y,KAAAkY,GAAAh+B,KAAiB2+B,GAAA7Y,MAAkCA,KAAAkY,GAAAQ,wBAA2D,OAAvB1Y,KAAAkY,GAAAzyC,MAAAza,OAAA,EAAuBg1C,KAAiB,IAAA/yC,EAAAxC,OAAAY,OAAAZ,OAAAsuD,eAAA/Y,MAAA,CAAqDkY,GAAA,CAAIltD,MAAAwtD,GAAAxY,KAAAkY,OAAoG,OAAvDjrD,EAAAirD,GAAAzyC,MAAAza,OAAA,EAAwBiC,EAAAirD,GAAAO,iBAAA,EAA+BxrD,EAAc,SAAA+rD,GAAAC,GAA+B,IAAAf,EAAAe,EAAAf,GAAiBA,EAAAS,SAAgBT,EAAAU,aAAAM,cAAAhB,EAAAS,UAAgDT,EAAAC,QAAAC,gBAAAc,cAAAhB,EAAAh+B,KAAkD,SAAAi/B,KAA8BnZ,KAAAkY,GAAAh+B,KAAiB2+B,GAAA7Y,MAAkCA,KAAAkY,GAAAO,kBAAAzY,KAAAkY,GAAAQ,yBAA8DlB,GAAA,yCAA2DxX,KAAAkY,GAAAzyC,MAAAza,OAAA,EAAuB,IAAAg1C,KAAAkY,GAAAzyC,MAAAza,OAAkDguD,GAAAhZ,MAAoBA,KAAAkY,GAAAQ,0BAAqC1Y,KAAAkY,GAAAS,cAAAlgC,EAA2BunB,KAAAkY,GAAAh+B,SAAAzB,GAAuB,SAAA2gC,KAAiC,OAAApZ,KAAAkY,GAAAh+B,IAAmB,IAAAm/B,QAAA5gC,EAA4B6gC,GAAA,GAAqB,SAAAC,KAA+B,KAAAD,GAAA1zC,QAAA,CAA4B,IAAA6/B,EAAA6T,GAAA7Y,MAA4BgF,EAAAyS,GAAAO,iBAAA,EAA6BhT,EAAA,UAAiB,SAAA+T,KAAoV,OAAjTxZ,KAAAkY,GAAAh+B,KAAiB2+B,GAAA7Y,MAAkCA,KAAAkY,GAAAO,kBAAAzY,KAAAkY,GAAAQ,yBAA8DlB,GAAA,yCAA2D8B,GAAA70B,KAAAub,MAAyB,IAAAsZ,GAAA1zC,QAAAyzC,IAA4CA,GAAAE,IAAmCvZ,KAAAkY,GAAAO,iBAAA,EAA6BzY,KAAY,SAAAyZ,KAA4BzB,GAAArsD,UAAA,UAAAmsD,GAAyDE,GAAArsD,UAAA,MAAAmtD,GAAiDd,GAAArsD,UAAA,OAAAwtD,GAAmDnB,GAAArsD,UAAA,UAAAytD,GAAyDpB,GAAArsD,UAAA,YAAA6tD,GAA6D,SAAAxB,MAAwB,IAAA0B,GAAA,GAA0B,SAAAC,GAAAC,EAAAC,EAAAC,GAAyD,QAAArhC,IAAAmhC,EAAAC,GAAAE,cAAA,CAAgD,IAAAC,EAAAJ,EAAAC,GAA+BD,EAAAC,GAAA,WAA4Q,OAA9OD,EAAAC,GAAAE,cAAAnuD,eAAAirB,UAAAjR,SAAsE4xC,GAAA,aAAAsC,EAAA,iDAAAjjC,UAAAjR,OAAA,uBAAAg0C,EAAAC,GAAAE,cAAA,MAAwKH,EAAAC,GAAAE,cAAAljC,UAAAjR,QAAAwW,MAAA4jB,KAAAnpB,YAAiF+iC,EAAAC,GAAAE,cAAA,GAAmCH,EAAAC,GAAAE,cAAAC,EAAAC,UAAAD,GAA6D,SAAAE,GAAA5vD,EAAAU,EAAAmvD,GAAqDvlC,EAAAhpB,eAAAtB,UAAgCmuB,IAAA0hC,QAAA1hC,IAAA7D,EAAAtqB,GAAAyvD,oBAAAthC,IAAA7D,EAAAtqB,GAAAyvD,cAAAI,KAA2H3C,GAAA,gCAAAltD,EAAA,WAAkEqvD,GAAA/kC,EAAAtqB,KAAsCsqB,EAAAhpB,eAAAuuD,IAAwC3C,GAAA,uFAAA2C,EAAA,MAA4HvlC,EAAAtqB,GAAAyvD,cAAAI,GAAAnvD,IAAoD4pB,EAAAtqB,GAAAU,OAAmBytB,IAAA0hC,IAA6BvlC,EAAAtqB,GAAA6vD,iBAAyC,SAAAC,GAAA9vD,EAAAkkD,EAAA6L,EAAAnB,EAAAZ,EAAAgC,EAAA/B,EAAAgC,GAAmHva,KAAA11C,OAAe01C,KAAAwO,cAA6BxO,KAAAqa,oBAAyCra,KAAAkZ,gBAAiClZ,KAAAsY,YAAyBtY,KAAAsa,gBAAiCta,KAAAuY,SAAmBvY,KAAAua,WAAuBva,KAAAwa,qBAAA,GAA6B,SAAAC,GAAAvgC,EAAAwgC,EAAAC,GAAkD,KAAAD,IAAAC,GAA+BD,EAAAnC,QAAqBf,GAAA,gCAAAmD,EAAArwD,KAAA,wBAAAowD,EAAApwD,MAA2G4vB,EAAAwgC,EAAAnC,OAAAr+B,GAAyBwgC,IAAApC,UAA4B,OAAAp+B,EAAW,SAAA0gC,GAAAvF,EAAA4D,GAAiE,UAAAA,EAA2F,OAAzEjZ,KAAA6a,aAAqBrD,GAAA,uBAAAxX,KAAA11C,MAAoD,EAAS2uD,EAAAf,IAAeV,GAAA,gBAAAsD,GAAA7B,GAAA,UAAAjZ,KAAA11C,MAA4E2uD,EAAAf,GAAAh+B,KAAmBs9B,GAAA,mDAAAxX,KAAA11C,MAAgF,IAAAywD,EAAA9B,EAAAf,GAAAC,QAAAC,gBAAwH,OAAtEqC,GAAAxB,EAAAf,GAAAh+B,IAAA6gC,EAAA/a,KAAAoY,iBAAiF,SAAA4C,GAAA3F,EAAA4D,GAAsD,IAAA/+B,EAAQ,UAAA++B,EAA2F,OAAzEjZ,KAAA6a,aAAqBrD,GAAA,uBAAAxX,KAAA11C,MAAoD01C,KAAAib,gBAAwB/gC,EAAA8lB,KAAAkb,iBAA0B,OAAA7F,GAAuBA,EAAA5wB,KAAAub,KAAAkZ,cAAAh/B,GAAyCA,GAAgB,EAAU++B,EAAAf,IAAeV,GAAA,gBAAAsD,GAAA7B,GAAA,UAAAjZ,KAAA11C,MAA4E2uD,EAAAf,GAAAh+B,KAAmBs9B,GAAA,mDAAAxX,KAAA11C,OAAgF01C,KAAAmb,SAAAlC,EAAAf,GAAAC,QAAAgD,SAA6C3D,GAAA,oCAAAyB,EAAAf,GAAAU,aAAAK,EAAAf,GAAAU,aAAAtuD,KAAA2uD,EAAAf,GAAAC,QAAA7tD,MAAA,sBAAA01C,KAAA11C,MAAkK,IAAAywD,EAAA9B,EAAAf,GAAAC,QAAAC,gBAAoH,GAAlEl+B,EAAAugC,GAAAxB,EAAAf,GAAAh+B,IAAA6gC,EAAA/a,KAAAoY,iBAAkEpY,KAAAib,eAAgI,YAAxGxiC,IAAAwgC,EAAAf,GAAAS,UAAmCnB,GAAA,mDAAqExX,KAAAob,eAA2B,OAAAnC,EAAAf,GAAAU,eAAA5Y,KAAyC9lB,EAAA++B,EAAAf,GAAAS,SAA4BnB,GAAA,oCAAAyB,EAAAf,GAAAU,aAAAK,EAAAf,GAAAU,aAAAtuD,KAAA2uD,EAAAf,GAAAC,QAAA7tD,MAAA,sBAAA01C,KAAA11C,MAAkK,MAAM,OAAA4vB,EAAA++B,EAAAf,GAAAS,SAA8B,MAAM,UAAAM,EAAAf,GAAAU,eAAA5Y,KAAyC9lB,EAAA++B,EAAAf,GAAAS,aAAuB,CAAK,IAAA0C,EAAApC,EAAA,QAAmC/+B,EAAA8lB,KAAAsb,SAAAphC,EAAAqhC,GAAA,WAAmDF,EAAA,YAA6B,OAAAhG,GAAuBA,EAAA5wB,KAAAub,KAAAkZ,cAAAh/B,GAA0C,MAAM,QAAAs9B,GAAA,+BAA0D,OAAAt9B,EAAW,SAAAshC,GAAAnG,EAAA4D,GAAoE,UAAAA,EAA2F,OAAzEjZ,KAAA6a,aAAqBrD,GAAA,uBAAAxX,KAAA11C,MAAoD,EAAS2uD,EAAAf,IAAeV,GAAA,gBAAAsD,GAAA7B,GAAA,UAAAjZ,KAAA11C,MAA4E2uD,EAAAf,GAAAh+B,KAAmBs9B,GAAA,mDAAAxX,KAAA11C,MAAgF2uD,EAAAf,GAAAC,QAAAgD,SAA8B3D,GAAA,mCAAAyB,EAAAf,GAAAC,QAAA7tD,KAAA,sBAAA01C,KAAA11C,MAA6G,IAAAywD,EAAA9B,EAAAf,GAAAC,QAAAC,gBAAwH,OAAtEqC,GAAAxB,EAAAf,GAAAh+B,IAAA6gC,EAAA/a,KAAAoY,iBAAiF,SAAAqD,GAAAvhC,GAA8F,OAAnD8lB,KAAA0b,gBAAuBxhC,EAAA8lB,KAAA0b,cAAAxhC,IAA4BA,EAAW,SAAAyhC,GAAAzhC,GAA2C8lB,KAAAkZ,eAAuBlZ,KAAAkZ,cAAAh/B,GAAyB,SAAA0hC,GAAA3C,GAAgD,OAAAA,GAAkBA,EAAA,SAAoB,SAAA4C,GAAA3hC,EAAAwgC,EAAAC,GAAoD,GAAAD,IAAAC,EAA4B,OAAAzgC,EAAW,QAAAzB,IAAAkiC,EAAArC,UAAuC,YAAY,IAAAwD,EAAAD,GAAA3hC,EAAAwgC,EAAAC,EAAArC,WAA4D,cAAAwD,EAAc,KAAYnB,EAAAJ,SAAAuB,GAAiC,SAAAC,KAAqC,OAAAtxD,OAAAu3C,KAAAga,IAAAp2C,OAA+C,SAAAq2C,KAAqC,IAAAH,EAAA,GAAU,QAAAnxC,KAAAqxC,GAAkCA,GAAApwD,eAAA+e,IAA0CmxC,EAAAr3B,KAAAu3B,GAAArxC,IAAiC,OAAAmxC,EAAU,SAAAI,GAAAx2C,GAA8B2zC,GAAA3zC,EAAiB4zC,GAAA1zC,QAAAyzC,IAAwCA,GAAAE,IAAoC,SAAA4C,KAAuBvnC,EAAA,0BAAAmnC,GAA8DnnC,EAAA,0BAAAqnC,GAA8DrnC,EAAA,oBAAA2kC,GAAkD3kC,EAAA,iBAAAsnC,GAA4C,IAAAF,GAAA,GAA2B,SAAAI,GAAAC,EAAAniC,GAA2G,SAArEzB,IAAAyB,GAAoBs9B,GAAA,+BAAiD6E,EAAA/D,WAAwBp+B,EAAAmiC,EAAA9D,OAAAr+B,GAAuBmiC,IAAA/D,UAAwB,OAAAp+B,EAAW,SAAAoiC,GAAAD,EAAAniC,GAA2E,OAAjCA,EAAAkiC,GAAAC,EAAAniC,GAAiC8hC,GAAA9hC,GAAgC,SAAAqiC,GAAA5wD,EAAA6wD,GAAuV,OAA5SA,EAAArE,SAAAqE,EAAAtiC,KAAiCo8B,GAAA,8CAA+DkG,EAAA5D,iBAA0C4D,EAAA7D,UAAoErC,GAAA,oDAAuEkG,EAAA/2C,MAAA,CAAcza,MAAA,GAASP,OAAAY,OAAAM,EAAA,CAAgCusD,GAAA,CAAIltD,MAAAwxD,KAAgB,SAAAC,GAAAviC,GAA6C,IAAAwiC,EAAA1c,KAAA2c,WAAAziC,GAAoC,IAAAwiC,EAAqC,OAArB1c,KAAApa,WAAA1L,GAAqB,KAAY,IAAAw9B,EAAA4E,GAAAtc,KAAAoY,gBAAAsE,GAA6E,QAAAjkC,IAAAi/B,EAAA,CAAmC,OAAAA,EAAAQ,GAAAzyC,MAAAza,MAAkH,OAAxE0sD,EAAAQ,GAAAh+B,IAAAwiC,EAAqChF,EAAAQ,GAAAS,SAAAz+B,EAAmCw9B,EAAA,QAA0C,IAAAoE,EAAApE,EAAA,QAA0D,OAArB1X,KAAApa,WAAA1L,GAAqB4hC,EAAW,SAAAc,IAA6B,OAAA5c,KAAAib,eAAwBsB,GAAAvc,KAAAoY,gBAAAiC,kBAAA,CAA+DlC,QAAAnY,KAAA6c,YAAA3iC,IAAAwiC,EAAA9D,aAAA5Y,KAAA2Y,SAAAz+B,IAA8EqiC,GAAAvc,KAAAoY,gBAAAiC,kBAAA,CAA+DlC,QAAAnY,KAAA9lB,QAAwB,IAA0L4iC,EAA1LC,EAAA/c,KAAAoY,gBAAAkC,cAAAoC,GAA8DM,EAAAtD,GAAAqD,GAA2D,IAAAC,EAA6B,OAAAJ,EAAA1yD,KAAA81C,MAAgE8c,EAAjB9c,KAAAmb,QAAiB6B,EAAAC,iBAAqDD,EAAAE,YAA2C,IAAAC,EAAAtB,GAAAa,EAAA1c,KAAAoY,gBAAA0E,EAAA1E,iBAA+E,cAAA+E,EAAcP,EAAA1yD,KAAA81C,MAAoCA,KAAAib,eAAwBsB,GAAAO,EAAA1E,gBAAAiC,kBAAA,CAAiElC,QAAA2E,EAAA5iC,IAAAijC,EAAAvE,aAAA5Y,KAAA2Y,SAAAz+B,IAA4DqiC,GAAAO,EAAA1E,gBAAAiC,kBAAA,CAAiElC,QAAA2E,EAAA5iC,IAAAijC,IAAyB,SAAAC,KAAkCC,GAAA1xD,UAAAgxD,WAAAlB,GAAoE4B,GAAA1xD,UAAAi6B,WAAA+1B,GAAoE0B,GAAA1xD,UAAA,iBAAgD0xD,GAAA1xD,UAAA,qBAAA4pD,GAA+E8H,GAAA1xD,UAAA,aAAAiwD,GAA2EyB,GAAA1xD,UAAA,aAAA8wD,GAA2E,SAAAY,GAAA/yD,EAAA8tD,EAAAyC,EAAAM,EAAAF,EAAA4B,EAAAzB,EAAAM,EAAAR,EAAAI,EAAApC,GAAkKlZ,KAAA11C,OAAe01C,KAAAoY,kBAAqCpY,KAAA6a,cAA6B7a,KAAAmb,UAAqBnb,KAAAib,iBAAmCjb,KAAA6c,cAA6B7c,KAAAob,gBAAiCpb,KAAA0b,gBAAiC1b,KAAAkb,iBAAmClb,KAAAsb,WAAuBtb,KAAAkZ,gBAAiC+B,QAAAxiC,IAAA2/B,EAAAE,UAA6PtY,KAAA,WAAAgb,GAAlMG,GAAYnb,KAAA,WAAA4a,GAAuD5a,KAAAsd,mBAAA,OAAkCtd,KAAA,WAAAwb,GAA0Dxb,KAAAsd,mBAAA,MAAgF,SAAAC,GAAAjzD,EAAAU,EAAAmvD,GAAsDvlC,EAAAhpB,eAAAtB,IAAiCgsD,GAAA,4CAA0D79B,IAAA7D,EAAAtqB,GAAAyvD,oBAAAthC,IAAA0hC,EAAqEvlC,EAAAtqB,GAAAyvD,cAAAI,GAAAnvD,GAAoD4pB,EAAAtqB,GAAAU,EAAmB4pB,EAAAtqB,GAAA2vD,SAAAE,GAAoC,SAAAqD,GAAAC,EAAAC,GAAmd,IAAAC,EAAO,GAAlaF,EAAAnG,GAAAmG,QAAkahlC,IAAA7D,EAAA,kBAAA6oC,GAAoDE,EAAA/oC,EAAA,kBAAA6oC,GAAAC,QAAoD,uBAAAE,eAA6CD,EAAAC,eAAAF,OAA+B,CAAK,IAAAG,EAAAjpC,EAAA,eAAA6oC,QAA2ChlC,IAAAolC,QAA4EplC,KAAzDolC,EAAAjpC,EAAA,eAAA6oC,EAAArnC,QAAA,aAA4EohC,GAAA,qCAAAiG,GAAmEE,EAAlwB,SAAAG,GAA4C,IAAZ,IAAAC,EAAA,GAAYh0D,EAAA,EAAYA,EAAA0zD,EAAA73C,SAAmB7b,EAAKg0D,EAAAt5B,KAAA,IAAA16B,GAAiB,IAA8CisD,EAAA,2BAA9CyH,EAAA,IAAAC,EAA8C,IAAAK,EAAAxmC,KAAA,cAA8J,OAAjGy+B,GAAA,kCAAA+H,EAAAn4C,OAAA,SAAAm4C,EAAAxmC,KAAA,aAAoFy+B,GAAA,OAAa,IAAAj2B,SAAA,wBAAAi2B,EAAA,CAAA8H,EAAAJ,GAAqdM,CAAAH,GAAyI,MAApH,mBAAAF,GAA2BnG,GAAA,2CAAAiG,EAAA,KAAAC,GAAyFC,EAAU,IAAAM,QAAAxlC,EAA+B,SAAAylC,GAAA3xD,GAA2B,IAAA2tB,EAAAikC,GAAA5xD,GAA6BuvD,EAAAxE,GAAAp9B,GAAwC,OAAXkkC,GAAAlkC,GAAW4hC,EAAU,SAAAuC,GAAArS,EAAA5wB,GAA8C,IAAAkjC,EAAA,GAAoBC,EAAA,GAA6N,MAArBnjC,EAAA9V,QAA5L,SAAAk5C,EAAAjyD,GAAqBgyD,EAAAhyD,IAAsBmpD,GAAAnpD,KAAiCopD,GAAAppD,GAA2BopD,GAAAppD,GAAA+Y,QAAAk5C,IAA6CF,EAAA75B,KAAAl4B,GAAwBgyD,EAAAhyD,IAAA,MAAqC,IAAA0xD,GAAAjS,EAAA,KAAAsS,EAAA/d,IAAA2d,IAAA3mC,KAAA,SAA66E,SAAAknC,GAAAjQ,EAAAkQ,GAAwC,KAAAlQ,aAAAzuB,UAAuC,UAAA4W,UAAA,4CAAA6X,EAAA,4BAAwG,IAAAmQ,EAAA5I,GAAAvH,EAAAlkD,MAAA,oCAAsFq0D,EAAAhzD,UAAA6iD,EAAA7iD,UAAsC,IAAA85C,EAAA,IAAAkZ,EAAkB9zD,EAAA2jD,EAAApyB,MAAAqpB,EAAAiZ,GAA0C,OAAA7zD,aAAAJ,OAAAI,EAAA46C,EAAiC,SAAAmZ,GAAA9E,EAAA+E,EAAAC,EAAAC,EAAAC,GAAyF,IAAA/E,EAAA4E,EAAAj5C,OAA6Bq0C,EAAA,GAAezC,GAAA,kFAA8L,IAA1F,IAAAyH,EAAA,OAAAJ,EAAA,WAAAC,EAA2DI,GAAA,EAA+Bn1D,EAAA,EAAYA,EAAA80D,EAAAj5C,SAAkB7b,EAAK,UAAA80D,EAAA90D,SAAA0uB,IAAAomC,EAAA90D,GAAAuzD,mBAAA,CAAmE4B,GAAA,EAA0B,MAAO,IAAAC,EAAA,SAAAN,EAAA,GAAAv0D,KAAsC80D,EAAA,GAAgBC,EAAA,GAAqB,IAAAt1D,EAAA,EAAYA,EAAAkwD,EAAA,IAAalwD,EAAKq1D,IAAA,IAAAr1D,EAAA,eAAAA,EAAkCs1D,IAAA,IAAAt1D,EAAA,eAAAA,EAAA,QAA+C,IAAAu1D,EAAA,mBAAAxJ,GAAAgE,GAAA,IAAAsF,EAAA,kCAAuFnF,EAAA,uCAAiDH,EAAA,8DAAAG,EAAA,oBAA2IiF,IAAyBI,GAAA,2BAAyC,IAAAC,EAAAL,EAAA,qBAAwDM,EAAA,6EAAuFC,EAAA,CAAAjI,GAAAuH,EAAAC,EAAA5J,GAAAyJ,EAAA,GAAAA,EAAA,IAAkGI,IAAsBK,GAAA,yCAAAC,EAAA,cAA+E,IAAAx1D,EAAA,EAAYA,EAAAkwD,EAAA,IAAalwD,EAAKu1D,GAAA,UAAAv1D,EAAA,kBAAAA,EAAA,eAAAw1D,EAAA,QAAAx1D,EAAA,SAAqF80D,EAAA90D,EAAA,GAAAO,KAAA,KAA8Bk1D,EAAA/6B,KAAA,UAAA16B,GAAwB01D,EAAAh7B,KAAAo6B,EAAA90D,EAAA,IAAoO,GAA1Mk1D,IAAsBI,EAAA,aAAAA,EAAAz5C,OAAA,WAAAy5C,GAAyEC,IAAAH,EAAA,8BAAAE,EAAAz5C,OAAA,WAAAy5C,EAAA,OAA2GH,EAAyBI,GAAA,sCAAqD,IAAAv1D,EAAAk1D,EAAA,IAAgCl1D,EAAA80D,EAAAj5C,SAAkB7b,EAAA,CAAK,IAAA21D,EAAA,IAAA31D,EAAA,mBAAAA,EAAA,WAAoD,OAAA80D,EAAA90D,GAAAuzD,qBAA0CgC,GAAAI,EAAA,SAAAA,EAAA,SAA+Cb,EAAA90D,GAAAO,KAAA,KAA4Bk1D,EAAA/6B,KAAAi7B,EAAA,SAA8BD,EAAAh7B,KAAAo6B,EAAA90D,GAAAuzD,qBAAgP,OAAnM6B,IAAYG,GAAA,sDAA6EA,GAAA,MAAqBE,EAAA/6B,KAAA66B,GAA0Bb,GAAA1+B,SAAAy/B,GAAApjC,MAAA,KAAAqjC,GAAkF,SAAAE,GAAAl6C,EAAAm6C,GAA8D,IAAb,IAAAC,EAAA,GAAa91D,EAAA,EAAYA,EAAA0b,EAAQ1b,IAAK81D,EAAAp7B,KAAA1L,GAAA6mC,GAAA,GAAA71D,IAAwC,OAAA81D,EAAsnI,SAAAC,GAAAC,EAAAjB,EAAAhF,GAAgZ,OAA/ViG,aAAAt1D,QAA+B+sD,GAAAsC,EAAA,yBAAAiG,GAA4DA,aAAAjB,EAAA1G,gBAAA5J,aAA8DgJ,GAAAsC,EAAA,qCAAAiG,EAAAvR,YAAAlkD,MAAyFy1D,EAAA7H,GAAAh+B,KAAkBs9B,GAAA,yCAAAsC,EAAA,sBAA2FW,GAAAsF,EAAA7H,GAAAh+B,IAAA6lC,EAAA7H,GAAAC,QAAAC,gBAAA0G,EAAA1G,iBAAmqD,IAAA4H,GAAA,GAAuBC,GAAA,IAA0B,CAAEj1D,WAAAytB,GAAgB,CAAEztB,MAAA,MAAW,CAAEA,OAAA,GAAW,CAAEA,OAAA,IAAc,SAAAk1D,GAAAjH,GAAgCA,EAAA,QAAAgH,GAAAhH,GAAAxzB,WAAwDw6B,GAAAhH,QAAAxgC,EAAqCunC,GAAAv7B,KAAAw0B,IAA8B,SAAAkH,KAA2C,IAAZ,IAAA16C,EAAA,EAAY1b,EAAA,EAAYA,EAAAk2D,GAAAr6C,SAA4B7b,OAAK0uB,IAAAwnC,GAAAl2D,MAAsC0b,EAAS,OAAAA,EAAa,SAAA26C,KAA2B,QAAAr2D,EAAA,EAAYA,EAAAk2D,GAAAr6C,SAA4B7b,EAAK,QAAA0uB,IAAAwnC,GAAAl2D,GAAsC,OAAAk2D,GAAAl2D,GAA8B,YAAY,SAAAs2D,KAAsBzrC,EAAA,oBAAAurC,GAAkDvrC,EAAA,gBAAAwrC,GAA0C,SAAA7E,GAAAvwD,GAAiC,OAAAA,GAAc,UAAAytB,EAAgB,SAAU,UAAW,SAAU,OAAW,SAAU,OAAY,SAAU,QAAS,IAAAwgC,EAAA+G,GAAAp6C,OAAAo6C,GAAAvf,MAAAwf,GAAAr6C,OAAsI,OAApDq6C,GAAAhH,GAAA,CAA4BxzB,SAAA,EAAAz6B,SAAwBiuD,GAAiZ,SAAAqH,GAAAh2D,EAAA+1B,EAAAkgC,GAAqD,OAAAlgC,GAAc,uBAAAm1B,GAAgC,IAAAgL,EAAAD,EAAAlmC,EAAAuB,EAA6B,OAAAokB,KAAA,aAAAwgB,EAAAhL,KAA6C,uBAAAA,GAAgC,IAAAgL,EAAAD,EAAAjmC,EAAA2D,EAA+B,OAAA+hB,KAAA,aAAAwgB,EAAAhL,GAAA,KAAgD,uBAAAA,GAAgC,IAAAgL,EAAAD,EAAAxnC,EAAAmF,EAA+B,OAAA8hB,KAAA,aAAAwgB,EAAAhL,GAAA,KAAgD,kBAAA7e,UAAA,yBAAArsC,IAA6gB,SAAAm2D,GAAAhJ,EAAAqC,GAAkD,IAAA4G,EAAAhL,GAAA+B,GAA8H,YAA5Fh/B,IAAAioC,GAAqBlJ,GAAAsC,EAAA,qBAAAoE,GAAAzG,IAAuEiJ,EAA8Y,SAAA5F,GAAAjsD,GAAyB,UAAAA,EAAa,aAAa,IAAA5D,SAAA4D,EAAe,iBAAA5D,GAAA,UAAAA,GAAA,aAAAA,EAA8C4D,EAAAmnB,WAAyB,GAAAnnB,EAAY,SAAA8xD,GAAAr2D,EAAA+1B,GAA+C,OAAAA,GAAc,uBAAAm1B,GAAgC,OAAAxV,KAAA,aAAAnlB,EAAA26B,GAAA,KAAmD,uBAAAA,GAAgC,OAAAxV,KAAA,aAAAllB,EAAA06B,GAAA,KAAmD,kBAAA7e,UAAA,uBAAArsC,IAA0nC,SAAAs2D,GAAAt2D,EAAA+1B,EAAAkgC,GAAwD,OAAAlgC,GAAc,cAAAkgC,EAAA,SAAA/K,GAAyD,OAAAn7B,EAAAm7B,IAAsB,SAAAA,GAAqC,OAAA55B,EAAA45B,IAAwB,cAAA+K,EAAA,SAAA/K,GAA0D,OAAAl7B,EAAAk7B,GAAA,IAA0B,SAAAA,GAAsC,OAAAv3B,EAAAu3B,GAAA,IAA4B,cAAA+K,EAAA,SAAA/K,GAA0D,OAAAz8B,EAAAy8B,GAAA,IAA0B,SAAAA,GAAsC,OAAAt3B,EAAAs3B,GAAA,IAA4B,kBAAA7e,UAAA,yBAAArsC,IAA03K,SAAAu2D,GAAA5H,GAAyG,OAA1EA,GAAYzB,GAAA,oCAAAyB,GAA8DgH,GAAAhH,GAAAjuD,MAAqhB,IAAA81D,GAAA,GAAqB,SAAAC,GAAAC,GAAoC,IAAAC,EAAAH,GAAAE,GAAkC,YAAAvoC,IAAAwoC,EAAuB3J,GAAA0J,GAAsCC,EAA8a,SAAAC,KAA+BlnC,KAAQ,SAAAmnC,KAA4C,OAAAhsC,GAAA,oBAAAisC,UAAAnsC,GAAAC,IAAAgC,KAAA,aAAAA,KAAA,gBAAma,SAAAmqC,GAAAn2D,EAAAF,GAA0H,GAApEwmD,GAAA8P,SAAAC,WAAAr2D,EAAiCsmD,GAAA8P,SAAAE,YAAAx2D,GAAmCwmD,GAAA8P,SAAAhhC,KAA2B,SAAS,MAAAp1B,EAAYsmD,GAAA8P,SAAAG,UAAA,WAA4E,IAAAC,EAAA,EAAAt1D,KAAAW,IAAA,EAAAykD,GAAA8P,SAAAK,cAAA32D,EAAAk2D,MAA+FU,WAAApQ,GAAA8P,SAAAO,OAAAH,IAAuDlQ,GAAA8P,SAAAQ,OAAA,eAAkC,MAAA52D,EAAiBsmD,GAAA8P,SAAAG,UAAA,WAAqEjQ,GAAAuQ,sBAAAvQ,GAAA8P,SAAAO,SAAwDrQ,GAAA8P,SAAAQ,OAAA,WAA8B,MAAA52D,EAAA,CAAiB,YAAA82D,EAAA,CAAsC,IAAAC,EAAA,GAAqBC,EAAA,eAAkPC,iBAAA,UAAnM,SAAAvhB,GAAoDA,EAAAlqB,OAAAwrC,GAAAthB,EAAAlqB,KAAA1W,SAAAkiD,IAA8FthB,EAAAwhB,kBAAwBH,EAAA5hC,OAAA4hC,MAAyB,GAAqED,EAAA,SAAA1hC,GAA0D2hC,EAAAx9B,KAAAnE,GAAyBpL,QAA0BuD,IAAA7D,EAAA,gBAAAA,EAAA,kBAAkEA,EAAA,cAAA6P,KAAAnE,GAAmC+hC,YAAA,CAAariD,OAAAkiD,KAAqCG,YAAAH,EAAA,MAAmD1Q,GAAA8P,SAAAG,UAAA,WAA8EO,EAAAxQ,GAAA8P,SAAAO,SAAuCrQ,GAAA8P,SAAAQ,OAAA,YAAoC,SAAS,SAAAQ,GAAAhiC,EAAAiiC,EAAAC,EAAA78C,EAAA88C,GAAgY,IAAAC,EAA9S9tC,EAAA,iBAA6BuB,GAAAq7B,GAAA8P,SAAAhhC,KAAA,+LAA6NkxB,GAAA8P,SAAAhhC,OAA2BkxB,GAAA8P,SAAA37C,MAA+E+8C,OAA7B,IAAA/8C,EAA6B,WAAiCiP,EAAA,WAAA0L,EAAA3a,IAAsC,WAAiCiP,EAAA,UAAA0L,IAA4B,IAAAqiC,EAAAnR,GAAA8P,SAAAsB,yBAA21D,GAA9xDpR,GAAA8P,SAAAO,OAAA,WAA2D,IAAAhoC,EAAgB,GAAA23B,GAAA8P,SAAAuB,MAAAj9C,OAAA,GAAoC,IAAAqxB,EAAA4B,KAAAC,MAAqBgqB,EAAAtR,GAAA8P,SAAAuB,MAAAxiC,QAAqE,GAA1ByiC,EAAAxiC,KAAAwiC,EAAAn9C,KAA0B6rC,GAAA8P,SAAAyB,kBAAA,CAAuC,IAAAC,EAAAxR,GAAA8P,SAAAyB,kBAAiD1X,EAAA2X,EAAA,KAAAA,EAAA,EAAA52D,KAAAyV,MAAAmhD,GAA0DF,EAAAG,QAAoBzR,GAAA8P,SAAAyB,kBAAA1X,GAA6CA,GAAA,GAAamG,GAAA8P,SAAAyB,mBAAA,EAAAC,EAAA3X,GAAA,GAA4K,GAAnHlzB,QAAAC,IAAA,sBAAA0qC,EAAAx4D,KAAA,WAAAuuC,KAAAC,MAAA7B,GAAA,OAAmFua,GAAA8P,SAAA4B,eAAgCP,EAAAnR,GAAA8P,SAAAsB,yBAAA,OAAmEhB,WAAApQ,GAAA8P,SAAAO,OAAA,QAA6Cc,EAAAnR,GAAA8P,SAAAsB,2BAAmEpR,GAAA8P,SAAA6B,mBAAA3R,GAAA8P,SAAA6B,mBAAA,IAA4E,GAAA3R,GAAA8P,SAAAC,YAAA/P,GAAA8P,SAAAE,YAAA,GAAAhQ,GAAA8P,SAAA6B,mBAAA3R,GAAA8P,SAAAE,aAAA,EAAwIhQ,GAAA8P,SAAAG,aAAoC,GAAAjQ,GAAA8P,SAAAC,aAAwC/P,GAAA8P,SAAAK,cAAAT,MAAqD,YAAA1P,GAAA8P,SAAAQ,QAAAltC,EAAAwuC,MAAoD9qC,EAAA,4OAAgPk5B,GAAA8P,SAAAQ,OAAA,IAA2BtQ,GAAA8P,SAAA+B,QAAAX,GAA+CC,EAAAnR,GAAA8P,SAAAsB,2BAAmE,iBAAAU,SAAAC,OAAAD,IAAAC,MAAAC,mBAAAF,IAAAC,MAAAC,oBAA+FhS,GAAA8P,SAAAG,gBAA8BgB,IAAiBF,KAAA,EAAAlB,GAAA,MAAAkB,GAA0DlB,GAAA,KAA2C7P,GAAA8P,SAAAG,aAA6Be,EAAyB,4BAA6B,IAAAhR,GAAA,CAAa8P,SAAA,CAAUG,UAAA,KAAAK,OAAA,GAAAc,yBAAA,EAAAtiC,KAAA,KAAA3a,IAAA,EAAA47C,WAAA,EAAAC,YAAA,EAAA2B,mBAAA,EAAAN,MAAA,GAAAY,MAAA,WAA+IjS,GAAA8P,SAAAG,UAAA,KAAgCjQ,GAAA8P,SAAAsB,4BAA4Cc,OAAA,WAAqBlS,GAAA8P,SAAAsB,2BAA4C,IAAArB,EAAA/P,GAAA8P,SAAAC,WAA2CC,EAAAhQ,GAAA8P,SAAAE,YAA6ClhC,EAAAkxB,GAAA8P,SAAAhhC,KAA+BkxB,GAAA8P,SAAAhhC,KAAA,KAA2BgiC,GAAAhiC,EAAA,KAAAkxB,GAAA8P,SAAA37C,KAAA,GAAkE07C,GAAAE,EAAAC,GAAyDhQ,GAAA8P,SAAAG,aAA6ByB,aAAA,WAA2B,GAAAtuC,EAAA,WAAwB,IAAAo3B,EAAAp3B,EAAA,gCAAsDouC,EAAAxR,GAAA8P,SAAAyB,kBAAiDY,EAAAnS,GAAA8P,SAAAsC,iBAA+CZ,EAAcA,EAAAW,EAAuB/uC,EAAA,UAAAo3B,EAAA,MAAA2X,EAAAX,GAAA,IAAAW,EAAA,KAA6E/uC,EAAA,UAAAo3B,GAAmCp3B,EAAA,gBAA0ByuC,QAAA,SAAA/iC,GAA0B,IAAAzG,EAAA,CAAgB,GAAAjF,EAAA,YAA6D,QAAnCA,EAAA,cAAsD,OAAQ,IAAI0L,IAAO,MAAAvC,GAAS,GAAAA,aAAAxH,GAA4B,OAAqF,MAAzEwH,GAAA,iBAAAA,KAAAD,OAAAxF,EAAA,sBAAAyF,IAAAD,QAAyEC,EAASnJ,EAAA,cAAAA,EAAA,kBAAqDivC,cAAA,EAAAC,aAAA,EAAAC,8BAAA,GAAAC,QAAA,GAAAvsB,KAAA,WAA4J,GAAzD7iB,EAAA,iBAAAA,EAAA,oBAAyD48B,GAAAyS,QAAA,CAA0BzS,GAAAyS,SAAA,EAAqB,IAAI,IAAAC,KAAS1S,GAAA2S,oBAAA,EAAgC,MAAApmC,GAASyzB,GAAA2S,oBAAA,EAAiChsC,QAAAC,IAAA,oEAAgFo5B,GAAA4S,YAAA,oBAAAC,8BAAA,oBAAAC,oCAAA9S,GAAA2S,mBAAA,KAAAhsC,QAAAC,IAAA,2BAAsMo5B,GAAA+S,UAAA,oBAAAnvC,cAAAovC,IAAApvC,OAAAovC,IAAApvC,OAAAqvC,eAAAhsC,EAA8F7D,EAAA8vC,sBAAA,IAAAlT,GAAA+S,YAAoEpsC,QAAAC,IAAA,kHAA8HxD,EAAA8vC,iBAAA,GAA4B,IAAAC,EAAA,CAAmBC,UAAA,SAAAt6D,GAA8D,OAAAsqB,EAAA8vC,iBAAA,yBAAAG,KAAAv6D,KAAoEq6D,EAAA,gBAAAhT,EAAArnD,EAAA0tB,EAAAC,GAAiF,IAAAprB,EAAA,KAAW,GAAA2kD,GAAA2S,mBAA+B,KAAIt3D,EAAA,IAAAq3D,KAAA,CAAAvS,GAAA,CAAwBplD,KAAAilD,GAAAsT,YAAAx6D,MAAiCsuB,OAAA+4B,EAAA/rC,SAA8B/Y,EAAA,IAAAq3D,KAAA,KAAAhuC,WAAAy7B,GAAA17B,QAAA,CAAiD1pB,KAAAilD,GAAAsT,YAAAx6D,MAAkC,MAAAyzB,IAAjjgJ,SAAAgnC,EAAAhrC,GAAwBgrC,EAAAC,QAAAD,EAAAC,MAAA,IAAqCD,EAAAC,MAAAjrC,KAA0BgrC,EAAAC,MAAAjrC,GAAA,EAAuBzB,EAAAyB,IAA48/IgrC,CAAA,uCAAAhnC,EAAA,kCAAqF,IAAAlxB,EAAA,CAAO,IAAAo4D,EAAA,IAAAzT,GAAA4S,YAA+Ba,EAAAC,OAAA,IAAAhvC,WAAAy7B,GAAA17B,QAA8CppB,EAAAo4D,EAAAE,UAAe,IAAA3tC,EAAAg6B,GAAA+S,UAAAa,gBAAAv4D,GAA6Cw4D,EAAA,IAAAC,MAAkBD,EAAArtC,OAAA,WAAiC7B,EAAAkvC,EAAAE,SAAA,SAAAj7D,EAAA,yBAA2D,IAAAk7D,EAAAzuC,SAAA0uC,cAAA,UAA4CD,EAAApuD,MAAAiuD,EAAAjuD,MAAuBouD,EAAAnuD,OAAAguD,EAAAhuD,OAAyBmuD,EAAAE,WAAA,MAAgCC,UAAAN,EAAA,KAAuBzwC,EAAA,gBAAAtqB,GAAAk7D,EAAuChU,GAAA+S,UAAAqB,gBAAApuC,GAAuCQ,KAAA25B,IAA6B0T,EAAAptC,QAAA,SAAA2oB,GAAwCzoB,QAAAC,IAAA,SAAAZ,EAAA,yBAAkDS,QAAsBotC,EAAApuC,IAAAO,GAAa5C,EAAA,eAAA6P,KAAAkgC,GAA2C,IAAAkB,EAAA,CAAmBjB,UAAA,SAAAt6D,GAA8D,OAAAsqB,EAAAkxC,iBAAAx7D,EAAAmvB,QAAA,KAAiDssC,OAAA,EAAAC,OAAA,EAAAC,OAAA,IAA6BhN,OAAA,SAAAtH,EAAArnD,EAAA0tB,EAAAC,GAAiF,IAAAmqB,GAAA,EAAe,SAAAwP,EAAA2R,GAAuBnhB,IAAeA,GAAA,EAAUxtB,EAAA,gBAAAtqB,GAAAi5D,EAAsCvrC,KAAA25B,IAA4B,SAAAU,IAAgBjQ,IAAeA,GAAA,EAAUxtB,EAAA,gBAAAtqB,GAAA,IAAA47D,MAA0CjuC,QAAqB,IAAAu5B,GAAA2S,mBAAq/B,OAAA9R,IAAt9B,IAAI,IAAAxlD,EAAA,IAAAq3D,KAAA,CAAAvS,GAAA,CAA4BplD,KAAAilD,GAAAsT,YAAAx6D,KAAiC,MAAAyzB,GAAS,OAAAs0B,IAAc,IAAA76B,EAAAg6B,GAAA+S,UAAAa,gBAAAv4D,GAA6C02D,EAAA,IAAA2C,MAAoB3C,EAAApB,iBAAA,4BAAoDvQ,EAAA2R,KAAc,GAASA,EAAAtrC,QAAA,SAAA2oB,GAA4CwB,IAAejqB,QAAAC,IAAA,iDAAA9tB,EAAA,mCAAohBi5D,EAAAtsC,IAAA,gBAAA3sB,EAAAmvB,QAAA,cAA/a,SAAA/C,GAAyJ,IAAjI,IAAAyvC,EAAA,mEAAwFpwC,EAAA,GAAWqwC,EAAA,EAAeC,EAAA,EAAet8D,EAAA,EAAYA,EAAA2sB,EAAA9Q,OAAc7b,IAA8C,IAAzCq8D,KAAA,EAAA1vC,EAAA3sB,GAA6Bs8D,GAAA,EAAYA,GAAA,IAAmB,IAAAtqC,EAAAqqC,GAAAC,EAAA,KAAiCA,GAAA,EAAYtwC,GAAAowC,EAAApqC,GAAmI,OAAlH,GAAAsqC,GAAgBtwC,GAAAowC,GAAA,EAAAC,IAAA,GAA2BrwC,GAAAuwC,MAAa,GAAAD,IAAqBtwC,GAAAowC,GAAA,GAAAC,IAAA,GAA4BrwC,GAAvT,KAAgUA,EAAuDwwC,CAAA5U,GAA6BC,EAAA2R,KAAeA,EAAAtsC,IAAAO,EAAcg6B,GAAAgV,eAAA,WAAmC5U,EAAA2R,IAAc,OAA4B3uC,EAAA,eAAA6P,KAAAohC,GAAkT,IAAAL,EAAA5wC,EAAA,OAA4B4wC,IAAWA,EAAAiB,mBAAAjB,EAAA,oBAAAA,EAAA,uBAAAA,EAAA,0BAAAA,EAAA,mCAA4KA,EAAAkB,gBAAA3vC,SAAA,iBAAAA,SAAA,oBAAAA,SAAA,uBAAAA,SAAA,gCAAqKyuC,EAAAkB,gBAAAlB,EAAAkB,gBAAAn7D,KAAAwrB,UAA6DA,SAAAorC,iBAAA,oBAAAwE,GAAA,GAAuE5vC,SAAAorC,iBAAA,uBAAAwE,GAAA,GAA0E5vC,SAAAorC,iBAAA,0BAAAwE,GAAA,GAA6E5vC,SAAAorC,iBAAA,sBAAAwE,GAAA,GAAyE/xC,EAAA,oBAAiC4wC,EAAArD,iBAAA,iBAAAyE,IAA8CpV,GAAAsS,aAAAlvC,EAAA,OAAA6xC,qBAA8D7xC,EAAA,OAAA6xC,qBAAsCG,EAAA1mB,oBAAqB,IAA3qC,SAAAymB,IAA6BnV,GAAAsS,YAAA/sC,SAAA,qBAAAnC,EAAA,QAAAmC,SAAA,wBAAAnC,EAAA,QAAAmC,SAAA,2BAAAnC,EAAA,QAAAmC,SAAA,uBAAAnC,EAAA,SAAypCiyC,cAAA,SAAArB,EAAAsB,EAAAC,EAAAC,GAA8E,GAAAF,GAAAlyC,EAAAwuC,KAAAoC,GAAA5wC,EAAA4wC,OAAA,OAAA5wC,EAAAwuC,IAAiE,IAAAA,EAAQ6D,EAAkB,GAAAH,EAAA,CAAa,IAAAI,EAAA,CAAuBC,WAAA,EAAAC,OAAA,GAA6B,GAAAJ,EAA2B,QAAAK,KAAAL,EAA6CE,EAAAG,GAAAL,EAAAK,IAAgEJ,EAAAK,GAAAT,cAAArB,EAAA0B,MAA2E9D,EAAAkE,GAAA5B,WAAAuB,GAAAM,YAA6CnE,EAAAoC,EAAAE,WAAA,MAA4B,OAAAtC,GAAoB2D,IAAgBD,GAAA3wC,OAAA,IAAAoxC,GAAA,4FAA2I3yC,EAAAwuC,MAAe0D,GAAAQ,GAAAE,mBAAAP,GAAiDryC,EAAAkyC,WAAyBtV,GAAAuS,8BAAAz+C,QAAA,SAAA8a,GAAkEA,MAAcoxB,GAAA/Z,QAAe2rB,GAAvW,MAAkXqE,eAAA,SAAAjC,EAAAsB,EAAAC,KAAyDW,6BAAA,EAAAC,iBAAAlvC,EAAAmvC,kBAAAnvC,EAAAovC,kBAAA,SAAAF,EAAAC,EAAAE,GAAgJtW,GAAAmW,cAAgCnW,GAAAoW,eAAkCpW,GAAAsW,gBAA0B,IAAAtW,GAAAmW,cAAAnW,GAAAmW,aAAA,QAAqE,IAAAnW,GAAAoW,eAAApW,GAAAoW,cAAA,QAAwE,IAAApW,GAAAsW,WAAAtW,GAAAsW,SAAA,MAA+D,IAAAtC,EAAA5wC,EAAA,OAA4B,SAAAmzC,IAA4BvW,GAAAqS,cAAA,EAA2B,IAAAmE,EAAAxC,EAAAyC,YAAsClxC,SAAA,mBAAAA,SAAA,sBAAAA,SAAA,qBAAAA,SAAA,yBAAAA,SAAA,kCAAAixC,GAA0MxC,EAAA0C,eAAAnxC,SAAA,gBAAAA,SAAA,kBAAAA,SAAA,qBAAAA,SAAA,kBAAAA,SAAA,qCAAkMyuC,EAAA0C,eAAA1C,EAAA0C,eAAA38D,KAAAwrB,UAA2Dy6B,GAAAmW,aAAAnC,EAAAiB,qBAAmDjV,GAAAqS,cAAA,EAA0BrS,GAAAoW,aAAyBpW,GAAA2W,0BAAuC3W,GAAA4W,uBAAA5C,KAA6CwC,EAAAC,WAAAI,aAAA7C,EAAAwC,GAAgEA,EAAAC,WAAAK,YAAAN,GAAwDxW,GAAAoW,aAAyBpW,GAAA+W,wBAAqC/W,GAAA4W,uBAAA5C,IAAwC5wC,EAAA,cAAAA,EAAA,aAAA48B,GAAAqS,cAAuEjvC,EAAA,cAAAA,EAAA,aAAA48B,GAAAqS,cAAuErS,GAAAkW,8BAAyClW,GAAAkW,6BAAA,EAAyC3wC,SAAAorC,iBAAA,mBAAA4F,GAAA,GAAqEhxC,SAAAorC,iBAAA,sBAAA4F,GAAA,GAAwEhxC,SAAAorC,iBAAA,yBAAA4F,GAAA,GAA2EhxC,SAAAorC,iBAAA,qBAAA4F,GAAA,IAAuE,IAAAC,EAAAjxC,SAAA0uC,cAAA,OAAkDD,EAAAyC,WAAAI,aAAAL,EAAAxC,GAAuDwC,EAAAQ,YAAAhD,GAAoCwC,EAAAH,kBAAAG,EAAA,mBAAAA,EAAA,sBAAAA,EAAA,sBAAAA,EAAA,mCAAiNA,EAAA,wBAAAS,QAAA,uBAA4E,QAAAT,EAAA,mCAAiEA,EAAA,wBAAAS,QAAA,uBAA4E,MAAQX,EAAaE,EAAAH,kBAAA,CAAmCa,UAAAZ,IAA0BE,EAAAH,qBAAqCc,kBAAA,SAAAhB,EAAAC,EAAAE,GAA+S,OAA9OxvC,EAAA,6FAAiGk5B,GAAAmX,kBAAA,SAAAhB,EAAAC,EAAAE,GAAuE,OAAAtW,GAAAqW,kBAAAF,EAAAC,EAAAE,IAAsEtW,GAAAqW,kBAAAF,EAAAC,EAAAE,IAAoEc,QAAA,EAAAC,0BAAA,SAAAvoC,GAAsD,IAAAwY,EAAAD,KAAAC,MAAmB,OAAA0Y,GAAAoX,QAAwBpX,GAAAoX,QAAA9vB,EAAA,YAAgC,KAAAA,EAAA,GAAA0Y,GAAAoX,SAA8BpX,GAAAoX,SAAA,OAAyB,IAAAE,EAAA18D,KAAAW,IAAAykD,GAAAoX,QAAA9vB,EAAA,GAA0C8oB,WAAAthC,EAAAwoC,IAAuB/G,sBAAA,SAAAzhC,GAA6D,oBAAAlL,OAAgCo8B,GAAAqX,0BAAAvoC,IAA6ClL,OAAA2sC,wBAAkC3sC,OAAA2sC,sBAAA3sC,OAAA,uBAAAA,OAAA,0BAAAA,OAAA,6BAAAA,OAAA,yBAAAA,OAAA,wBAAAo8B,GAAAqX,2BAAgPzzC,OAAA2sC,sBAAAzhC,KAAoCyoC,aAAA,SAAAzoC,GAA8B,kBAAkB,IAAAzG,EAAA,OAAAyG,EAAAlE,MAAA,KAAAvF,aAA8CmyC,qBAAA,EAAAC,qBAAA,GAAAC,oBAAA,WAAmF1X,GAAAwX,qBAAA,GAAkCG,qBAAA,WAAoE,GAAjC3X,GAAAwX,qBAAA,EAAiCxX,GAAAyX,qBAAArjD,OAAA,GAA0C,IAAAua,EAAAqxB,GAAAyX,qBAA2CzX,GAAAyX,qBAAA,GAAgC9oC,EAAA7a,QAAA,SAAAgb,GAAkCA,QAAW8oC,0BAAA,SAAA9oC,GAA4C,OAAAkxB,GAAAuQ,sBAAA,WAAiDloC,IAAgB23B,GAAAwX,oBAAgC1oC,IAAYkxB,GAAAyX,qBAAAxkC,KAAAnE,OAA4CkmC,eAAA,SAAAlmC,EAAA+oC,GAAsE,OAA7Bz0C,EAAA,iBAA6BgtC,WAAA,WAA8B/nC,IAAgB23B,GAAAwX,oBAAgC1oC,IAAYkxB,GAAAyX,qBAAAxkC,KAAAnE,KAAyC+oC,IAAWC,gBAAA,SAAAhpC,EAAA+oC,GAAuE,OAA7Bz0C,EAAA,iBAA6B20C,YAAA,WAA+B1vC,GAAgB23B,GAAAwX,qBAAgC1oC,KAAQ+oC,IAAWvE,YAAA,SAAAx6D,GAA8B,OAAOk/D,IAAA,aAAAC,KAAA,aAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,YAAAC,IAAA,cAAkIx/D,EAAAmvB,OAAAnvB,EAAA6rC,YAAA,UAAuC4zB,aAAA,SAAAzpC,GAA+BlL,OAAA20C,eAAyB30C,OAAA20C,aAAAC,UAAA,cAAAA,UAAA,iBAA4E50C,OAAA20C,aAAAzpC,IAA0B2pC,aAAA,SAAArpB,GAAgC,OAAAA,EAAA,WAAAA,EAAA,cAAAA,EAAA,oBAA8EspB,aAAA,SAAAtpB,GAAgC,OAAAA,EAAA,WAAAA,EAAA,cAAAA,EAAA,oBAA8EupB,mBAAA,SAAAvpB,GAAsC,IAAAwpB,EAAA,EAAY,OAAAxpB,EAAAr0C,MAAmB,qBAAA69D,EAAAxpB,EAAAypB,OAAwC,MAAM,iBAAAD,EAAAxpB,EAAA0pB,WAAwC,MAAM,YAAAF,EAAAxpB,EAAA,OAAkC,MAAM,gDAAAA,EAAAr0C,KAA2D,OAAA69D,GAAaG,OAAA,EAAAC,OAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,QAAA,GAAgEC,YAAA,GAAeC,oBAAA,SAAAjqB,GAAsC,GAAA4Q,GAAAsS,YAAwB,aAAAljB,EAAAr0C,MAAA,iBAAAq0C,EAAoD4Q,GAAAiZ,eAAAjZ,GAAAkZ,eAAA,GAAqDlZ,GAAAiZ,eAAAjZ,GAAAyY,aAAArpB,GAAmD4Q,GAAAkZ,eAAAlZ,GAAA0Y,aAAAtpB,IAAmD,oBAAA0iB,KAA4B9R,GAAA+Y,OAAAjH,IAAAiH,OAAA/Y,GAAAiZ,eAAiDjZ,GAAAgZ,OAAAlH,IAAAkH,OAAAhZ,GAAAkZ,iBAAsDlZ,GAAA+Y,QAAA/Y,GAAAiZ,eAAuCjZ,GAAAgZ,QAAAhZ,GAAAkZ,oBAAwC,CAAK,IAAAI,EAAAl2C,EAAA,OAAAm2C,wBAAkDC,EAAAp2C,EAAA,OAAAxd,MAA8B2lB,EAAAnI,EAAA,OAAAvd,OAA+B4zD,OAAA,IAAA71C,OAAA61C,QAAA71C,OAAA61C,QAAA71C,OAAA81C,YAAkFC,OAAA,IAAA/1C,OAAA+1C,QAAA/1C,OAAA+1C,QAAA/1C,OAAAg2C,YAAkF,kBAAAxqB,EAAAr0C,MAAA,aAAAq0C,EAAAr0C,MAAA,cAAAq0C,EAAAr0C,KAAA,CAAiF,IAAA8+D,EAAAzqB,EAAAyqB,MAAsB,QAAA5yC,IAAA4yC,EAAsB,OAAO,IAAAC,EAAAD,EAAAE,OAAAN,EAAAH,EAAAhuD,MAA8C0uD,EAAAH,EAAAI,OAAAN,EAAAL,EAAA7tD,KAAsHyuD,EAAA,CAAY92D,EAArF02D,GAAAN,EAAAF,EAAA1zD,MAAqFvC,EAAjD22D,GAAAzuC,EAAA+tC,EAAAzzD,QAA0E,kBAAAupC,EAAAr0C,KAA8BilD,GAAAoZ,YAAAS,EAAAM,YAAAD,EAA6Cla,GAAAmZ,QAAAU,EAAAM,YAAAD,OAAyC,gBAAA9qB,EAAAr0C,MAAA,cAAAq0C,EAAAr0C,KAAA,CAA2D,IAAA44B,EAAAqsB,GAAAmZ,QAAAU,EAAAM,YAA2CxmC,MAAAumC,GAAqBla,GAAAoZ,YAAAS,EAAAM,YAAAxmC,EAA2CqsB,GAAAmZ,QAAAU,EAAAM,YAAAD,EAAyC,OAAO,IAAA92D,EAAAgsC,EAAA2qB,OAAAN,EAAAH,EAAAhuD,MAAsCjI,EAAA+rC,EAAA6qB,OAAAN,EAAAL,EAAA7tD,KAAqCrI,GAAAo2D,EAAAF,EAAA1zD,MAAoBvC,GAAAkoB,EAAA+tC,EAAAzzD,OAAqBm6C,GAAAiZ,eAAA71D,EAAA48C,GAAA+Y,OAAwC/Y,GAAAkZ,eAAA71D,EAAA28C,GAAAgZ,OAAwChZ,GAAA+Y,OAAA31D,EAAiB48C,GAAAgZ,OAAA31D,IAAkBk9C,UAAA,SAAAv6B,EAAAQ,EAAAC,EAAA2zC,GAAmD,IAAAC,EAAAD,EAAA,GAAAvqC,GAAA,MAAA7J,GAAuD5C,EAAA,UAAA4C,EAAA,SAAA0rB,GAA+C/sB,EAAA+sB,EAAA,sBAAA1rB,EAAA,8BAA2EQ,EAAA,IAAA9B,WAAAgtB,IAAoC2oB,GAAArqC,MAAgC,SAAAof,GAAmB,IAAA3oB,EAA2B,2BAAAT,EAAA,YAAfS,MAA8D4zC,GAAAtqC,MAA6BuqC,gBAAA,GAAAC,sBAAA,WAAuD,IAAAvG,EAAA5wC,EAAA,OAA4B48B,GAAAsa,gBAAAxmD,QAAA,SAAA0mD,GAAoDA,EAAAxG,EAAApuD,MAAAouD,EAAAnuD,WAAwC40D,cAAA,SAAA70D,EAAAC,EAAA60D,GAAkD,IAAA1G,EAAA5wC,EAAA,OAA4B48B,GAAA4W,uBAAA5C,EAAApuD,EAAAC,GAAoD60D,GAAA1a,GAAAua,yBAA8CI,cAAA,EAAAC,eAAA,EAAAjE,wBAAA,WAAuE,uBAAA7E,IAAA,CAA4B,IAAAxlB,EAAA5f,EAAAolC,IAAA+I,QAAA,GAAiCvuB,GAAA,QAAoB/kB,EAAAuqC,IAAA+I,QAAA,GAAAvuB,EAA4B0T,GAAA4W,uBAAAxzC,EAAA,QAAiD48B,GAAAua,yBAAgCxD,sBAAA,WAAoC,uBAAAjF,IAAA,CAA4B,IAAAxlB,EAAA5f,EAAAolC,IAAA+I,QAAA,GAAiCvuB,IAAA,QAAqB/kB,EAAAuqC,IAAA+I,QAAA,GAAAvuB,EAA4B0T,GAAA4W,uBAAAxzC,EAAA,QAAiD48B,GAAAua,yBAAgC3D,uBAAA,SAAA5C,EAAA8G,EAAAC,GAA2DD,GAAAC,GAAqB/G,EAAAgH,YAAAF,EAA2B9G,EAAAiH,aAAAF,IAAiCD,EAAA9G,EAAAgH,YAA2BD,EAAA/G,EAAAiH,cAA4B,IAAAl3D,EAAA+2D,EAAcI,EAAAH,EAA+M,GAAjM33C,EAAA,mBAAAA,EAAA,sBAA+Drf,EAAAm3D,EAAA93C,EAAA,kBAAoCrf,EAAAnJ,KAAA2V,MAAA2qD,EAAA93C,EAAA,mBAAiD83C,EAAAtgE,KAAA2V,MAAAxM,EAAAqf,EAAA,qBAA6CmC,SAAA,mBAAAA,SAAA,sBAAAA,SAAA,qBAAAA,SAAA,yBAAAA,SAAA,kCAAAyuC,EAAAyC,YAAA,oBAAAoE,OAAA,CAAwO,IAAAhzC,EAAAjtB,KAAA0V,IAAAuqD,OAAAj1D,MAAA7B,EAAA82D,OAAAh1D,OAAAq1D,GAAoDn3D,EAAAnJ,KAAA2V,MAAAxM,EAAA8jB,GAAuBqzC,EAAAtgE,KAAA2V,MAAA2qD,EAAArzC,GAAuBm4B,GAAAoW,cAAyBpC,EAAApuD,OAAA7B,IAAAiwD,EAAApuD,MAAA7B,GAAkCiwD,EAAAnuD,QAAAq1D,IAAAlH,EAAAnuD,OAAAq1D,QAAoC,IAAAlH,EAAAmH,QAAqCnH,EAAAmH,MAAAC,eAAA,SAAqCpH,EAAAmH,MAAAC,eAAA,aAA4CpH,EAAApuD,OAAAk1D,IAAA9G,EAAApuD,MAAAk1D,GAA8C9G,EAAAnuD,QAAAk1D,IAAA/G,EAAAnuD,OAAAk1D,QAAgD,IAAA/G,EAAAmH,QAAqCp3D,GAAA+2D,GAAAI,GAAAH,GAA2B/G,EAAAmH,MAAAE,YAAA,QAAAt3D,EAAA,kBAAqDiwD,EAAAmH,MAAAE,YAAA,SAAAH,EAAA,oBAA2DlH,EAAAmH,MAAAC,eAAA,SAAqCpH,EAAAmH,MAAAC,eAAA,cAAyCE,aAAA,GAAiBC,sBAAA,EAAAC,yBAAA,WAA8D,IAAA/T,EAAAzH,GAAAub,sBAAyE,OAAhCvb,GAAAub,wBAAgC9T,IAAqlB,IAAAqO,GAAA,CAAQ2F,QAAA,EAAAC,UAAA,EAAAC,QAAA,GAAAC,cAAA,GAAiDC,SAAA,GAAAC,aAAA,GAAAC,cAAA,GAAAC,SAAA,GAAAC,SAAA,GAAAC,QAAA,GAAAC,KAAA,GAAAC,SAAA,GAAAC,eAAA,KAAAC,kBAAA,GAA6IC,gBAAA,GAAAC,QAAA,GAAAC,SAAA,GAAAC,mBAAA,GAAAC,MAAA,GAAAC,mBAAA,KAAAC,eAAA,wBAAAC,aAAA,GAAwJC,YAAA,GAAeC,aAAA,GAAgBC,qBAAA,GAAAC,cAAA,EAAAC,gBAAA,EAAAl3B,KAAA,WAA4E6vB,GAAAsH,eAAA,IAAA3iE,aAAAq7D,GAAAuH,uBAA6D,QAAA9kE,EAAA,EAAYA,EAAAu9D,GAAAuH,sBAA2B9kE,IAAKu9D,GAAAwH,oBAAA/kE,GAAAu9D,GAAAsH,eAAAjzC,SAAA,EAAA5xB,EAAA,GAA4D,IAAAA,EAAA,EAAYA,EAAA,GAAKA,IAAKu9D,GAAAmH,qBAAAhqC,KAAA,IAAAv4B,MAAAnC,KAA4CglE,YAAA,SAAAC,GAA8C1H,GAAA4F,YAAkB5F,GAAA4F,UAAA8B,IAAwBC,SAAA,SAAAC,GAAgD,IAArB,IAAAn5C,EAAAuxC,GAAA2F,UAAqBljE,EAAAmlE,EAAAtpD,OAAuB7b,EAAAgsB,EAAMhsB,IAAKmlE,EAAAnlE,GAAA,KAAc,OAAAgsB,GAAW84C,sBAAA,IAAAD,eAAA,KAAAE,oBAAA,IAAAK,UAAA,SAAAC,EAAA3pD,EAAA4pD,EAAAzpD,GAAsI,IAAd,IAAA0pD,EAAA,GAAcvlE,EAAA,EAAYA,EAAA0b,IAAQ1b,EAAA,CAAK,IAAAwlE,EAAS,GAAA3pD,EAAA,CAAW,IAAAhM,EAAAmf,EAAAnT,EAAA,EAAA7b,GAAA,GAAwCwlE,EAAV31D,EAAA,EAAUoiB,EAAAjD,EAAAs2C,EAAA,EAAAtlE,GAAA,IAAmDiyB,EAAAjD,EAAAs2C,EAAA,EAAAtlE,GAAA,GAAA6P,QAAwD21D,EAAAvzC,EAAAjD,EAAAs2C,EAAA,EAAAtlE,GAAA,IAA8CulE,GAAAC,EAAa,OAAAD,GAAczI,cAAA,SAAArB,EAAAwB,GAAqW,IAAA5D,OAA5S,IAAA4D,EAAA,uBAAAA,EAAA,eAA6H,oBAAAwI,uBAAAxI,EAAA,eAAwFA,EAAA,eAA8CA,EAAA,gBAAiD,IAAAyI,EAAA,IAAkB,SAAAC,EAAA9uB,GAAuC6uB,EAAA7uB,EAAA+uB,eAAAF,EAAyC,IAAIjK,EAAArD,iBAAA,4BAAAuN,GAAA,GAAkF,IAAI,MAAA1I,EAAA,iBAAAA,EAAA,aAAyF5D,EAAAoC,EAAAE,WAAA,QAAAsB,IAAAxB,EAAAE,WAAA,qBAAAsB,OAAsH,OAAAA,EAAA,iBAAAA,EAAA,aAA0J,0CAAA4I,aAAA,IAAAC,aAAA,IAA5DzM,EAAAoC,EAAAE,WAAA,SAAAsB,IAAyI,QAAQxB,EAAAsK,oBAAA,4BAAAJ,GAAA,GAAqF,IAAAtM,EAAA,UAAkB,MAAArlC,GAA+F,OAAtF/wB,EAAA,6BAAAyiE,EAAA1xC,EAAAgyC,KAAAC,UAAAhJ,KAAsF,EAAS,OAAA5D,EAAiBkE,GAAA2I,gBAAA7M,EAAA4D,GAAjB,GAA2FiJ,gBAAA,SAAA7M,EAAA4D,GAAwD,IAAA/N,EAAAqO,GAAA2H,SAAA3H,GAAAsG,UAAoCsC,EAAA,CAAajX,SAAAkX,WAAAnJ,EAAAoJ,QAAApJ,EAAA,aAAAO,MAAAnE,GAA0G,SAAAiN,IAA4B,IAAAC,EAAAtG,UAAAuG,UAAA5tB,MAAA,4BAA8D,QAAA2tB,GAAA92C,SAAA82C,EAAA,OAAsX,OAAjVJ,EAAAM,0BAAAN,EAAAE,SAAA,SAAAC,UAAA,IAA2GjN,EAAAoC,SAAApC,EAAAoC,OAAAiL,YAAAP,GAA6C5I,GAAAsG,SAAA3U,GAAAiX,QAA4B,IAAAlJ,EAAA,2BAAAA,EAAA,4BAAkIM,GAAAoJ,eAAAR,GAA2BjX,GAAcuO,mBAAA,SAAAP,GAA8C,IAAAiJ,EAAA5I,GAAAsG,SAAA3G,GAAuC,QAAAiJ,IAAyB3I,GAAA3yC,EAAAwuC,IAAA8M,EAAA3I,MAA+BD,GAAAuG,eAAAqC,GAA0B,IAAYxK,WAAA,SAAAuB,GAAsC,OAAAK,GAAAsG,SAAA3G,IAAkC0J,cAAA,SAAA1J,GAAyCK,GAAAuG,iBAAAvG,GAAAsG,SAAA3G,KAAAK,GAAAuG,eAAA,MAAyE,iBAAA+C,mBAAAC,0BAAAvJ,GAAAsG,SAAA3G,GAAAM,MAAA/B,QAA0G8B,GAAAsG,SAAA3G,IAAAK,GAAAsG,SAAA3G,GAAAM,MAAA/B,SAAA8B,GAAAsG,SAAA3G,GAAAM,MAAA/B,OAAAiL,iBAAAh4C,GAAqI6uC,GAAAsG,SAAA3G,GAAA,MAAgCyJ,eAAA,SAAAR,GAA0E,GAAtCA,MAAA5I,GAAAuG,iBAAsCqC,EAAAY,mBAAA,CAAqCZ,EAAAY,oBAAA,EAAgC,IAAAvJ,EAAA2I,EAAA3I,MAA8F,GAAtE2I,EAAAa,iBAAAxJ,EAAAyJ,aAAAzJ,EAAA0J,oBAAsEf,EAAAE,QAAA,GAAsB,IAAAc,EAAA3J,EAAA4J,aAAA,0BAAoED,IAAuB3J,EAAA,6BAAA7mB,EAAA0wB,GAAsDF,EAAA,yBAAAxwB,EAAA0wB,IAAgE7J,EAAA,6BAAAr8D,EAAAmmE,EAAA5rD,EAAA6rD,GAAmEJ,EAAA,yBAAAhmE,EAAAmmE,EAAA5rD,EAAA6rD,IAA6E/J,EAAA,+BAAAr8D,EAAAua,EAAAlZ,EAAAglE,EAAAD,GAA4EJ,EAAA,2BAAAhmE,EAAAua,EAAAlZ,EAAAglE,EAAAD,KAAsF,IAAAE,EAAAjK,EAAA4J,aAAA,2BAAyDK,IAAWjK,EAAA,6BAAuC,OAAAiK,EAAA,wBAA0CjK,EAAA,2BAAAkK,GAA0CD,EAAA,qBAAAC,IAAsClK,EAAA,yBAAAkK,GAAwCD,EAAA,mBAAAC,IAAoClK,EAAA,uBAAAkK,GAAsC,OAAAD,EAAA,iBAAAC,KAAyC,IAAAC,EAAAnK,EAAA4J,aAAA,sBAA4DO,IAAmBnK,EAAA,qBAAA/7D,EAAAmmE,GAAuCD,EAAA,iBAAAlmE,EAAAmmE,KAA8CpK,EAAAqK,sBAAArK,EAAA4J,aAAA,4BAA2E,IAAAU,EAAA,qkBAAwmBC,EAAAvK,EAAAwK,yBAAwCD,KAAAlsD,OAAA,GAAwB2hD,EAAAwK,yBAAAzsD,QAAA,SAAA0sD,IAAsD,GAAAH,EAAAx6C,QAAA26C,IAAoDzK,EAAA4J,aAAAa,OAA6BC,qBAAA,SAAAC,GAA0C,IAAArmE,EAAAy7D,GAAA+F,SAAA6E,GAA2B5K,GAAAgH,aAAA4D,GAAA,CAA0BzE,SAAA,GAAW0E,iBAAA,EAAAC,oBAAA,EAAAC,2BAAA,GAA0M,IAAlI,IAAAC,EAAAhL,GAAAgH,aAAA4D,GAAoCK,EAAAD,EAAA7E,SAA2B+E,EAAAjL,GAAAkL,oBAAA5mE,EAAA07D,GAAAmL,iBAAmE3oE,EAAA,EAAYA,EAAAyoE,IAAczoE,EAAA,CAAK,IAAAuzB,EAAAiqC,GAAAoL,iBAAA9mE,EAAA9B,GAAkCO,EAAAgzB,EAAAhzB,KAAwF,GAAxEgoE,EAAAH,iBAAA/lE,KAAAW,IAAAulE,EAAAH,iBAAA7nE,EAAAsb,OAAA,IAAwE,IAAAtb,EAAA+sB,QAAA,IAAA/sB,EAAAsb,OAAA,IAAyC,IAAAgtD,EAAAtoE,EAAA6rC,YAAA,KAA6B7rC,IAAA+rB,MAAA,EAAAu8C,GAAsB,IAAAC,EAAAtL,GAAAuL,mBAAAjnE,EAAAvB,GAAyC,SAAAuoE,EAAA,CAAc,IAAAvxC,EAAAgmC,GAAA2H,SAAA3H,GAAAmG,UAAgC8E,EAAAjoE,GAAA,CAAAgzB,EAAA1E,KAAA0I,GAAyBgmC,GAAAmG,SAAAnsC,GAAAuxC,EAAoB,QAAAnoD,EAAA,EAAYA,EAAA4S,EAAA1E,OAASlO,EAAA,CAAK,IAAAlf,EAAAlB,EAAA,IAAAogB,EAAA,IAAqBmoD,EAAAtL,GAAAuL,mBAAAjnE,EAAAL,GAAkC81B,EAAAgmC,GAAA2H,SAAA3H,GAAAmG,UAA4BnG,GAAAmG,SAAAnsC,GAAAuxC,OAA4kQ,SAAAE,GAAA7nE,EAAAua,EAAAlZ,EAAAglE,GAA6DhK,GAAAyL,aAAA9nE,EAAAua,EAAAlZ,EAAAglE,GAAwwL,SAAA0B,GAAAC,EAAArnE,EAAAU,GAA0C,GAAAV,EAAA,CAAmC,IAAAkqB,OAAA0C,EAAkB,OAAAy6C,GAAc,WAAAn9C,EAAA,EAAiB,MAAM,WAAyE,YAAzE,YAAAxpB,GAAA,cAAAA,GAAoD+6D,GAAAyH,YAAA,OAA4B,sBAAAh5C,EAAA,EAA4B,MAAM,WAAiDA,EAAjDwxC,GAAAyJ,aAAA,OAAiDprD,OAAmB,MAAM,cAAA2hD,GAAA/B,OAAAiL,YAAAL,QAAA,EAAuE,YAArB9I,GAAAyH,YAAA,MAAoEh5C,EAAA,EAAxCwxC,GAAAwK,yBAAwCnsD,OAAkB,MAAM,yBAAA2hD,GAAA/B,OAAAiL,YAAAL,QAAA,EAAkF,YAArB9I,GAAAyH,YAAA,MAA4Bh5C,EAAA,OAAAm9C,EAAA,IAA2B,QAAAz6C,IAAA1C,EAAA,CAAoB,IAAA+f,EAAAyxB,GAAAyJ,aAAAkC,GAAqC,cAAAp9B,GAAsB,aAAA/f,EAAA+f,EAAwB,MAAM,cAAA/f,EAAA+f,EAAA,IAA6B,MAAM,aAAkC,YAAlCwxB,GAAAyH,YAAA,MAAyC,uBAAAj5B,EAA+B,OAAAo9B,GAAc,8GAA+Gn9C,EAAA,EAAM,MAAO,QAA8B,YAArBuxC,GAAAyH,YAAA,UAA8B,IAAAj5B,aAAA7pC,cAAA6pC,aAAA1W,aAAA0W,aAAA5W,YAAA4W,aAAA5pC,MAAA,CAA8H,QAAAnC,EAAA,EAAYA,EAAA+rC,EAAAlwB,SAAgB7b,EAAK,OAAAwC,GAAa,cAAAwsB,EAAAltB,EAAA,EAAA9B,GAAA,GAAA+rC,EAAA/rC,GAAyC,MAAM,YAAA8wB,EAAAhvB,EAAA,EAAA9B,GAAA,GAAA+rC,EAAA/rC,GAAwC,MAAM,cAAAswB,EAAAxuB,EAAA9B,GAAA,GAAA+rC,EAAA/rC,GAAA,IAA0C,MAAM,gDAAAwC,EAAsD,OAAO,KAAAupC,aAAAq9B,aAAAr9B,aAAAs9B,cAAAt9B,aAAAu9B,kBAAAv9B,aAAAw9B,mBAAAx9B,aAAAy9B,YAAAz9B,aAAA09B,cAAA19B,aAAA29B,WAAA39B,aAAA49B,wBAAA59B,aAAA69B,wBAAA79B,aAAA89B,cAA2Y,YAArBtM,GAAAyH,YAAA,MAAvBh5C,EAAA,EAAA+f,EAAAxrC,KAAmD,MAAM,QAA6B,YAA7Bg9D,GAAAyH,YAAA,OAAqC,OAAAxiE,GAAa,gBAAAguB,QAAA,CAAAxE,IAAA,GAAAyE,WAAAzE,GAAA0E,GAAAD,aAAA,EAAAA,WAAA,KAAAE,IAAAC,GAAAH,WAAA,gCAAAI,IAAAJ,4BAAA,wBAAAzB,EAAAltB,GAAA,GAAA0uB,QAAA,GAAAxB,EAAAltB,EAAA,MAAA0uB,QAAA,GAA4Q,MAAM,cAAAxB,EAAAltB,GAAA,GAAAkqB,EAA+B,MAAM,YAAA8E,EAAAhvB,GAAA,GAAAkqB,EAA8B,MAAM,cAAAsE,EAAAxuB,GAAA,GAAAkqB,EAAA,IAAkC,MAAM,gDAAAxpB,QAA7lE+6D,GAAAyH,YAAA,MAAgmG,SAAA8E,GAAA7zD,EAAA0gC,EAAAhqB,EAAAnqB,GAA2D,GAAAmqB,EAAA,CAAsC,IAAsDX,EAAtD+f,EAAAyxB,GAAA,oBAAAvnD,EAAA0gC,GAA8D,cAAA5K,GAAsB,cAAA/f,EAAA+f,EAAA,IAA6B,MAAM,aAAA/f,EAAA+f,EAAwB,MAAM,uBAAAA,EAA+B,OAAA91B,GAAe,sBAAA+V,EAAA,EAA4B,MAAM,QAA8B,YAArBuxC,GAAAyH,YAAA,UAA8B,MAAAj5B,aAAAq9B,aAAmF,YAArB7L,GAAAyH,YAAA,MAAvBh5C,EAAA,EAAA+f,EAAAxrC,KAAmD,MAAM,QAA6B,YAA7Bg9D,GAAAyH,YAAA,MAAoC,OAAAxiE,GAAa,gBAAAguB,QAAA,CAAAxE,IAAA,GAAAyE,WAAAzE,GAAA0E,GAAAD,aAAA,EAAAA,WAAA,KAAAE,IAAAC,GAAAH,WAAA,gCAAAI,IAAAJ,4BAAA,wBAAAzB,EAAArC,GAAA,GAAA6D,QAAA,GAAAxB,EAAArC,EAAA,MAAA6D,QAAA,GAAkR,MAAM,cAAAxB,EAAArC,GAAA,GAAAX,EAAkC,MAAM,YAAA8E,EAAAnE,GAAA,GAAAX,EAAiC,MAAM,cAAAsE,EAAA3D,GAAA,GAAAX,EAAA,IAAqC,MAAM,sEAAAxpB,QAA30B+6D,GAAAyH,YAAA,MAA67Q,SAAA+E,GAAA5B,EAAA/6C,EAAA48C,EAAAxnE,GAAiE,GAAAwnE,EAAA,CAAwC,IAAAr9C,EAAA6wC,GAAAyM,WAAA1M,GAAA+F,SAAA6E,GAAA5K,GAAAmG,SAAAt2C,IAAsE,oBAAAT,GAAA,kBAAAA,EAAkD,OAAAnqB,GAAa,cAAAwsB,EAAAg7C,GAAA,GAAAr9C,EAAqC,MAAM,YAAAmE,EAAAk5C,GAAA,GAAAr9C,EAAoC,MAAM,sEAAAnqB,OAAiF,QAAAxC,EAAA,EAAYA,EAAA2sB,EAAA9Q,OAAc7b,IAAK,OAAAwC,GAAa,cAAAwsB,EAAAg7C,EAAA,EAAAhqE,GAAA,GAAA2sB,EAAA3sB,GAA4C,MAAM,YAAA8wB,EAAAk5C,EAAA,EAAAhqE,GAAA,GAAA2sB,EAAA3sB,GAA2C,MAAM,sEAAAwC,QAAtd+6D,GAAAyH,YAAA,MAAi5B,SAAAkF,GAAAvzB,EAAAwzB,EAAAH,EAAAxnE,GAAiE,GAAAwnE,EAAA,CAAwC,IAAAr9C,EAAA6wC,GAAA4M,gBAAAzzB,EAAAwzB,GAA4C,UAAAA,EAAiBn7C,EAAAg7C,GAAA,GAAAr9C,EAAA,UAA+B,oBAAAA,GAAA,kBAAAA,EAAuD,OAAAnqB,GAAa,cAAAwsB,EAAAg7C,GAAA,GAAAr9C,EAAqC,MAAM,YAAAmE,EAAAk5C,GAAA,GAAAr9C,EAAoC,MAAM,qBAAAqC,EAAAg7C,GAAA,GAAA3nE,KAAAgoE,OAAA19C,GAAyD,MAAM,2EAAAnqB,OAAsF,QAAAxC,EAAA,EAAYA,EAAA2sB,EAAA9Q,OAAc7b,IAAK,OAAAwC,GAAa,cAAAwsB,EAAAg7C,EAAA,EAAAhqE,GAAA,GAAA2sB,EAAA3sB,GAA4C,MAAM,YAAA8wB,EAAAk5C,EAAA,EAAAhqE,GAAA,GAAA2sB,EAAA3sB,GAA2C,MAAM,qBAAAgvB,EAAAg7C,EAAA,EAAAhqE,GAAA,GAAAqC,KAAAgoE,OAAA19C,EAAA3sB,IAAgE,MAAM,2EAAAwC,QAA3nB+6D,GAAAyH,YAAA,MAA06G,SAAAsF,GAAAj9D,EAAAC,EAAAi9D,EAAAC,GAAmJ,IAArE3/D,EAAAC,EAAqE2/D,EAAAp9D,EAAAk9D,EAAoCG,GAAzG7/D,EAAyG4/D,EAAzG3/D,EAAyG0/D,EAAnEnoE,KAAAyV,OAAAjN,EAAAC,EAAA,GAAAA,MAAsI,OAAAwC,GAAA,KAAAA,EAAA,GAAAo9D,EAAAD,EAA0D,SAAAE,GAAAnoE,EAAAooE,EAAAv9D,EAAAC,EAAAu9D,EAAAC,GAAwF,IAAAP,EAAiBQ,EAAgB,OAAAH,GAAe,mDAAAG,EAAA,EAAiE,MAAM,gCAAAA,EAAA,EAA8C,MAAM,gCAAAA,EAAA,EAA8C,MAAM,gCAAAA,EAAA,EAA8C,MAAM,QAA6B,OAA7BxN,GAAAyH,YAAA,MAA6B,KAAY,OAAAxiE,GAAa,oBAAA+nE,EAAA,EAAAQ,EAA+C,MAAM,yCAAAR,EAAA,EAAAQ,EAAoE,MAAM,8BAAAR,EAAA,EAAAQ,EAAyD,MAAM,uDAAAR,EAAA,EAAsE,MAAM,iCAAAA,EAAA,EAAgD,MAAM,QAA6B,OAA7BhN,GAAAyH,YAAA,MAA6B,KAAY,IAAAgG,EAAAV,GAAAj9D,EAAAC,EAAAi9D,EAAAhN,GAAAqH,iBAAwF,OAAApiE,GAAa,iBAAA8tB,EAAAsB,SAAAi5C,IAAAG,GAAqD,iBAAAn5C,EAAAD,SAAAi5C,IAAAG,GAAsD,iBAAAz6C,EAAAqB,SAAAi5C,GAAA,EAAAA,EAAAG,GAAA,GAA4D,iBAAAh8C,EAAA4C,SAAAi5C,GAAA,EAAAA,EAAAG,GAAA,GAA4D,iBAAAl6C,EAAAc,SAAAi5C,GAAA,EAAAA,EAAAG,GAAA,GAA6D,wEAAA72C,EAAAvC,SAAAi5C,GAAA,EAAAA,EAAAG,GAAA,GAAoH,uEAAA92C,EAAAtC,SAAAi5C,GAAA,EAAAA,EAAAG,GAAA,GAAmH,QAA6B,OAA7BzN,GAAAyH,YAAA,MAA6B,MAAa,SAAAiG,GAAAzoE,GAA6C,OAAAA,GAAa,iBAAA8tB,EAAuB,iBAAAuB,EAAwB,iBAAAtB,EAAwB,uEAAA2D,EAA+E,iBAAAlF,EAAwB,wEAAAmF,EAAgF,iBAAArD,EAAyB,qBAAqB,SAAAo6C,GAAA1oE,GAA8C,OAAAA,GAAa,6BAA6B,mFAAmF,8FAA8F,kBAA88gC,IAAA2oE,GAAAt6C,GAA6B,SAAAu6C,GAAAvgE,GAAiC,WAANA,GAAA,GAAM,MAAAosB,GAAApsB,IAAA,UAAgK,SAAAwgE,GAAAxgE,GAA2B,OAAAxI,KAAAiD,IAAA,EAAAuF,GAA2F,IAAAygE,GAAA56C,GAA4B66C,GAAA36C,GAA8a,IAAA46C,GAAA,GAAqH,IAA26IhO,GAA36IiO,GAAA,EAAs3E,GAAvS/+B,GAAAiM,aAAgB/hB,GAAA8U,QAAA,WAA+B7gB,EAAA,UAAA6hB,GAAAgB,KAAA4O,aAAA5P,GAAAgB,SAA0D7W,GAAA6D,KAAA,WAA4BgS,GAAA6P,mBAAA,IAA8BzlB,GAAA4D,KAAA,WAA4BgS,GAAA3f,SAAa6J,GAAA8U,QAAA,WAA+B8B,GAAAE,SAAc5W,GAAA4D,KAAA,WAA4B8S,GAAAG,aAAkBviB,EAAA,CAAwB,IAAAqkB,GAAO7vC,EAAQ,GAAMi7C,GAAgBj7C,EAAQ,GAAQ64C,GAAAE,aAAoB2T,GAAAzhC,EAAA,cAAAqhC,GAAAp4B,MAAA,iBAAyEs5B,KAAwBI,GAAA3iC,EAAA,aAAAqhC,GAAAp4B,MAAA,gBAAsE47B,KAAmB2D,KAAyBjB,KAAc8B,GAAArpC,EAAA,iBAAAqhC,GAAAp4B,MAAA,oBAAkFwiC,KAAqCa,GAAxB/rC,EAAwB,WAA0D,IAAAlqB,EAAAqqB,EAAA,SAA0B,WAAArqB,EAAA,GAAAA,EAAA,QAA0B,oBAAAm2D,QAAsCA,QAA4B,iBAAAlqC,WAAA,gCAAAA,KAAA,gBAAqG,WAAgC,OAAAA,KAAA,mBAAsC,iBAAAu+C,aAAA,mBAAAA,YAAA,IAA+E,WAAgC,OAAAA,YAAA,OAAmC58B,KAAAC,IAA6BlkB,EAAA,2BAAA+yC,EAAAC,EAAAE,GAAiGxvC,EAAA,yFAA6F1D,EAAA,kBAAAA,EAAA,kBAAwD48B,GAAAmX,kBAAAhB,EAAAC,EAAAE,IAA8DlzC,EAAA,2BAAA+yC,EAAAC,EAAAE,GAAiGtW,GAAAqW,kBAAAF,EAAAC,EAAAE,IAA8DlzC,EAAA,+BAAA0L,GAA4EkxB,GAAAuQ,sBAAAzhC,IAAqC1L,EAAA,uBAAAxd,EAAAC,EAAA60D,GAA8E1a,GAAAya,cAAA70D,EAAAC,EAAA60D,IAA+Ct3C,EAAA,yBAAwD48B,GAAA8P,SAAAmC,SAA0B7uC,EAAA,0BAA0D48B,GAAA8P,SAAAoC,UAA2B9uC,EAAA,wBAAsD48B,GAAAuY,gBAAwBn1C,EAAA,uBAAA4wC,EAAAsB,EAAAC,EAAAC,GAA0G,OAAAxV,GAAAqV,cAAArB,EAAAsB,EAAAC,EAAAC,IAA4FM,GAAA7vB,OAAUze,GAAAL,EAAA,GAA8BwF,EAAAC,EAAAhF,EAAAP,GAA4EyF,EAAAlF,EAAjCiF,EAAAF,EAAA8B,IAAqElH,EAAAC,IAAA,GAAAsF,EAA8E,SAAAwb,GAAA47B,EAAAC,EAAA/vD,GAAwD,IAAAhM,EAAAgM,EAAA,EAAAA,EAAA8X,EAAAg4C,GAAA,EAAmDE,EAAA,IAAA1pE,MAAA0N,GAA2Bi8D,EAAA74C,EAAA04C,EAAAE,EAAA,EAAAA,EAAAhwD,QAAsH,OAA9C+vD,IAAAC,EAAAhwD,OAAAiwD,GAA8CD,EAAehhD,EAAA,mBAA6BA,EAAA,sBAA87TA,EAAAkhD,aAAA,GAAuBlhD,EAAAmhD,cAAA,CAAsB/7C,SAAA7D,SAAAgD,iBAAA68C,eAAhh4O,WAA0B,OAAA98C,IAAs/3O+8C,wBAA/q8O,WAAmCj8C,GAAA,kHAAAd,GAAA,uMAA4o8Og9C,UAA38T,SAAAx1B,EAAA/yC,GAA6B,IAAAwoE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,WAAA8rB,EAAA/yC,GAAsC,MAAAowB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAyyT0hD,WAAhxT,SAAA51B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAA0C,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAsmT2hD,SAA7kT,SAAA71B,GAAyB,IAAAy1B,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,UAAA8rB,GAAkC,MAAA3iB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAm7S4hD,UAA15S,SAAA91B,EAAA/yC,GAA6B,IAAAwoE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,WAAA8rB,EAAA/yC,GAAsC,MAAAowB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAwvS6hD,WAA/tS,SAAA/1B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAA0C,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAqjS8hD,YAA5hS,SAAAh2B,EAAA/yC,EAAAG,EAAAC,GAAqC,IAAAooE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,aAAA8rB,EAAA/yC,EAAAG,EAAAC,GAA8C,MAAAgwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA02R+hD,WAAj1R,SAAAj2B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAA0C,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAuqRgiD,YAA9oR,SAAAl2B,EAAA/yC,EAAAG,EAAAC,GAAqC,IAAAooE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,aAAA8rB,EAAA/yC,EAAAG,EAAAC,GAA8C,MAAAgwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA49QiiD,aAAn8Q,SAAAn2B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAyC,IAAA+kE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,cAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAkD,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAywQkiD,YAAhvQ,SAAAp2B,EAAA/yC,EAAAG,EAAAC,GAAqC,IAAAooE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,aAAA8rB,EAAA/yC,EAAAG,EAAAC,GAA8C,MAAAgwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8jQmiD,aAAriQ,SAAAr2B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAyC,IAAA+kE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,cAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAkD,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA22PoiD,cAAl1P,SAAAt2B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,GAA6C,IAAA8kE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,eAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,GAAsD,MAAA0sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAgpPqiD,eAAvnP,SAAAv2B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,GAAiD,IAAAq+D,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,gBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,GAA0D,MAAAimB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA66OsiD,gBAAp5O,SAAAx2B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,GAAqD,IAAAo+D,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,iBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,GAA8D,MAAAgmB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAksOuiD,YAAzqO,SAAAz2B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAwC,IAAA+kE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,aAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAiD,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAi/NwiD,WAAx9N,SAAA12B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAI,OAAAxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAA0C,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8yNyiD,SAArxN,SAAA32B,GAAyB,IAAAy1B,EAAAC,KAAmB,IAAIxhD,EAAA,UAAA8rB,GAA2B,MAAA3iB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAkoN0iD,UAAzmN,SAAA52B,EAAA/yC,GAA6B,IAAAwoE,EAAAC,KAAmB,IAAIxhD,EAAA,WAAA8rB,EAAA/yC,GAA+B,MAAAowB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA88M2iD,WAAr7M,SAAA72B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAIxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAAmC,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAkxM4iD,eAAzvM,SAAA92B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,GAAiD,IAAAq+D,EAAAC,KAAmB,IAAIxhD,EAAA,gBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,GAAmD,MAAAimB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAsjM6iD,UAA7hM,SAAA/2B,EAAA/yC,GAA6B,IAAAwoE,EAAAC,KAAmB,IAAIxhD,EAAA,WAAA8rB,EAAA/yC,GAA+B,MAAAowB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAk4L8iD,WAAz2L,SAAAh3B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAIxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAAmC,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAssL+iD,aAA7qL,SAAAj3B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAyC,IAAA+kE,EAAAC,KAAmB,IAAIxhD,EAAA,cAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAA2C,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA0/KgjD,WAAj+K,SAAAl3B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAIxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAAmC,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8zKijD,UAAryK,SAAAn3B,EAAA/yC,GAA6B,IAAAwoE,EAAAC,KAAmB,IAAIxhD,EAAA,WAAA8rB,EAAA/yC,GAA+B,MAAAowB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA0oKkjD,eAAjnK,SAAAp3B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,GAAiD,IAAAq+D,EAAAC,KAAmB,IAAIxhD,EAAA,gBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,GAAmD,MAAAimB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA86JmjD,WAAr5J,SAAAr3B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAIxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAAmC,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAkvJojD,YAAztJ,SAAAt3B,EAAA/yC,EAAAG,EAAAC,GAAqC,IAAAooE,EAAAC,KAAmB,IAAIxhD,EAAA,aAAA8rB,EAAA/yC,EAAAG,EAAAC,GAAuC,MAAAgwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8iJqjD,aAArhJ,SAAAv3B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAyC,IAAA+kE,EAAAC,KAAmB,IAAIxhD,EAAA,cAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAA2C,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAk2IsjD,cAAz0I,SAAAx3B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,GAA6C,IAAA8kE,EAAAC,KAAmB,IAAIxhD,EAAA,eAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,GAA+C,MAAA0sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8oIujD,WAArnI,SAAAz3B,EAAA/yC,EAAAG,GAAiC,IAAAqoE,EAAAC,KAAmB,IAAIxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,GAAmC,MAAAiwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAk9HwjD,iBAAz7H,SAAA13B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,GAAyD,IAAAm+D,EAAAC,KAAmB,IAAIxhD,EAAA,kBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,GAA2D,MAAA+lB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAsuHyjD,gBAA7sH,SAAA33B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,GAAqD,IAAAo+D,EAAAC,KAAmB,IAAIxhD,EAAA,iBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,GAAuD,MAAAgmB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAkgH0jD,YAAz+G,SAAA53B,EAAA/yC,EAAAG,EAAAC,GAAqC,IAAAooE,EAAAC,KAAmB,IAAIxhD,EAAA,aAAA8rB,EAAA/yC,EAAAG,EAAAC,GAAuC,MAAAgwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8zG2jD,aAAryG,SAAA73B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAyC,IAAA+kE,EAAAC,KAAmB,IAAIxhD,EAAA,cAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAA2C,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAknG4jD,cAAzlG,SAAA93B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,GAA6C,IAAA8kE,EAAAC,KAAmB,IAAIxhD,EAAA,eAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,GAA+C,MAAA0sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA85F6jD,aAAr4F,SAAA/3B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAyC,IAAA+kE,EAAAC,KAAmB,IAAIxhD,EAAA,cAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAA2C,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAktF8jD,YAAzrF,SAAAh4B,EAAA/yC,EAAAG,EAAAC,GAAqC,IAAAooE,EAAAC,KAAmB,IAAIxhD,EAAA,aAAA8rB,EAAA/yC,EAAAG,EAAAC,GAAuC,MAAAgwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8gF+jD,kBAAr/E,SAAAj4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,EAAAyI,GAA6D,IAAA01D,EAAAC,KAAmB,IAAIxhD,EAAA,mBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,EAAAyI,GAA+D,MAAAsd,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA0xEgkD,aAAjwE,SAAAl4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAyC,IAAA+kE,EAAAC,KAAmB,IAAIxhD,EAAA,cAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAA2C,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8kEikD,aAArjE,SAAAn4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAAyC,IAAA+kE,EAAAC,KAAmB,IAAIxhD,EAAA,cAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,GAA2C,MAAA2sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAk4DkkD,cAAz2D,SAAAp4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,GAA6C,IAAA8kE,EAAAC,KAAmB,IAAIxhD,EAAA,eAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,GAA+C,MAAA0sB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8qDmkD,eAArpD,SAAAr4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,GAAiD,IAAAq+D,EAAAC,KAAmB,IAAIxhD,EAAA,gBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,GAAmD,MAAAimB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAk9CokD,gBAAz7C,SAAAt4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,GAAqD,IAAAo+D,EAAAC,KAAmB,IAAIxhD,EAAA,iBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,GAAuD,MAAAgmB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8uCqkD,iBAArtC,SAAAv4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,GAAyD,IAAAm+D,EAAAC,KAAmB,IAAIxhD,EAAA,kBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,GAA2D,MAAA+lB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAkgCskD,kBAAz+B,SAAAx4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,EAAAyI,GAA6D,IAAA01D,EAAAC,KAAmB,IAAIxhD,EAAA,mBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,EAAAyI,GAA+D,MAAAsd,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAA8wBukD,mBAArvB,SAAAz4B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,EAAAyI,EAAA/M,GAAkE,IAAAyiE,EAAAC,KAAmB,IAAIxhD,EAAA,oBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,EAAAyI,EAAA/M,GAAoE,MAAAqqB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAghBwkD,oBAAvf,SAAA14B,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,EAAAyI,EAAA/M,EAAAC,GAAuE,IAAAwiE,EAAAC,KAAmB,IAAIxhD,EAAA,qBAAA8rB,EAAA/yC,EAAAG,EAAAC,EAAAqD,EAAAC,EAAAyG,EAAAC,EAAAC,EAAAyI,EAAA/M,EAAAC,GAAyE,MAAAoqB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAwQykD,WAA/O,SAAA34B,EAAA/yC,EAAAG,EAAAC,GAAoC,IAAAooE,EAAAC,KAAmB,IAAIxhD,EAAA,YAAA8rB,EAAA/yC,EAAAG,EAAAC,GAAsC,MAAAgwB,GAA0B,GAAjBs4C,GAAAF,GAAiB,iBAAAp4C,GAAA,YAAAA,EAAA,MAAAA,EAA8CnJ,EAAA,gBAAsEojC,eAAAc,qBAAAK,sBAAAK,2BAAA1B,yBAAAsB,yBAAAgB,mBAAAiD,qBAAAzB,kCAAAD,gCAAAc,kCAAAhB,gCAAAz2B,8BAAAs0C,6BAA5ipO,SAAAp/C,EAAAypC,EAAA4V,EAAAC,EAAAC,EAAAC,EAAAC,GAA6G,IAAAC,EAAA7gD,EAAAmB,GAAA,GAAsB2/C,EAAA9gD,EAAAmB,EAAA,MAAwB4/C,EAAA/gD,EAAA4qC,GAAA,GAA2BoW,EAAAhhD,EAAA4qC,EAAA,MAA6B,OAAAiW,IAAAE,GAAAD,IAAAE,GAAqBhhD,EAAAmB,GAAA,GAAAq/C,EAAwBxgD,EAAAmB,EAAA,MAAAs/C,EAA0B,IAAczgD,EAAA4qC,GAAA,GAAAiW,EAAuB7gD,EAAA4qC,EAAA,MAAAkW,EAAyB,IAAotoOG,mBAA56mO,SAAA9/C,GAAiC,IAAA8H,EAAAkD,GAAAG,MAAAnL,GAA2N,OAA5L8H,MAAAoD,SAAuBpD,EAAAoD,QAAA,EAAiBJ,GAAAC,sBAAgDjD,MAAA2D,UAAA,GAA4BT,GAAAE,OAAAX,KAAAvK,GAA4BgL,GAAAM,OAAAN,GAAAI,SAAApL,IAA4CA,GAAgrmO+/C,2BAAr2lO,SAAAA,IAAsC,IAAAC,EAAAh1C,GAAAC,KAA2B,IAAA+0C,EAAY,UAAAC,GAAA,MAA2B,IAAAn4C,EAAAkD,GAAAG,MAAA60C,GAAkCE,EAAAp4C,EAAAz1B,KAAyB,IAAA6tE,EAAgB,UAAAD,GAAA,GAAAD,GAAgC,IAAAG,EAAAnuE,MAAAP,UAAA0qB,MAAAnsB,KAAA2sB,WAAoDjC,EAAA,uBAAAwlD,GAAyDH,EAAAhkD,SAAAgkD,EAAAhkD,OAAAuF,GAAA,IAAmFzC,EAAAkhD,EAAAhkD,QAAA,GAAAikD,EAAoDA,EAAAD,EAAAhkD,OAAyC,QAAAlsB,EAAA,EAAYA,EAAAswE,EAAAz0D,OAAmB7b,IAAK,GAAAswE,EAAAtwE,IAAA6qB,EAAA,iBAAAylD,EAAAtwE,GAAAqwE,EAAAF,GAA2H,OAA9CA,EAAAnhD,EAAAmhD,GAAA,GAAyBl4C,EAAAuD,SAAA20C,EAAqB,GAAAC,GAAAE,EAAAtwE,IAAAmwE,GAAqE,OAAzBA,EAAAnhD,EAAAmhD,GAAA,GAAyB,GAAAC,GAAAC,GAAAF,IAAipkOI,oBAArqmO,WAA0C,MAAXzgD,GAAA,EAAW,iCAA2nmO0gD,sBAAxmkO,aAAwmkOC,mBAAtlmO,SAAAtgD,GAA0E,MAAzCgL,GAAAC,OAAqBD,GAAAC,KAAAjL,GAAoBA,EAAA,8JAA4gmO+a,eAAAwlC,cAA9lzJ,SAAAC,EAAAzmB,GAAsCxB,GAAAwB,UAAyB,IAAI,IAAAhc,EAAAwa,GAAA0B,kBAAAwmB,GAAAloB,GAAA7nD,MAAA6nD,GAAA7nD,OAAAkrC,EAAA2c,GAAA7nD,MAAAgzC,EAAA6U,GAAA7nD,MAAuI4a,EAAAm1D,EAAwJ,OAAlIlkC,GAAAwE,OAAAhD,EAAAzyB,EAAAo4B,GAAgC7kB,EAAA+c,GAAA,GAAAmC,EAAAyF,SAAkCzF,EAAA8U,UAAA,IAAAvnC,GAAA,IAAAo4B,IAAA3F,EAAA8U,SAAA,MAAgE,EAAS,MAAAhvB,GAA4E,YAAnE,IAAA0Y,IAAA1Y,aAAA0Y,GAAA4B,YAAAre,GAAA+D,IAAmEA,EAAAgpB,QAAuqyJ6zB,cAAvpyJ,SAAAF,EAAAzmB,GAAsCxB,GAAAwB,UAAyB,IAAI,IAAAhc,EAAAwa,GAAA0B,kBAAAL,EAAArB,GAAA7nD,MAAAmpD,EAAAtB,GAAA7nD,MAA+E,OAAA6nD,GAAAuB,SAAA/b,EAAA6b,EAAAC,GAA4C,MAAAh2B,GAA4E,YAAnE,IAAA0Y,IAAA1Y,aAAA0Y,GAAA4B,YAAAre,GAAA+D,IAAmEA,EAAAgpB,QAA64xJ8zB,cAA73xJ,SAAAH,EAAAzmB,GAAsCxB,GAAAwB,UAAyB,IAAI,IAAAhc,EAAAwa,GAAA0B,kBAAyD,OAAzD1B,GAAA7nD,OAAqE,OAA+B,OAAvB+a,EAAA8sC,GAAA7nD,OAAuB,GAAUm7B,GAAAuB,OAAwCmP,GAAA9e,KAAAsgB,EAAAtiB,KAAAsiB,EAAA6F,MAAA,EAAAn4B,GAAkD0zB,GAAqB,uBAAuB,cAAApB,EAAA6F,MAA2B,OAAQ,IAAAn4B,EAAA8sC,GAAA7nD,MAAyC,OAAlBqtC,EAAA6F,OAAAn4B,EAAkB,EAAU,gBAA6E,OAA5DA,EAAA8sC,GAAA7nD,MAAoC0vB,EAAA3U,EAAb,GAAa,KAAwB,EAAU,yCAAyC,sBAAAogB,GAAAuB,OAAyC,OAAuC,OAAvC2N,GAAAlP,GAAAuB,SAAuC,EAAS,QAAS,OAAAvB,GAAAuB,QAA4B,MAAAvJ,GAA4E,YAAnE,IAAA0Y,IAAA1Y,aAAA0Y,GAAA4B,YAAAre,GAAA+D,IAAmEA,EAAAgpB,QAAsqwJ+zB,YAAtpwJ,SAAAJ,EAAAzmB,GAAoCxB,GAAAwB,UAAyB,IAAI,IAAAhc,EAAAwa,GAAA0B,kBAAAr1B,EAAA2zB,GAAA7nD,MAAA6a,EAAAgtC,GAAA7nD,MAA8E,OAAA6rC,GAAAhgB,KAAAwhB,EAAA5d,EAAAyE,EAAArZ,GAAuC,MAAAsY,GAA4E,YAAnE,IAAA0Y,IAAA1Y,aAAA0Y,GAAA4B,YAAAre,GAAA+D,IAAmEA,EAAAgpB,QAAo5vJg0B,YAAp4vJ,SAAAL,EAAAzmB,GAAoCxB,GAAAwB,UAAyB,IAAI,IAAAhC,EAAAQ,GAAAyB,SAAApW,EAAA2U,GAAA7nD,MAAAM,EAAAunD,GAAA7nD,MAAgH,OAAxC6rC,GAAA9e,KAAAs6B,EAAAnU,EAAA5yC,GAAwCmuC,GAAiB,MAAAtb,GAA4E,YAAnE,IAAA0Y,IAAA1Y,aAAA0Y,GAAA4B,YAAAre,GAAA+D,IAAmEA,EAAAgpB,QAAsnvJi0B,aAAtmvJ,SAAAN,EAAAzmB,GAAqCxB,GAAAwB,UAAyB,IAAI,IAAAhc,EAAAwa,GAAA0B,kBAAA8mB,EAAAxoB,GAAA7nD,MAAwD,OAAAqwE,GAAW,sBAAuB,OAAAhjC,EAAAC,IAAyC,GAAzCnS,GAAA0B,OAAmD,kEAAmE,OAAAwQ,EAAAC,IAAyC,GAAzCnS,GAAA0B,OAAmD,WAAY,IAAAwQ,EAAAC,IAAA,OAAAnS,GAAA0B,OAAyC,IAAAyzC,EAAAzoB,GAAA7nD,MAA0C,OAAlBmuB,EAAAmiD,GAAA,KAAkB,EAAU,WAAY,OAAAjjC,EAAAC,KAAyCnS,GAAAuB,QAAzCvB,GAAA0B,OAAoE,WAAoC,OAAxByzC,EAAAzoB,GAAA7nD,MAAwB6rC,GAAA0W,MAAAlV,EAAAgjC,EAAAC,GAAiC,WAA+D,WAAY,OAAAjjC,EAAAC,IAAyC,GAAzCnS,GAAA0B,OAAmD,QAAAzN,GAAA,qBAAAihD,IAAwC,MAAAl9C,GAA4E,YAAnE,IAAA0Y,IAAA1Y,aAAA0Y,GAAA4B,YAAAre,GAAA+D,IAAmEA,EAAAgpB,QAAiztJo0B,YAAjytJ,SAAAT,EAAAzmB,GAAoCxB,GAAAwB,UAAyB,IAAI,IAAAhc,EAAAwa,GAAA0B,kBAAuD,OAAjB1d,GAAA8B,MAAAN,GAAiB,EAAS,MAAAla,GAA4E,YAAnE,IAAA0Y,IAAA1Y,aAAA0Y,GAAA4B,YAAAre,GAAA+D,IAAmEA,EAAAgpB,QAAoltJq0B,8BAAxwoJ,SAAAC,GAAqD,IAAAC,EAAAnmB,GAAAkmB,UAAyClmB,GAAAkmB,GAAwC,IAAAE,EAAAD,EAAAC,SAA0BC,EAAAD,EAAA31D,OAAmC61D,EAAAF,EAAAh7B,IAAA,SAAAm7B,GAA6C,OAAAA,EAAAC,mBAA4BrkC,OAAAikC,EAAAh7B,IAAA,SAAAm7B,GAAsC,OAAAA,EAAAE,sBAAkC1gB,EAAAogB,EAAApgB,eAAsChC,EAAAoiB,EAAApiB,cAAoC3C,GAAA,CAAA8kB,GAAAI,EAAA,SAAAA,GAAyjB,OAAveF,EAAAj2D,QAAA,SAAAo2D,EAAA3xE,GAAkC,IAAA4xE,EAAAF,EAAA1xE,GAAqCQ,EAAAmxE,EAAAnxE,OAAsBsxE,EAAAH,EAAAG,cAAoCD,EAAAH,EAAA1xE,EAAAyxE,GAAsDM,EAAAJ,EAAAI,OAAsBC,EAAAL,EAAAK,cAAoCL,EAAAjlD,KAAA,SAAAyD,GAAwB,OAAAyhD,EAAA,aAAApxE,EAAAsxE,EAAA3hD,KAAqEwhD,EAAA3iC,MAAA,SAAA7e,EAAA1vB,GAA2B,IAAA6qD,EAAA,GAAmBymB,EAAAC,EAAA7hD,EAAA0hD,EAAA,WAAAvmB,EAAA7qD,IAA0E4qD,GAAAC,MAAiC,EAAQ/qD,KAAAgxE,EAAAhxE,KAAA0xE,aAAA,SAAA9hD,GAA6E,IAAjC,IAAA4hC,EAAA,IAAA5vD,MAAAsvE,GAAiCzxE,EAAA,EAAYA,EAAAyxE,IAAiBzxE,EAAK+xD,EAAA/xD,GAAAwxE,EAAAxxE,GAAA0sB,KAAAyD,GAA+C,OAAnBg/B,EAAAh/B,GAAmB4hC,GAAUmgB,WAAA,SAAA5mB,EAAA7qD,GAAwC,GAAAgxE,IAAAhxE,EAAAob,OAA8B,UAAA+wB,UAAA,0CAAA2kC,EAAAhxE,KAAA,cAAAkxE,EAAA,YAAAhxE,EAAAob,QAAmJ,IAAzB,IAAAsU,EAAAghC,IAAyBnxD,EAAA,EAAYA,EAAAyxE,IAAiBzxE,EAAKwxE,EAAAxxE,GAAAgvC,MAAA7e,EAAA1vB,EAAAT,IAAuF,OAA3D,OAAAsrD,GAAuBA,EAAA5wB,KAAAy0B,EAAAh/B,GAAoCA,GAAWgiD,eAAA,EAAAC,qBAAA5mB,GAAA+H,mBAAApE,OAAoylJkjB,uBAA17iJ,SAAA3kB,EAAAntD,EAAAsuB,EAAAyjD,EAAAC,GAAwE,IAAAj8C,EAAA62B,GAAAt+B,GAA6Dk+B,GAAAW,EAAA,CAAsBntD,KAAlDA,EAAAgtD,GAAAhtD,GAAkD0xE,aAAA,SAAAO,GAAuC,QAAAA,GAAWN,WAAA,SAAA5mB,EAAA7qD,GAAwC,OAAAA,EAAA6xE,EAAAC,GAA8BJ,eAAA,EAAAC,qBAAA,SAAA3mB,GAA+D,IAAAgL,EAAS,OAAA5nC,EAAa4nC,EAAAnmC,OAAW,OAAAzB,EAAkB4nC,EAAAlmC,MAAY,QAAA1B,EAAmC,UAAA+d,UAAA,8BAAArsC,GAAjBk2D,EAAAznC,EAAyE,OAAAinB,KAAA,aAAAwgB,EAAAhL,GAAAn1B,KAAkDi9B,mBAAA,QAA45hJkf,wBAAnmnI,SAAA/kB,EAAAglB,EAAAC,EAAAC,EAAAC,EAAAtiB,EAAAuiB,EAAAtkB,EAAAukB,EAAAviB,EAAAjwD,EAAAyyE,EAAA7jB,GAA4N5uD,EAAAgtD,GAAAhtD,GAA4BgwD,EAAAkD,GAAAof,EAAAtiB,GAA4E/B,IAAWA,EAAAiF,GAAAqf,EAAAtkB,IAAuDgC,IAAaA,EAAAiD,GAAAsf,EAAAviB,IAA6DrB,EAAAsE,GAAAuf,EAAA7jB,GAAyE,IAAA8jB,EAAAlnB,GAAAxrD,GAAkD4vD,GAAA8iB,EAAA,WAAiD3e,GAAA,oBAAA/zD,EAAA,yBAAAqyE,MAA8FpmB,GAAA,CAAAkB,EAAAglB,EAAAC,GAAAC,EAAA,CAAAA,GAAA,YAAAp3B,GAA+I,IAAA+S,EAAc2kB,EAA3B13B,IAAA,GAAiG03B,EAApDN,GAAqBrkB,EAAA/S,EAAA6S,iBAA+BiC,kBAA+CrC,GAAArsD,UAAoC,IAAA6iD,EAAAuH,GAAAinB,EAAA,WAAkE,GAAAvyE,OAAAsuD,eAAA/Y,QAAAqa,EAAoD,UAAA9C,GAAA,0BAAAjtD,GAAuD,QAAAmuB,IAAA2/B,EAAA8kB,iBAAiD,UAAA3lB,GAAAjtD,EAAA,kCAA8D,IAAA0rD,EAAAoC,EAAA8kB,iBAAArmD,UAAAjR,QAA4D,QAAA6S,IAAAu9B,EAAqB,UAAAuB,GAAA,2BAAAjtD,EAAA,uCAAAusB,UAAAjR,OAAA,iBAAAnb,OAAAu3C,KAAAoW,EAAA8kB,kBAAAlnD,WAAA,yBAAkN,OAAAggC,EAAA55B,MAAA4jB,KAAAnpB,aAAqCwjC,EAAA5vD,OAAAY,OAAA4xE,EAAA,CAAmDzuB,YAAA,CAAaxjD,MAAAwjD,KAAqBA,EAAA7iD,UAAA0uD,EAAwC,IAAAjC,EAAA,IAAAgC,GAAA9vD,EAAAkkD,EAAA6L,EAAAnB,EAAAZ,EAAAgC,EAAA/B,EAAAgC,GAAkI4iB,EAAA,IAAA9f,GAAA/yD,EAAA8tD,GAAA,SAAoFglB,EAAA,IAAA/f,GAAA/yD,EAAA,IAAA8tD,GAAA,SAAuFilB,EAAA,IAAAhgB,GAAA/yD,EAAA,UAAA8tD,GAAA,SAAsP,OAArJsB,GAAAjC,GAAA,CAA6ByF,YAAAkgB,EAAAngB,iBAAAogB,GAAqE9f,GAAAyf,EAAAxuB,GAAmD,CAAA2uB,EAAAC,EAAAC,MAA+0iIC,uCAA/98H,SAAAC,EAAA1jB,EAAAI,EAAAujB,EAAAC,EAAAC,EAAAh4D,GAAiI,IAAAi4D,EAAAhe,GAAA1F,EAAAujB,GAA8D3jB,EAAAvC,GAAAuC,GAAwC6jB,EAAAlgB,GAAAigB,EAAAC,GAAgEnnB,GAAA,IAAAgnB,GAAA,SAAAze,GAA4F,IAAAhF,GAAvBgF,IAAA,IAAuBx0D,KAAA,IAAAuvD,EAA4C,SAAA+jB,IAA+Bvf,GAAA,eAAAvE,EAAA,wBAAA6jB,GAAoF,IAAA/jB,EAAAkF,EAAA1G,gBAAA5J,YAAuoB,YAAvlB/1B,IAAAmhC,EAAAC,IAAkC+jB,EAAA3jB,WAAA,EAAwCL,EAAAC,GAAA+jB,IAA2CjkB,GAAAC,EAAAC,EAAAC,GAAgDF,EAAAC,GAAAE,cAAAE,EAAA,GAAA2jB,GAAgErnB,GAAA,GAAAonB,EAAA,SAAA9e,GAAiE,IAAAgf,EAAA,CAAAhf,EAAA,SAAAvnB,OAAAunB,EAAAxoC,MAAA,IAAkEiK,EAAAs+B,GAAA9E,EAAA+jB,EAAA,KAAAH,EAAAh4D,GAAmO,YAAtJ+S,IAAAmhC,EAAAC,GAAAE,eAAgDz5B,EAAA25B,WAAA,EAAyBL,EAAAC,GAAAv5B,GAA4Bs5B,EAAAC,GAAAE,cAAAE,EAAA,GAAA35B,EAAiD,KAAY,MAAsz6Hw9C,oCAA1y6H,SAAAP,EAAAtjB,EAAAujB,EAAAC,EAAAM,EAAA7iB,GAA4H,IAAAyiB,EAAAhe,GAAA1F,EAAAujB,GAA8DO,EAAAvgB,GAAAigB,EAAAM,GAA0DxnB,GAAA,IAAAgnB,GAAA,SAAAze,GAA4F,IAAAhF,EAAA,gBAAvBgF,IAAA,IAAuBx0D,KAAqJ,QAAzGmuB,IAAAqmC,EAAA1G,gBAAA8kB,mBAA2Dpe,EAAA1G,gBAAA8kB,iBAAA,SAA8CzkD,IAAAqmC,EAAA1G,gBAAA8kB,iBAAAjjB,EAAA,GAAuE,UAAA1C,GAAA,+EAAA0C,EAAA,mBAAA6E,EAAAx0D,KAAA,uGAAw9B,OAAhuBw0D,EAAA1G,gBAAA8kB,iBAAAjjB,EAAA,cAAqFoE,GAAA,oBAAAS,EAAAx0D,KAAA,wBAAAqzE,IAA+FpnB,GAAA,GAAAonB,EAAA,SAAA9e,GAAgiB,OAA/dC,EAAA1G,gBAAA8kB,iBAAAjjB,EAAA,cAAmFpjC,UAAAjR,SAAAq0C,EAAA,GAAkCzC,GAAAsC,EAAA,gBAAAjjC,UAAAjR,OAAA,yBAAAq0C,EAAA,IAAmG,IAAA5E,EAAA,GAAmB0I,EAAA,IAAA7xD,MAAA+tD,GAA6B8D,EAAA,GAAA7C,EAAuB,QAAAnxD,EAAA,EAAYA,EAAAkwD,IAAWlwD,EAAKg0D,EAAAh0D,GAAA80D,EAAA90D,GAAA,WAAAsrD,EAAAx+B,UAAA9sB,EAAA,IAA8D,IAAAmwB,EAAA6jD,EAAA3hD,MAAA,KAAA2hC,GAA6D,OAA5B3I,GAAAC,GAA4BwJ,EAAA,gBAAA3kC,IAAyC,KAAY,MAAsy3H8jD,iCAA1x3H,SAAAT,EAAA1jB,EAAAI,EAAAujB,EAAAC,EAAAC,EAAAxN,EAAA+N,GAA8I,IAAAN,EAAAhe,GAAA1F,EAAAujB,GAA8D3jB,EAAAvC,GAAAuC,GAAwC6jB,EAAAlgB,GAAAigB,EAAAC,GAAgEnnB,GAAA,IAAAgnB,GAAA,SAAAze,GAA4F,IAAAhF,GAAvBgF,IAAA,IAAuBx0D,KAAA,IAAAuvD,EAA8H,SAAA+jB,IAA+Bvf,GAAA,eAAAvE,EAAA,wBAAA6jB,GAAjHM,GAAkBnf,EAAA1G,gBAAAoC,qBAAA/1B,KAAAo1B,GAAmL,IAAAD,EAAAkF,EAAA1G,gBAAAiC,kBAAsDyH,EAAAlI,EAAAC,GAAiuB,YAApsBphC,IAAAqpC,QAAArpC,IAAAqpC,EAAA/H,eAAA+H,EAAAoc,YAAApf,EAAAx0D,MAAAw3D,EAAA7H,aAAA,GAA0H2jB,EAAA3jB,WAAA,EAAwC2jB,EAAAM,UAAApf,EAAAx0D,KAA6CsvD,EAAAC,GAAA+jB,IAA2CjkB,GAAAC,EAAAC,EAAAC,GAAgDF,EAAAC,GAAAE,cAAAE,EAAA,GAAA2jB,GAAgErnB,GAAA,GAAAonB,EAAA,SAAA9e,GAAiE,IAAAsf,EAAAvf,GAAA9E,EAAA+E,EAAAC,EAAA4e,EAAAxN,GAA6Q,YAApLz3C,IAAAmhC,EAAAC,GAAAE,eAAgDokB,EAAAlkB,WAAA,EAAmCL,EAAAC,GAAAskB,GAAsCvkB,EAAAC,GAAAE,cAAAE,EAAA,GAAAkkB,EAA2D,KAAY,MAAk40HC,iCAAx4zH,SAAAtf,EAAAuf,EAAA1C,EAAA2C,EAAA/zE,EAAAsxE,EAAAD,EAAA2C,EAAAzC,EAAAC,GAA6KsC,EAAA/mB,GAAA+mB,GAAsC9zE,EAAAizD,GAAA8gB,EAAA/zE,GAAuDgsD,GAAA,IAAAuI,GAAA,SAAAA,GAAyF,IAAAhF,GAAvBgF,IAAA,IAAuBx0D,KAAA,IAAA+zE,EAA2CG,EAAA,CAAU5zE,IAAA,WAAgByzD,GAAA,iBAAAvE,EAAA,yBAAA6hB,EAAAC,KAAgHjxE,YAAA,EAAA8zE,cAAA,GAAiiC,OAAj/BD,EAAA/wE,IAAXquE,EAAW,WAAqBzd,GAAA,iBAAAvE,EAAA,yBAAA6hB,EAAAC,KAAuH,SAAA/sE,GAAsB2oD,GAAAsC,EAAA,6BAA0DrvD,OAAAC,eAAAo0D,EAAA1G,gBAAAiC,kBAAAgkB,EAAAG,GAAkFjoB,GAAA,GAAAulB,EAAA,CAAAH,EAAAC,GAAA,CAAAD,GAAA,SAAAvgD,GAAkH,IAAAugD,EAAAvgD,EAAA,GAA8BojD,EAAA,CAAU5zE,IAAA,WAAgB,IAAAsvB,EAAA4lC,GAAA9f,KAAA8e,EAAAhF,EAAA,WAAyD,OAAA6hB,EAAA,aAAApxE,EAAAsxE,EAAA3hD,KAAmEvvB,YAAA,GAAmB,GAAAmxE,EAAA,CAAWA,EAAAte,GAAA+gB,EAAAzC,GAAuD,IAAAF,EAAAxgD,EAAA,GAAgCojD,EAAA/wE,IAAA,SAAAoB,GAAsB,IAAAqrB,EAAA4lC,GAAA9f,KAAA8e,EAAAhF,EAAA,WAAyDzE,EAAA,GAAmBymB,EAAAC,EAAA7hD,EAAA0hD,EAAA,WAAAvmB,EAAAxmD,IAA0EumD,GAAAC,IAAgH,OAAlF5qD,OAAAC,eAAAo0D,EAAA1G,gBAAAiC,kBAAAgkB,EAAAG,GAAkF,KAAY,MAA+0wHE,wBAAr3uH,SAAAjnB,EAAAntD,GAA2EwsD,GAAAW,EAAA,CAAsBntD,KAAlDA,EAAAgtD,GAAAhtD,GAAkD0xE,aAAA,SAAA/iB,GAA2C,IAAA6C,EAAAmE,GAAAhH,GAAAjuD,MAA+D,OAAvBk1D,GAAAjH,GAAuB6C,GAAUmgB,WAAA,SAAA5mB,EAAArqD,GAA4C,OAAAuwD,GAAAvwD,IAA+BkxE,eAAA,EAAAC,qBAAA5mB,GAAA+H,mBAAA,QAAqluHqhB,uBAA7itH,SAAAlnB,EAAAntD,EAAAsuB,EAAAgmD,GAA4D,IAAAv+C,EAAA62B,GAAAt+B,GAA6D,SAAAimD,KAA5Bv0E,EAAAgtD,GAAAhtD,GAA6Cu0E,EAAAC,OAAA,GAAehoB,GAAAW,EAAA,CAAsBntD,OAAAkkD,YAAAqwB,EAAA7C,aAAA,SAAA5xE,GAAuD,OAAA41C,KAAAwO,YAAAswB,OAAA10E,IAAkC6xE,WAAA,SAAA5mB,EAAAjrD,GAAwC,OAAAA,EAAAY,OAAekxE,eAAA,EAAAC,qBAAA7b,GAAAh2D,EAAA+1B,EAAAu+C,GAAAthB,mBAAA,OAAoHpD,GAAA5vD,EAAAu0E,IAA0nsHE,6BAAh6rH,SAAAC,EAAA10E,EAAA20E,GAAkE,IAAAC,EAAAze,GAAAue,EAAA,QAAuD10E,EAAAgtD,GAAAhtD,GAA4B,IAAA60E,EAAAD,EAAA1wB,YAA8B4wB,EAAA30E,OAAAY,OAAA6zE,EAAA1wB,YAAA7iD,UAAA,CAAwDX,MAAA,CAAOA,MAAAi0E,GAAgBzwB,YAAA,CAAcxjD,MAAA+qD,GAAAmpB,EAAA50E,KAAA,IAAAA,EAAA,iBAAoE60E,EAAAL,OAAAG,GAAAG,EAA6BD,EAAA70E,GAAA80E,GAA+irHC,wBAA5mqH,SAAA5nB,EAAAntD,EAAAsuB,GAAoD,IAAAyH,EAAA62B,GAAAt+B,GAA6Dk+B,GAAAW,EAAA,CAAsBntD,KAAlDA,EAAAgtD,GAAAhtD,GAAkD0xE,aAAA,SAAAhxE,GAA0C,OAAAA,GAAaixE,WAAA,SAAA5mB,EAAArqD,GAA4C,oBAAAA,GAAA,kBAAAA,EAAsD,UAAA2rC,UAAA,mBAAAmkB,GAAA9vD,GAAA,QAAAg1C,KAAA11C,MAA8E,OAAAU,GAAakxE,eAAA,EAAAC,qBAAAxb,GAAAr2D,EAAA+1B,GAAAi9B,mBAAA,QAAivpHgiB,2BAAropH,SAAAh1E,EAAA2vD,EAAAujB,EAAA/f,EAAAigB,EAAAh4D,GAA2F,IAAAm5C,EAAAc,GAAA1F,EAAAujB,GAA2DlzE,EAAAgtD,GAAAhtD,GAA4BozE,EAAAlgB,GAAAC,EAAAigB,GAAyDxjB,GAAA5vD,EAAA,WAAoC+zD,GAAA,eAAA/zD,EAAA,wBAAAu0D,IAA4E5E,EAAA,GAAc1D,GAAA,GAAAsI,EAAA,SAAAA,GAA8D,IAAAgf,EAAA,CAAAhf,EAAA,SAAAvnB,OAAAunB,EAAAxoC,MAAA,IAAsK,OAApGknC,GAAAjzD,EAAAs0D,GAAAt0D,EAAAuzE,EAAA,KAAAH,EAAAh4D,GAAAu0C,EAAA,GAAoG,MAAwjoHslB,0BAAl/mH,SAAAC,EAAAl1E,EAAAsuB,EAAA6mD,EAAAC,GAA8Ep1E,EAAAgtD,GAAAhtD,IAA4B,IAAAo1E,IAAkBA,EAAA,YAAoB,IAAAr/C,EAAA62B,GAAAt+B,GAAiCojD,EAAA,SAAAhxE,GAAkC,OAAAA,GAAe,OAAAy0E,EAAA,CAAiB,IAAAE,EAAA,KAAA/mD,EAAuBojD,EAAA,SAAAhxE,GAA8B,OAAAA,GAAA20E,OAAoC,IAAAC,GAAA,GAAAt1E,EAAA+sB,QAAA,YAAgDy/B,GAAA0oB,EAAA,CAA4Bl1E,OAAA0xE,eAAAC,WAAA,SAAA5mB,EAAArqD,GAAgF,oBAAAA,GAAA,kBAAAA,EAAsD,UAAA2rC,UAAA,mBAAAmkB,GAAA9vD,GAAA,QAAAg1C,KAAA11C,MAA8E,GAAAU,EAAAy0E,GAAAz0E,EAAA00E,EAAmC,UAAA/oC,UAAA,qBAAAmkB,GAAA9vD,GAAA,wDAAAV,EAAA,wCAAAm1E,EAAA,KAAAC,EAAA,MAA+L,OAAAE,EAAA50E,IAAA,IAAAA,GAAwCkxE,eAAA,EAAAC,qBAAAvb,GAAAt2D,EAAA+1B,EAAA,IAAAo/C,GAAAniB,mBAAA,QAA4nlHuiB,8BAAjglH,SAAApoB,EAAAqoB,EAAAx1E,GAAmE,IAA+Gy1E,EAA/G,CAAA/gD,UAAA9I,WAAA+I,WAAAE,YAAAD,WAAAE,YAAAnzB,aAAAozB,cAA+GygD,GAAkC,SAAAE,EAAA/mB,GAAmD,IAAAuH,EAAAtiC,EAAiBtF,EAAA4nC,EAAlCvH,IAAA,GAAwDviC,EAAA8pC,EAAAvH,EAAA,GAAwB,WAAA8mB,EAAAvf,EAAA,OAAA9pC,EAAAkC,GAAoEk+B,GAAAW,EAAA,CAAsBntD,KAAlDA,EAAAgtD,GAAAhtD,GAAkD0xE,aAAAgE,EAAA9D,eAAA,EAAAC,qBAAA6D,GAAqG,CAAEpoB,8BAAA,KAA0/jHqoB,6BAAt9jH,SAAAxoB,EAAAntD,GAAgF,IAAA41E,EAAA,iBAA5B51E,EAAAgtD,GAAAhtD,IAAqEwsD,GAAAW,EAAA,CAAsBntD,OAAA0xE,aAAA,SAAAhxE,GAA0C,IAA6BkE,EAA7B0W,EAAAsY,EAAAlzB,GAAA,GAAqC,GAAAk1E,EAAA,CAAoB,IAAA3sB,EAAA33B,EAAA5wB,EAAA,EAAA4a,GAAmCu6D,EAAA,EAAkB,GAAA5sB,IAAe4sB,EAAA5sB,EAAoB33B,EAAA5wB,EAAA,EAAA4a,GAAA,GAAoD,IAA3B,IAAAw6D,EAAAp1E,EAAA,EAA2BjB,EAAA,EAAYA,GAAA6b,IAAU7b,EAAA,CAAK,IAAAs2E,EAAAr1E,EAAA,EAAAjB,EAA6B,MAAA6xB,EAAAykD,GAAA,CAA8B,IAAAC,EAAAjkD,EAAA+jD,QAA+C3nD,IAAAvpB,IAAAoxE,GAA0CpxE,GAAAgtB,OAAAC,aAAA,GAA4BjtB,GAAAoxE,GAAmBF,EAAAC,EAAA,GAAiC,GAAAF,IAAAvkD,EAAA5wB,EAAA,EAAA4a,GAAAu6D,OAAqD,CAAK,IAAAxzE,EAAA,IAAAT,MAAA0Z,GAAwB,IAAA7b,EAAA,EAAYA,EAAA6b,IAAS7b,EAAK4C,EAAA5C,GAAAmyB,OAAAC,aAAAP,EAAA5wB,EAAA,EAAAjB,IAA4CmF,EAAAvC,EAAA4qB,KAAA,IAA4B,OAAb6mC,GAAApzD,GAAakE,GAAW+sE,WAAA,SAAA5mB,EAAArqD,GAA4CA,aAAA20B,cAAiC30B,EAAA,IAAAkrB,WAAAlrB,IAA0C,IAAAu1E,EAAA,iBAAAv1E,EAAgDu1E,GAAAv1E,aAAAkrB,YAAAlrB,aAAAw1E,mBAAAx1E,aAAAg0B,WAAwHw4B,GAAA,yCAA2M,IAAA5xC,GAAhJs6D,GAAAK,EAAyC,WAAsB,OAAA7iD,EAAA1yB,IAAqC,WAAsB,OAAAA,EAAA4a,WAA6CsU,EAAAsB,GAAA,EAAA5V,EAAA,GAAmD,GAAvBsY,EAAAhE,GAAA,GAAAtU,EAAuBs6D,GAAAK,EAAyC/iD,EAAAxyB,EAAAkvB,EAAA,EAAAtU,EAAA,QAAwC,GAAA26D,EAAwB,QAAAx2E,EAAA,EAAYA,EAAA6b,IAAS7b,EAAA,CAAK,IAAA02E,EAAAz1E,EAAAuyB,WAAAxzB,GAAiC02E,EAAA,MAAiBriB,GAAAlkC,GAAWs9B,GAAA,2DAA4E57B,EAAA1B,EAAA,EAAAnwB,GAAA02E,OAA+B,IAAA12E,EAAA,EAAYA,EAAA6b,IAAS7b,EAAK6xB,EAAA1B,EAAA,EAAAnwB,GAAAiB,EAAAjB,GAA8E,OAAnD,OAAAsrD,GAAuBA,EAAA5wB,KAAA25B,GAAAlkC,GAA4BA,GAAWgiD,eAAA,EAAAC,qBAAA5mB,GAAA+H,mBAAA,SAAApjC,GAAyGkkC,GAAAlkC,OAA+lgHwmD,8BAAhlgH,SAAAjpB,EAAAkpB,EAAAr2E,GAA0F,IAAAs2E,EAAAvgD,EAA5B/1B,EAAAgtD,GAAAhtD,GAA8C,IAAAq2E,GAAiBC,EAAA,WAAoB,OAAA3iD,GAAiBoC,EAAA,GAAQ,IAAAsgD,IAAsBC,EAAA,WAAoB,OAAA1iD,GAAiBmC,EAAA,GAAQy2B,GAAAW,EAAA,CAAsBntD,OAAA0xE,aAAA,SAAAhxE,GAA2I,IAAjG,IAAA61E,EAAAD,IAAmBh7D,EAAAsY,EAAAlzB,GAAA,GAA6B2B,EAAA,IAAAT,MAAA0Z,GAAwBqxB,EAAAjsC,EAAA,GAAAq1B,EAAyBt2B,EAAA,EAAYA,EAAA6b,IAAS7b,EAAK4C,EAAA5C,GAAAmyB,OAAAC,aAAA0kD,EAAA5pC,EAAAltC,IAAqD,OAAbq0D,GAAApzD,GAAa2B,EAAA4qB,KAAA,KAAkB0kD,WAAA,SAAA5mB,EAAArqD,GAA4C,IAAA61E,EAAAD,IAAmBh7D,EAAA5a,EAAA4a,OAAwBsU,EAAAsB,GAAA,EAAA5V,EAAA+6D,GAAmCziD,EAAAhE,GAAA,GAAAtU,EAA8C,IAAvB,IAAAqxB,EAAA/c,EAAA,GAAAmG,EAAuBt2B,EAAA,EAAYA,EAAA6b,IAAS7b,EAAK82E,EAAA5pC,EAAAltC,GAAAiB,EAAAuyB,WAAAxzB,GAAqF,OAAnD,OAAAsrD,GAAuBA,EAAA5wB,KAAA25B,GAAAlkC,GAA4BA,GAAWgiD,eAAA,EAAAC,qBAAA5mB,GAAA+H,mBAAA,SAAApjC,GAAyGkkC,GAAAlkC,OAAst+G4mD,8BAAvs+G,SAAArpB,EAAAntD,EAAAy2E,EAAA7lB,EAAA6hB,EAAA7jB,GAA2H/D,GAAAsC,GAAA,CAA6BntD,KAAAgtD,GAAAhtD,GAAA4wD,eAAAsC,GAAAujB,EAAA7lB,GAAAhC,cAAAsE,GAAAuf,EAAA7jB,GAAAqiB,SAAA,KAA+i+GyF,sCAAj39G,SAAA3F,EAAAM,EAAA2C,EAAA/zE,EAAAsxE,EAAAD,EAAA2C,EAAAzC,EAAAC,GAA2K5mB,GAAAkmB,GAAAE,SAAA92C,KAAA,CAAgDk3C,mBAAApxE,OAAAizD,GAAA8gB,EAAA/zE,GAAAsxE,gBAAAD,qBAAAE,OAAAte,GAAA+gB,EAAAzC,GAAAC,mBAAsp9GkF,uBAAt68G,SAAAxpB,EAAAntD,GAA0EwsD,GAAAW,EAAA,CAAsBypB,QAAA,EAAA52E,KAAlDA,EAAAgtD,GAAAhtD,GAAkD4xE,eAAA,EAAAF,aAAA,aAAqFC,WAAA,SAAA5mB,EAAA7qD,QAAiv8G22E,WAAni8G,SAAAloB,EAAAmoB,EAAAC,GAAsDpoB,EAAA4H,GAAA5H,GAA6BmoB,EAAA3gB,GAAA2gB,EAAA,aAAyD,IAAA/rB,EAAA,GAAmBisB,EAAA/lB,GAAAlG,GAAkE,OAA7Bt8B,EAAAsoD,GAAA,GAAAC,EAA6BF,EAAA,WAAA/rB,EAAA4D,IAAk07GiH,kBAAAqhB,qBAA9w7G,SAAAtoB,EAAA3tD,GAA8F,OAAAiwD,IAApDtC,EAAA4H,GAAA5H,IAA6B3tD,EAAAu1D,GAAAv1D,MAAus7Gk2E,eAA3o7G,SAAAvoB,GAAgCA,EAAA,IAAagH,GAAAhH,GAAAxzB,UAAA,IAA8l7Gg8C,oBAA/46G,SAAA5yE,GAAgC,OAAA0sD,GAAAwF,GAAAlyD,KAA+26G0sD,oBAAAmmB,wBAAj06G,SAAAzoB,GAA0F7D,GAAjD6K,GAAAhH,GAAAjuD,OAA6Ek1D,GAAAjH,IAA2s6G0oB,mBAApr6G,SAAAp1E,EAAAq1E,GAAqI,OAAArmB,IAA9FhvD,EAAAk0D,GAAAl0D,EAAA,sBAAqD,qBAAAq1E,KAAwl6GC,OAAph6G,WAAkBjtD,EAAA,SAAkg6GktD,eAAtw5G,SAAAC,EAAAC,GAAmC,IAAAlpC,EAAQ,OAAAipC,EAAejpC,EAAAD,KAAAC,UAAe,QAAAipC,IAAA5gB,KAAuH,OAAhClsB,GAAAlP,GAAAuB,SAAgC,EAA/DwR,EAAAooB,KAAkI,OAA1DnoC,EAAAipD,GAAA,GAAAlpC,EAAA,MAAwB/f,EAAAipD,EAAA,MAAAlpC,EAAA,cAAkC,GAAmg5GmpC,mBAAr5uF,SAAA/O,GAAmC,OAAAgP,GAAAhP,IAAk3uFpY,gBAAAoG,uBAAAC,oCAAAghB,4BAAjjhF,SAAAnjE,GAAyCuoD,GAAA,cAAAvoD,IAAwghFojE,2BAA7+gF,SAAAlQ,EAAA9C,GAAoD7H,GAAA8a,aAAA/a,GAAA+F,SAAA6E,GAAA5K,GAAAoG,QAAA0B,KAAy7gFkT,qCAA73gF,WAAgDhqD,EAAA,yDAA6D0B,IAAA,IAAgxgFuoD,qCAAtwgF,SAAAvjE,GAAkDuoD,GAAA,uBAAAvoD,IAAotgFwjE,iCAAhrgF,SAAAtQ,EAAAxxB,EAAAp2C,GAA8DA,EAAA0xB,EAAA1xB,GAA6Bi9D,GAAAkb,mBAAAnb,GAAA+F,SAAA6E,GAAAxxB,EAAAp2C,IAAqlgFo4E,yBAA3hgF,SAAA1iE,EAAAiW,GAAiD,IAAA0sD,EAAA1sD,EAAAqxC,GAAA6F,QAAAl3C,GAAA,KAA6C,OAAAjW,EAAkBunD,GAAAqb,8BAAA3sD,EAA2C,OAAAjW,IAAuBunD,GAAAsb,gCAAA5sD,GAA6CsxC,GAAAub,WAAA9iE,EAAA2iE,IAA4z/EI,6BAAzx/E,SAAA/iE,EAAA0gC,EAAAzqB,GAA2D,IAAA0sD,EAAA1sD,EAAAqxC,GAAA6F,QAAAl3C,GAAA,KAA6CsxC,GAAA,eAAAvnD,EAAA0gC,EAAAiiC,IAAir/EK,8BAAjo/E,SAAAhjE,EAAA0gC,EAAAzqB,EAAAzQ,EAAAy9D,GAA2E,IAAAN,EAAA1sD,EAAAqxC,GAAA6F,QAAAl3C,GAAA,KAA6CsxC,GAAA,gBAAAvnD,EAAA0gC,EAAAiiC,EAAAn9D,EAAAy9D,IAAyg/EC,mCAAz8+E,WAA8C5qD,EAAA,uDAA2D0B,IAAA,IAAg2+EmpD,8BAAt1+E,SAAAnjE,EAAAojE,GAA2D7b,GAAA8b,gBAAArjE,EAAAojE,EAAA9b,GAAAgG,aAAA8V,GAAA,OAA2x+EE,6BAA/s+E,WAAwChrD,EAAA,iDAAqD0B,IAAA,IAAkn+EupD,+BAAxm+E,SAAAvjE,EAAAwjE,GAA6Djc,GAAAkc,iBAAAzjE,EAAAwjE,EAAAlc,GAAAiG,cAAAiW,GAAA,OAA2i+EE,0BAA399E,SAAA1jE,EAAA2jE,GAAmDpc,GAAAqc,YAAA5jE,EAAA2jE,EAAArc,GAAAkG,SAAAmW,GAAA,OAAw69EE,8BAA529E,SAAApS,GAA4ClK,GAAA,gBAAAD,GAAAqG,KAAA8D,KAAg09EqS,yBAAzx9E,SAAA9kE,EAAAC,EAAAzJ,EAAAuuE,GAA+Cxc,GAAA,WAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAA0u9EC,4BAAzs9E,SAAAhlE,GAAyCuoD,GAAA,cAAAvoD,IAAgq9EilE,oCAAro9E,SAAAjlE,EAAAC,GAAoDsoD,GAAA,sBAAAvoD,EAAAC,IAAil9EilE,wBAA3i9E,SAAAllE,EAAAC,GAAwCsoD,GAAA,UAAAvoD,EAAAC,IAAmg9EklE,gCAAz+8E,SAAAnlE,EAAAC,EAAAzJ,EAAAuuE,GAAsDxc,GAAA,kBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAm78EK,yBAA348E,SAAApkE,EAAA4Y,EAAAlC,EAAA2tD,GAA0D,GAAA3tD,EAA8C,CAAK,GAAA4wC,GAAAuG,eAAA2C,0BAAgG,YAAhDjJ,GAAA+c,WAAAtkE,EAAA4b,EAAAyoD,EAAA3tD,EAAAkC,GAAuD2uC,GAAA+c,WAAAtkE,EAAA4b,EAAAD,SAAAjF,IAAAkC,GAAAyrD,QAAhJ9c,GAAA+c,WAAAtkE,EAAA4Y,EAAAyrD,IAAu08EE,4BAAvn8E,SAAAvkE,EAAAwF,EAAAoT,EAAAlC,GAA8D4wC,GAAAuG,eAAA2C,0BAAgDjJ,GAAAid,cAAAxkE,EAAAwF,EAAAoW,EAAAlF,EAAAkC,GAA2D2uC,GAAAid,cAAAxkE,EAAAwF,EAAAoW,EAAAD,SAAAjF,IAAAkC,KAA887E6rD,qCAA347E,SAAAzlE,GAAkD,OAAAuoD,GAAA,uBAAAvoD,IAAy17E0lE,yBAA9y7E,WAAoCpsD,EAAA,6CAAiD0B,IAAA,IAAyt7E2qD,oBAA/s7E,SAAA3lE,GAAiCuoD,GAAA,MAAAvoD,IAA8q7E4lE,4BAA3p7E,SAAA5lE,EAAAC,EAAAzJ,EAAAuuE,GAAkDxc,GAAA,cAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAym7Ec,4BAArk7E,SAAA5uD,EAAA6uD,EAAA95E,GAA8Du8D,GAAA,cAAAtxC,EAAA6uD,EAAAjqD,EAAA7vB,GAAA,IAAug7E+5E,4BAA586E,SAAA9uD,EAAA6uD,EAAA95E,GAA8Du8D,GAAA,cAAAtxC,EAAA6uD,EAAA/rD,EAAA/tB,GAAA,IAA846Eg6E,6BAAp16E,SAAA/uD,EAAA6uD,EAAA95E,GAA+Du8D,GAAA,eAAAtxC,EAAA6uD,EAAA5mD,EAAAlzB,GAAA,IAAqx6Ei6E,yBAAzt6E,SAAAjmE,EAAAC,EAAAzJ,EAAAuuE,GAA+Cxc,GAAA,WAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAA0q6EmB,yBAAzo6E,SAAAlmE,GAAsCuoD,GAAA,WAAAvoD,IAAmm6EmmE,0BAA3k6E,SAAAnmE,GAAuCuoD,GAAA,WAAAvoD,IAAoi6EomE,2BAA5g6E,SAAApmE,GAAwCuoD,GAAA,aAAAvoD,IAAo+5EqmE,kCAA185E,WAA6C/sD,EAAA,sDAA0D0B,IAAA,IAAm25EsrD,wBAAz15E,SAAAC,EAAAC,EAAAC,EAAAre,GAAuDG,GAAAme,YAAAH,IAAAC,IAAAC,IAAAre,IAAky5Eue,yBAApv5E,WAAoCrtD,EAAA,6CAAiD0B,IAAA,IAA+p5E4rD,2BAArp5E,WAAsCttD,EAAA,+CAAmD0B,IAAA,IAA4j5E6rD,4BAAlj5E,SAAAzW,GAA6C7H,GAAAue,cAAAxe,GAAAoG,QAAA0B,KAAqg5E2W,mCAA794E,SAAA/lE,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA4uE,EAAAC,EAAAxvD,GAA4G4wC,GAAAuG,eAAA2C,0BAAgDjJ,GAAA,qBAAAvnD,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA4uE,EAAArqD,EAAAlF,EAAAwvD,GAA4G3e,GAAA,qBAAAvnD,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA4uE,EAAAvvD,EAAAkF,EAAAD,SAAAjF,IAAAwvD,GAAA,OAAqt4EC,sCAAvl4E,SAAAnmE,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAAuR,EAAAxvD,GAAgH4wC,GAAAuG,eAAA2C,0BAAgDjJ,GAAA,wBAAAvnD,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAA/4C,EAAAlF,EAAAwvD,GAAgH3e,GAAA,wBAAAvnD,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAAj+C,EAAAkF,EAAAD,SAAAjF,IAAAwvD,GAAA,OAAu03EI,6BAArs3E,SAAAtnE,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,EAAAC,EAAAC,GAA+Dnf,GAAA,eAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,EAAAC,EAAAC,IAAso3EC,gCAArl3E,SAAA3nE,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,EAAAC,EAAAC,GAAkEnf,GAAA,kBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,EAAAC,EAAAC,IAAmh3EE,4BAA/92E,WAAuC,IAAAtlD,EAAAgmC,GAAA2H,SAAA3H,GAAA+F,UAAgC6E,EAAA3K,GAAAsf,gBAA0E,OAAxC3U,EAAA5nE,KAAAg3B,EAAgBgmC,GAAA+F,SAAA/rC,GAAA4wC,EAAwB5wC,GAA802EwlD,2BAAp02E,SAAAC,GAAgD,IAAAzlD,EAAAgmC,GAAA2H,SAAA3H,GAAAoG,SAA6E,OAA9CpG,GAAAoG,QAAApsC,GAAAimC,GAAAyf,aAAAD,GAA8CzlD,GAAus2E2lD,uBAA7r2E,SAAAjoE,GAAoCuoD,GAAA,SAAAvoD,IAAyp2EkoE,4BAAno2E,SAAA17E,EAAA2hE,GAAgD,QAAApjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAAo0C,EAAA,EAAApjE,GAAA,GAA8BksB,EAAAqxC,GAAA6F,QAAA7rC,GAA0BrL,IAAoBsxC,GAAA4f,aAAAlxD,GAA2BA,EAAA3rB,KAAA,EAAcg9D,GAAA6F,QAAA7rC,GAAA,KAAoBA,GAAAgmC,GAAA8f,kBAAA9f,GAAA8f,gBAAA,GAA+C9lD,GAAAgmC,GAAA+f,yBAAA/f,GAAA+f,uBAAA,MAAs41EC,iCAAx01E,SAAA97E,EAAA8hE,GAA0D,QAAAvjE,EAAA,EAAYA,EAAAyB,IAAIzB,EAAA,CAAK,IAAAu3B,EAAAvI,EAAAu0C,EAAA,EAAAvjE,GAAA,GAAmCq5E,EAAA9b,GAAAgG,aAAAhsC,GAAoC8hD,IAAyB7b,GAAAggB,kBAAAnE,GAAqCA,EAAA94E,KAAA,EAAmBg9D,GAAAgG,aAAAhsC,GAAA,QAAim1EkmD,8BAAvk1E,WAAyClvD,EAAA,kDAAsD0B,IAAA,IAAw+0EytD,4BAA990E,SAAAnmD,GAAyC,GAAAA,EAAA,CAAc,IAAA4wC,EAAA5K,GAAA+F,SAAA/rC,GAA4B4wC,GAAyC3K,GAAAmgB,cAAAxV,GAA6BA,EAAA5nE,KAAA,EAAeg9D,GAAA+F,SAAA/rC,GAAA,KAAqBgmC,GAAAgH,aAAAhtC,GAAA,MAA7FgmC,GAAAyH,YAAA,QAA830E4Y,kCAAxw0E,SAAAn8E,EAAA+hE,GAA4D,QAAAxjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAAw0C,EAAA,EAAAxjE,GAAA,GAAoCy5E,EAAAlc,GAAAiG,cAAAjsC,GAAsCkiD,IAA0Bjc,GAAAqgB,mBAAApE,GAAuCA,EAAAl5E,KAAA,EAAoBg9D,GAAAiG,cAAAjsC,GAAA,QAAwh0EumD,2BAA7/zE,SAAAvmD,GAAwC,GAAAA,EAAA,CAAc,IAAA8tC,EAAA9H,GAAAoG,QAAApsC,GAA0B8tC,GAAwC7H,GAAAugB,aAAA1Y,GAA2B9H,GAAAoG,QAAApsC,GAAA,MAAvDgmC,GAAAyH,YAAA,QAAi6zEgZ,6BAAt1zE,SAAAv8E,EAAAgiE,GAAkD,QAAAzjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAAy0C,EAAA,EAAAzjE,GAAA,GAA+B45E,EAAArc,GAAAkG,SAAAlsC,GAA4BqiD,IAAqBpc,GAAAygB,cAAArE,GAA6BA,EAAAr5E,KAAA,EAAeg9D,GAAAkG,SAAAlsC,GAAA,QAAmpzE2mD,iCAA7nzE,SAAAz8E,EAAAmiE,GAAkD,QAAA5jE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAA40C,EAAA,EAAA5jE,GAAA,GAA2Bw9D,GAAA,kBAAAD,GAAAqG,KAAArsC,IAAwCgmC,GAAAqG,KAAArsC,GAAA,OAAm/yE4mD,wBAAj+yE,SAAAlpE,GAAqCuoD,GAAA,UAAAvoD,IAA47yEmpE,wBAAr6yE,SAAA7+B,GAAuCie,GAAA6gB,YAAA9+B,IAA83yE++B,yBAAt2yE,SAAArpE,EAAAC,GAAyCsoD,GAAA,WAAAvoD,EAAAC,IAA6zyEqpE,0BAAlyyE,SAAAtpE,EAAAC,GAA0CsoD,GAAA,WAAAvoD,EAAAC,IAAwvyEspE,2BAA7tyE,SAAArW,EAAA9C,GAAoD7H,GAAAihB,aAAAlhB,GAAA+F,SAAA6E,GAAA5K,GAAAoG,QAAA0B,KAAyqyEqZ,sBAA7myE,SAAAzpE,GAAmCuoD,GAAA,QAAAvoD,IAA0kyE0pE,uCAArjyE,SAAAhoC,GAAuD6mB,GAAAohB,yBAAAjoC,IAA8/xEkoC,uBAAx9xE,WAAkCtwD,EAAA,2CAA+C0B,IAAA,IAAu4xE6uD,yBAA73xE,SAAA39E,EAAAmmE,EAAA5rD,GAAoD8hD,GAAAuhB,WAAA59E,EAAAmmE,EAAA5rD,IAAy0xEsjE,kCAAtyxE,SAAA79E,EAAAmmE,EAAA5rD,EAAA6rD,GAAuE/J,GAAA,oBAAAr8D,EAAAmmE,EAAA5rD,EAAA6rD,IAA+txE0X,0BAAtqxE,SAAAx9E,EAAAmmE,GAAmF,IAAxC,IAAAsX,EAAA3hB,GAAAmH,qBAAAjjE,GAAwCzB,EAAA,EAAYA,EAAAyB,EAAIzB,IAAKk/E,EAAAl/E,GAAAgvB,EAAA44C,EAAA,EAAA5nE,GAAA,GAAgCw9D,GAAA,YAAA0hB,IAA8hxElW,8BAAAmW,oCAAt5wE,SAAAh+E,EAAAua,EAAAlZ,EAAAglE,EAAAD,GAAgF/J,GAAA,sBAAAr8D,EAAAua,EAAAlZ,EAAAglE,EAAAD,IAAs0wE6X,gCAApwwE,SAAAj+E,EAAA+rC,EAAAhe,EAAAxT,EAAAlZ,EAAAglE,GAA4EwB,GAAA7nE,EAAAua,EAAAlZ,EAAAglE,IAAwrwE6X,qBAApowE,SAAApqE,GAAkCuoD,GAAA,OAAAvoD,IAAkmwEqqE,gCAA9kwE,WAA2C/wD,EAAA,oDAAwD0B,IAAA,IAA2+vEsvD,sCAAj+vE,SAAA5oC,GAAsD6mB,GAAAgiB,wBAAA7oC,IAA26vE8oC,sBAAt4vE,WAAiClxD,EAAA,0CAA8C0B,IAAA,IAAuzvEyvD,mCAA7yvE,WAA8CnxD,EAAA,uDAA2D0B,IAAA,IAAosvE0vD,mCAA1rvE,WAA8CniB,GAAA,wBAA4ovEoiB,qBAA5mvE,WAAgCpiB,GAAA,UAA4kvEqiB,oBAA1jvE,WAA+BriB,GAAA,SAA2hvEsiB,sCAA1gvE,SAAA7pE,EAAA8pE,EAAAC,EAAAvG,GAAkGjc,GAAAyiB,wBAAAhqE,EAAA8pE,EAAAC,EAAAziB,GAAAiG,cAAAiW,KAAw6uEyG,mCAAr0uE,SAAAjqE,EAAA8pE,EAAAI,EAAAvG,EAAAqC,GAAuFze,GAAA4iB,qBAAAnqE,EAAA8pE,EAAAI,EAAA5iB,GAAAkG,SAAAmW,GAAAqC,IAA8uuEoE,wBAA3puE,SAAAprE,GAAqCuoD,GAAA,UAAAvoD,IAAsnuEqrE,sBAA/luE,WAAiC/xD,EAAA,0CAA8C0B,IAAA,IAAghuEswD,yBAAtguE,SAAA9+E,EAAA2hE,GAA6C,QAAApjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAksB,EAAAsxC,GAAAgjB,eAAgC,IAAAt0D,EAAA,CAAiC,IAArBqxC,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAo0C,EAAA,EAAApjE,KAAA,KAAqC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAA6F,SAA+Bl3C,EAAA3rB,KAAAg3B,EAAegmC,GAAA6F,QAAA7rC,GAAArL,EAAsB8C,EAAAo0C,EAAA,EAAApjE,GAAA,GAAAu3B,IAAmxtEkpD,8BAAxvtE,SAAAh/E,EAAAi/E,GAA8C,QAAA1gF,EAAA,EAAYA,EAAAyB,IAAIzB,EAAA,CAAK,IAAAq5E,EAAA7b,GAAAmjB,oBAA0C,IAAAtH,EAAA,CAAsC,IAArB9b,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAA0xD,EAAA,EAAA1gF,KAAA,KAAiC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAAgG,cAAoC8V,EAAA94E,KAAAg3B,EAAoBgmC,GAAAgG,aAAAhsC,GAAA8hD,EAAgCrqD,EAAA0xD,EAAA,EAAA1gF,GAAA,GAAAu3B,IAAq+sEqpD,+BAA98sE,SAAAn/E,EAAA+hE,GAAyD,QAAAxjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAy5E,EAAAjc,GAAAqjB,qBAA4C,IAAApH,EAAA,CAAuC,IAArBlc,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAw0C,EAAA,EAAAxjE,KAAA,KAA2C,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAAiG,eAAqCiW,EAAAl5E,KAAAg3B,EAAqBgmC,GAAAiG,cAAAjsC,GAAAkiD,EAAkCzqD,EAAAw0C,EAAA,EAAAxjE,GAAA,GAAAu3B,IAA+psEupD,0BAA9nsE,SAAAr/E,EAAAgiE,GAA+C,QAAAzjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAA45E,EAAApc,GAAAujB,gBAAkC,IAAAnH,EAAA,CAAkC,IAArBrc,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAy0C,EAAA,EAAAzjE,KAAA,KAAsC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAAkG,UAAgCmW,EAAAr5E,KAAAg3B,EAAgBgmC,GAAAkG,SAAAlsC,GAAAqiD,EAAwB5qD,EAAAy0C,EAAA,EAAAzjE,GAAA,GAAAu3B,IAAi4rEypD,8BAAr2rE,SAAAv/E,EAAAw/E,GAAiD,QAAAjhF,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAA0nE,EAAAlK,GAAA,oBAAqC,IAAAkK,EAAA,CAA8B,IAArBnK,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAiyD,EAAA,EAAAjhF,KAAA,KAAoC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAAqG,MAA4B8D,EAAAnnE,KAAAg3B,EAAYgmC,GAAAqG,KAAArsC,GAAAmwC,EAAgB14C,EAAAiyD,EAAA,EAAAjhF,GAAA,GAAAu3B,IAAynrE2pD,6BAA/lrE,SAAAjsE,GAA0CuoD,GAAA,eAAAvoD,IAAqjrEksE,8BAAzhrE,SAAAhZ,EAAAxxB,EAAAyqC,EAAAvlE,EAAAgT,EAAArsB,EAAAjC,GAAoF4nE,EAAA5K,GAAA+F,SAAA6E,GAA6B,IAAAlwC,EAAAulC,GAAA6jB,gBAAAlZ,EAAAxxB,GAA8C,GAAA1e,EAAA,CAAgB,GAAAmpD,EAAA,GAAA7gF,EAAA,CAAoB,IAAA+gF,EAAA7tD,EAAAwE,EAAA13B,OAAA6gF,GAAiEvlE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,MAA8BgT,IAAAG,EAAAH,GAAA,GAAAoJ,EAAApJ,MAAkCrsB,IAAAwsB,EAAAxsB,GAAA,GAAAy1B,EAAAz1B,QAA4pqE++E,+BAA1nqE,SAAApZ,EAAAxxB,EAAAyqC,EAAAvlE,EAAAgT,EAAArsB,EAAAjC,GAAqF4nE,EAAA5K,GAAA+F,SAAA6E,GAA6B,IAAAlwC,EAAAulC,GAAAoL,iBAAAT,EAAAxxB,GAA+C,GAAA1e,EAAA,CAAgB,GAAAmpD,EAAA,GAAA7gF,EAAA,CAAoB,IAAA+gF,EAAA7tD,EAAAwE,EAAA13B,OAAA6gF,GAAiEvlE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,MAA8BgT,IAAAG,EAAAH,GAAA,GAAAoJ,EAAApJ,MAAkCrsB,IAAAwsB,EAAAxsB,GAAA,GAAAy1B,EAAAz1B,QAA2vpEg/E,wCAAztpE,SAAArZ,EAAAsZ,EAAAL,EAAAvlE,EAAA6lE,GAA4GvZ,EAAA5K,GAAA+F,SAAA6E,GAA6B,IAAAp8B,EAAAyxB,GAAA,0BAAA2K,EAAAsZ,GAAyE,GAAA11C,EAAkB,GAAA21C,GAAAN,EAAA,GAAgC,IAAAE,EAAA7tD,EAAAsY,EAAA21C,EAAAN,GAA0EvlE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,OAAk1oE8lE,sCAAnzoE,SAAAxZ,EAAAsZ,EAAAtX,EAAAH,GAAuF,GAAAA,EAAqE,OAA7B7B,EAAA5K,GAAA+F,SAAA6E,GAA6BgC,GAAc,eAAA5pE,EAAAi9D,GAAA,0BAAA2K,EAAAsZ,GAAkH,YAAhCzyD,EAAAg7C,GAAA,GAAAzpE,EAAAsb,OAAA,GAAuC,YAAAkwB,EAAAyxB,GAAA,+BAAA2K,EAAAsZ,EAAAtX,GAA4F,IAAAp+B,EAAA,OAAkB,oBAAAA,EAA4B/c,EAAAg7C,GAAA,GAAAj+B,OAA8B,QAAA/rC,EAAA,EAAYA,EAAA+rC,EAAAlwB,OAAgB7b,IAAKgvB,EAAAg7C,EAAA,EAAAhqE,GAAA,GAAA+rC,EAAA/rC,QAAzYu9D,GAAAyH,YAAA,OAAgtoE4c,mCAApynE,WAA8CrzD,EAAA,uDAA2D0B,IAAA,IAA2rnE4xD,kCAAjrnE,SAAA1Z,EAAA2Z,EAAAC,EAAA5X,EAAAH,GAA6F,GAAAA,EAAwC,GAAA8X,EAAA,MAAAC,EAAsCxkB,GAAAyH,YAAA,UAAtC,CAAkEmD,EAAA5K,GAAA+F,SAAA6E,GAAwC,IAAX,IAAAuY,EAAA,GAAW1gF,EAAA,EAAYA,EAAA8hF,EAAe9hF,IAAK0gF,EAAAhmD,KAAA1L,EAAA+yD,EAAA,EAAA/hF,GAAA,IAAwC,IAAA+rC,EAAAyxB,GAAA,kBAAA2K,EAAAuY,EAAAvW,GAAyD,GAAAp+B,EAAkB,KAAAl8B,EAAAk8B,EAAAlwB,OAAsB,IAAA7b,EAAA,EAAYA,EAAA6P,EAAM7P,IAAKgvB,EAAAg7C,EAAA,EAAAhqE,GAAA,GAAA+rC,EAAA/rC,SAAtUu9D,GAAAyH,YAAA,OAAwknEgd,iCAAjumE,SAAA7Z,EAAA8Z,EAAAvmE,EAAAioD,GAA0E,IAAA53B,EAAAyxB,GAAA0kB,mBAAA3kB,GAAA+F,SAAA6E,IAA0Dt4D,EAAAk8B,EAAAlwB,OAAsBhM,EAAAoyE,IAAiBpyE,EAAAoyE,GAAajzD,EAAAtT,GAAA,GAAA7L,EAAqB,QAAA7P,EAAA,EAAYA,EAAA6P,IAAM7P,EAAA,CAAK,IAAAu3B,EAAAgmC,GAAAoG,QAAAr2C,QAAAye,EAAA/rC,IAAqCgvB,EAAA20C,EAAA,EAAA3jE,GAAA,GAAAu3B,IAAw9lE4qD,gCAA77lE,SAAAha,EAAA5nE,GAAiH,OAA1D4nE,EAAA5K,GAAA+F,SAAA6E,GAA6B5nE,EAAA0xB,EAAA1xB,GAA6Bi9D,GAAA4kB,kBAAAja,EAAA5nE,IAA40lE8hF,4BAA/xlE,WAAuC9zD,EAAA,gDAAoD0B,IAAA,IAAoslEqyD,0BAAt/gE,SAAAnZ,EAAArnE,GAA4ConE,GAAAC,EAAArnE,EAAA,YAA08gEygF,mCAAp6gE,SAAAtsE,EAAAhV,EAAA0rB,GAA+DA,EAAsCqC,EAAArC,GAAA,GAAA6wC,GAAAglB,mBAAAvsE,EAAAhV,GAA5Bs8D,GAAAyH,YAAA,OAA21gEyd,uBAAxwgE,WAAkC,GAAAllB,GAAA4F,UAAA,CAAiB,IAAAjtB,EAAAqnB,GAAA4F,UAAsC,OAAf5F,GAAA4F,UAAA,EAAejtB,EAAkB,OAAAsnB,GAAAklB,YAA6pgEC,wBAApogE,SAAAxZ,EAAArnE,GAA0ConE,GAAAC,EAAArnE,EAAA,UAA0lgE8gF,kCAAtjgE,SAAAza,EAAA5nE,GAAyD,OAAAi9D,GAAA,oBAAAD,GAAA+F,SAAA6E,GAAAl2C,EAAA1xB,KAA6//DsiF,kDAA36/D,SAAA5sE,EAAA8pE,EAAA5V,EAAAH,GAA2F,IAAAj+B,EAAAyxB,GAAAslB,kCAAA7sE,EAAA8pE,EAAA5V,IAA4Ep+B,aAAAw9B,mBAAAx9B,aAAA89B,gBAAwE99B,EAAA,EAAAA,EAAAxrC,MAAqByuB,EAAAg7C,GAAA,GAAAj+B,GAAuq/Dg3C,4BAA9o/D,WAAuCx0D,EAAA,gDAAoD0B,IAAA,IAAmj/D+yD,4BAA7k9D,SAAA/sE,EAAA0gC,EAAAhqB,GAAwDm9C,GAAA7zD,EAAA0gC,EAAAhqB,EAAA,YAAqh9Ds2D,0BAA998D,SAAA9Z,EAAArnE,GAA4ConE,GAAAC,EAAArnE,EAAA,YAAk78DohF,sCAA548D,WAAiD30D,EAAA,0DAA8D0B,IAAA,IAA6x8DkzD,0BAAnx8D,WAAqC50D,EAAA,8CAAkD0B,IAAA,IAA4r8DmzD,gCAAlr8D,SAAAjb,EAAAkb,EAAAxnE,EAAAynE,GAA2E,IAAAj1D,EAAAmvC,GAAA+lB,kBAAAhmB,GAAA+F,SAAA6E,IAA0F,GAApC,OAAA95C,MAAA,mBAAoCg1D,EAAA,GAAAC,EAAA,CAAyB,IAAAhC,EAAA7tD,EAAApF,EAAAi1D,EAAAD,GAAgExnE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,OAA237D2nE,2BAA517D,SAAArb,EAAAgC,EAAAroE,GAAqD,GAAAA,EAAmC,GAAAqmE,GAAA5K,GAAA2F,QAAwB3F,GAAAyH,YAAA,UAAxB,CAAoD,IAAAuD,EAAAhL,GAAAgH,aAAA4D,GAAoC,GAAAI,EAAwC,UAAA4B,EAAA,CAAiB,IAAA97C,EAAAmvC,GAAA+lB,kBAAAhmB,GAAA+F,SAAA6E,IAAsD,OAAA95C,MAAA,mBAAoCW,EAAAltB,GAAA,GAAAusB,EAAAxS,OAAA,OAA0B,UAAAsuD,EAAsBn7C,EAAAltB,GAAA,GAAAymE,EAAAH,sBAAqC,UAAA+B,EAAA,CAAsB,OAAA5B,EAAAF,mBAAA,CAAkCF,EAAA5K,GAAA+F,SAAA6E,GAA6B,IAAAsb,EAAAjmB,GAAAkL,oBAAAP,EAAA3K,GAAAkmB,mBAA0Enb,EAAAF,mBAAA,EAA4B,QAAAroE,EAAA,EAAYA,EAAAyjF,IAAazjF,EAAA,CAAK,IAAA2jF,EAAAnmB,GAAA6jB,gBAAAlZ,EAAAnoE,GAAkDuoE,EAAAF,mBAAAhmE,KAAAW,IAAAulE,EAAAF,mBAAAsb,EAAApjF,KAAAsb,OAAA,IAA0FmT,EAAAltB,GAAA,GAAAymE,EAAAF,wBAAuC,UAAA8B,EAAA,CAAsB,OAAA5B,EAAAD,0BAAA,CAAyCH,EAAA5K,GAAA+F,SAAA6E,GAA6B,IAAAyb,EAAApmB,GAAAkL,oBAAAP,EAAA3K,GAAAqmB,uBAAgH,IAAnCtb,EAAAD,0BAAA,EAAmCtoE,EAAA,EAAYA,EAAA4jF,IAAY5jF,EAAA,CAAK,IAAA8jF,EAAAtmB,GAAAumB,0BAAA5b,EAAAnoE,GAA+DuoE,EAAAD,0BAAAjmE,KAAAW,IAAAulE,EAAAD,0BAAAwb,EAAAjoE,OAAA,IAAsGmT,EAAAltB,GAAA,GAAAymE,EAAAD,+BAAmDt5C,EAAAltB,GAAA,GAAA07D,GAAAkL,oBAAAnL,GAAA+F,SAAA6E,GAAAgC,QAAziC5M,GAAAyH,YAAA,WAAhIzH,GAAAyH,YAAA,OAAgy7Dgf,yCAAnj5D,SAAA/tE,EAAAk0D,EAAAH,GAAuEA,EAAwCh7C,EAAAg7C,GAAA,GAAAxM,GAAAymB,yBAAAhuE,EAAAk0D,GAA5B5M,GAAAyH,YAAA,OAAg+4Dkf,+BAAr44D,SAAA7e,EAAAge,EAAAxnE,EAAAynE,GAAyE,IAAAj1D,EAAAmvC,GAAA2mB,iBAAA5mB,GAAAoG,QAAA0B,IAAuF,GAApC,OAAAh3C,MAAA,mBAAoCg1D,EAAA,GAAAC,EAAA,CAAyB,IAAAhC,EAAA7tD,EAAApF,EAAAi1D,EAAAD,GAAgExnE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,OAAml4DuoE,uCAApj4D,SAAApH,EAAAqH,EAAAC,EAAAC,GAA0F,IAAAx4C,EAAAyxB,GAAAgnB,yBAAAxH,EAAAqH,GAAoEr1D,EAAAs1D,GAAA,GAAAv4C,EAAA04C,SAAiCz1D,EAAAs1D,EAAA,MAAAv4C,EAAA24C,SAAmC11D,EAAAu1D,GAAA,GAAAx4C,EAAAw4C,WAAk13DI,8BAA5y3D,SAAAtf,EAAA+b,EAAAvlE,EAAA0pD,GAAqE,IAAAx5B,EAAAyxB,GAAAonB,gBAAArnB,GAAAoG,QAAA0B,IAAqD,GAAAt5B,EAAkB,GAAAq1C,EAAA,GAAA7b,EAAA,CAAsB,IAAA+b,EAAA7tD,EAAAsY,EAAAw5B,EAAA6b,GAAgEvlE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,OAAih3DgpE,0BAAl/2D,SAAAxf,EAAA8E,EAAAroE,GAAmD,GAAAA,EAAmC,UAAAqoE,EAAA,CAAiB,IAAA97C,EAAAmvC,GAAA2mB,iBAAA5mB,GAAAoG,QAAA0B,IAAmD,OAAAh3C,MAAA,mBAAoCW,EAAAltB,GAAA,GAAAusB,EAAAxS,OAAA,OAA0B,UAAAsuD,EAAA,CAAsB,IAAA5E,EAAA/H,GAAAonB,gBAAArnB,GAAAoG,QAAA0B,IAAqDyf,EAAA,OAAAvf,GAAA,GAAAA,EAAA1pD,OAAA,EAAA0pD,EAAA1pD,OAAA,EAAmEmT,EAAAltB,GAAA,GAAAgjF,OAA+B91D,EAAAltB,GAAA,GAAA07D,GAAAunB,mBAAAxnB,GAAAoG,QAAA0B,GAAA8E,QAA3U5M,GAAAyH,YAAA,OAAw72DggB,wBAA5i2D,SAAA7b,GAAwC,GAAA5L,GAAAiH,YAAA2E,GAAA,OAAA5L,GAAAiH,YAAA2E,GAAsD,IAAAn9C,EAAQ,OAAAm9C,GAAc,0CAAAn9C,EAAAmF,EAAA4e,GAAAytB,GAAAyJ,aAAAkC,IAAA,KAAAn4C,GAAwH,MAAM,cAAAi0D,EAAAznB,GAAAyJ,aAAAzJ,GAAA0nB,SAA0Ll5D,EAAAmF,EAAA4e,GAAhIk1C,EAAAznB,GAAA/B,OAAAiL,YAAAL,SAAA,oBAAA4e,EAAA,IAAsF,kBAAAA,EAAA,KAA0C,KAAAj0D,GAA8D,MAAM,UAAiE,IAAjE,IAAA+2C,EAAAvK,GAAAwK,yBAAkDmd,EAAA,GAAenlF,EAAA,EAAYA,EAAA+nE,EAAAlsD,SAAc7b,EAAKmlF,EAAAzqD,KAAAqtC,EAAA/nE,IAAsBmlF,EAAAzqD,KAAA,MAAAqtC,EAAA/nE,IAA4BgsB,EAAAmF,EAAA4e,GAAAo1C,EAAA33D,KAAA,WAAAwD,GAAsE,MAAM,eAAAo0D,EAAA5nB,GAAAyJ,aAAAzJ,GAAA6nB,0BAAwIC,EAAAF,EAAAxsC,MAA1D,gDAAgG,OAAA0sC,IAAmB,GAAAA,EAAA,GAAAzpE,SAAAypE,EAAA,GAAAA,EAAA,QAAkDF,EAAA,qBAAAE,EAAA,QAAAF,EAAA,KAAiEp5D,EAAAmF,EAAA4e,GAAAq1C,GAAA,KAAAp0D,GAAgE,MAAM,QAA6B,OAA7BusC,GAAAyH,YAAA,MAA6B,EAAmC,OAA1BzH,GAAAiH,YAAA2E,GAAAn9C,EAA0BA,GAAo6zDu5D,yBAAz5zD,SAAAhlF,EAAAo2C,GAA8C,GAAA6mB,GAAA/B,OAAAiL,YAAAL,QAAA,EAA4D,OAArB9I,GAAAyH,YAAA,MAAqB,EAAS,IAAAP,EAAAlH,GAAAkH,aAAAlkE,GAAuC,GAAAkkE,EAAiB,OAAA9tB,EAAA,GAAAA,GAAA8tB,EAAA5oD,QAAwC0hD,GAAAyH,YAAA,MAAqB,GAASP,EAAA9tB,GAA2B,OAAAp2C,GAAa,UAAiE,IAAjE,IAAAwnE,EAAAvK,GAAAwK,yBAAkDmd,EAAA,GAAenlF,EAAA,EAAYA,EAAA+nE,EAAAlsD,SAAc7b,EAAKmlF,EAAAzqD,KAAAvJ,EAAA4e,GAAAg4B,EAAA/nE,IAAA,KAAAgxB,IAAsEm0D,EAAAzqD,KAAAvJ,EAAA4e,GAAA,MAAAg4B,EAAA/nE,IAAA,KAAAgxB,IAAuH,OAA3CyzC,EAAAlH,GAAAkH,aAAAlkE,GAAA4kF,EAA2CxuC,EAAA,GAAAA,GAAA8tB,EAAA5oD,QAAwC0hD,GAAAyH,YAAA,MAAqB,GAASP,EAAA9tB,GAA2B,QAA6B,OAA7B4mB,GAAAyH,YAAA,MAA6B,IAAquyDwgB,iCAA3tyD,WAA4Cj3D,EAAA,qDAAyD0B,IAAA,IAAsnyDw1D,kCAA5myD,WAA6Cl3D,EAAA,sDAA0D0B,IAAA,IAAqgyDy1D,gCAA3/xD,SAAAzvE,EAAAk0D,EAAAH,GAA8DA,EAAwCl5C,EAAAk5C,GAAA,GAAAxM,GAAAmoB,gBAAA1vE,EAAAk0D,GAA5B5M,GAAAyH,YAAA,OAAi7xD4gB,gCAA91xD,SAAA3vE,EAAAk0D,EAAAH,GAA8DA,EAAwCh7C,EAAAg7C,GAAA,GAAAxM,GAAAmoB,gBAAA1vE,EAAAk0D,GAA5B5M,GAAAyH,YAAA,OAAoxxD6gB,0CAAlsxD,SAAA1d,EAAAxxB,EAAAyqC,EAAAvlE,EAAAgT,EAAArsB,EAAAjC,GAAgG4nE,EAAA5K,GAAA+F,SAAA6E,GAA6B,IAAAlwC,EAAAulC,GAAA,4BAAA2K,EAAAxxB,GAA6D,GAAA1e,EAAA,CAAgB,GAAA13B,GAAA6gF,EAAA,GAAoB,IAAAE,EAAA7tD,EAAAwE,EAAA13B,OAAA6gF,GAAiEvlE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,MAA8BgT,IAAAG,EAAAH,GAAA,GAAAoJ,EAAApJ,MAAkCrsB,IAAAwsB,EAAAxsB,GAAA,GAAAy1B,EAAAz1B,QAA0ywDsjF,mCAAxwwD,SAAA3d,EAAAuZ,GAAwJ,OAAlFvZ,EAAA5K,GAAA+F,SAAA6E,GAA6BuZ,EAAAzvD,EAAAyvD,GAAqDlkB,GAAA,qBAAA2K,EAAAuZ,IAAgnwDqE,gCAAjjwD,SAAA5d,EAAA2Z,EAAAkE,EAAAjE,GAA2F,GAAAA,EAAgD,GAAAD,EAAA,OAAAkE,GAAA,GAAAjE,GAAyDxkB,GAAAyH,YAAA,UAAzD,CAAqFmD,EAAA5K,GAAA+F,SAAA6E,GAA0C,IAAb,IAAA8d,EAAA,GAAajmF,EAAA,EAAYA,EAAA8hF,EAAe9hF,IAAAimF,EAAAvrD,KAAAzI,EAAAjD,EAAAg3D,EAAA,EAAAhmF,GAAA,KAA+D,IAAA+rC,EAAAyxB,GAAA,kBAAA2K,EAAA8d,GAAqD,GAAAl6C,EAAkB,KAAAl8B,EAAAk8B,EAAAlwB,OAAsB,IAAA7b,EAAA,EAAYA,EAAA6P,EAAM7P,IAAKgvB,EAAA+yD,EAAA,EAAA/hF,GAAA,GAAA+rC,EAAA/rC,SAAzWu9D,GAAAyH,YAAA,OAAk8vDkhB,iCAAhjvD,SAAA/d,EAAA5nE,GAAqF,IAAA4lF,EAAA,EAAkB,SAA/C5lF,EAAA0xB,EAAA1xB,IAA+C+sB,QAAA,IAAA/sB,EAAAsb,OAAA,IAAyC,IAAAgtD,EAAAtoE,EAAA6rC,YAAA,KAA6Bg6C,EAAA7lF,EAAA+rB,MAAAu8C,EAAA,MAAmC,GAAAud,EAAAvqE,OAAA,IAAwBsqE,EAAA12D,SAAA22D,IAAiC,EAAkB,SAAU7lF,IAAA+rB,MAAA,EAAAu8C,GAAsB,IAAAN,EAAAhL,GAAAgH,aAAA4D,GAAoC,IAAAI,EAAY,SAAS,IAA2B8d,EAA3B9d,EAAA7E,SAA2BnjE,GAA6B,OAAA8lF,GAAAF,EAAAE,EAAA,GAA4CA,EAAA,GAAAF,GAAuC,GAAijuDG,2BAAt7sD,SAAAne,EAAA/6C,EAAA48C,GAA6DD,GAAA5B,EAAA/6C,EAAA48C,EAAA,UAAy3sDuc,2BAA9zsD,SAAApe,EAAA/6C,EAAA48C,GAA6DD,GAAA5B,EAAA/6C,EAAA48C,EAAA,YAAiwsDwc,4BAApssD,SAAAre,EAAA/6C,EAAA48C,GAA8DD,GAAA5B,EAAA/6C,EAAA48C,EAAA,YAAsosDyc,iCAA9yqD,SAAA9vC,EAAAwzB,EAAAH,GAA8DE,GAAAvzB,EAAAwzB,EAAAH,EAAA,YAAgvqD0c,kCAAnrqD,SAAA/vC,EAAAwzB,EAAAH,GAA+DE,GAAAvzB,EAAAwzB,EAAAH,EAAA,YAAonqD2c,sCAAvjqD,SAAAhwC,EAAAwzB,EAAA1e,GAAoEA,EAAyCz8B,EAAAy8B,GAAA,GAAA+R,GAAAopB,sBAAAjwC,EAAAwzB,GAA5B5M,GAAAyH,YAAA,OAAs+pD6hB,gCAA94pD,SAAAlwC,EAAAwzB,EAAAH,GAA6DE,GAAAvzB,EAAAwzB,EAAAH,EAAA,UAAi1pD8c,gCAAtxpD,SAAAnwC,EAAAwzB,EAAAH,GAA6DE,GAAAvzB,EAAAwzB,EAAAH,EAAA,mBAAytpD+c,mBAArppD,SAAA9xE,EAAAC,GAAmCsoD,GAAA,KAAAvoD,EAAAC,IAAknpD8xE,uBAA7lpD,SAAA96D,GAAwC,IAAAppB,EAAAy6D,GAAA6F,QAAAl3C,GAAyB,OAAAppB,EAAe06D,GAAAypB,SAAAnkF,GAAf,GAA4hpDokF,wBAAp/oD,SAAAjyE,GAAqC,OAAAuoD,GAAA,UAAAvoD,IAA+8oDkyE,yBAAj7oD,WAAoC54D,EAAA,6CAAiD0B,IAAA,IAA41oDm3D,4BAAl1oD,SAAA/N,GAAkD,IAAAgO,EAAA9pB,GAAAgG,aAAA8V,GAAoC,OAAAgO,EAAgB7pB,GAAA8pB,cAAAD,GAAhB,GAA4voDE,wBAA7soD,SAAApf,GAAuE,OAA7BA,EAAA5K,GAAA+F,SAAA6E,IAAkD3K,GAAAgqB,UAAArf,GAArB,GAAsooDsf,6BAAjloD,SAAAhO,GAAoD,IAAAiO,EAAAnqB,GAAAiG,cAAAiW,GAAsC,OAAAiO,EAAgBlqB,GAAAmqB,eAAAD,GAAhB,GAAu/nDE,uBAAv8nD,SAAAviB,GAAwC,IAAAtjE,EAAAw7D,GAAAoG,QAAA0B,GAAyB,OAAAtjE,EAAey7D,GAAAqqB,SAAA9lF,GAAf,GAAs4nD+lF,wBAA91nD,SAAAlO,GAA2E,OAAjCA,EAAArc,GAAAkG,SAAAmW,IAAsDpc,GAAAuqB,UAAAnO,GAArB,GAAmxnDoO,4BAA9tnD,SAAAlyB,GAA4C,IAAA4R,EAAAnK,GAAAqG,KAAA9N,GAAuB,OAAA4R,EAAiBlK,GAAA,cAAAkK,GAAjB,GAA2pnDugB,wBAAvmnD,SAAAhzE,GAAqCuoD,GAAA,UAAAvoD,IAAkknDizE,0BAA3inD,SAAA/f,GAA4C3K,GAAA2qB,YAAA5qB,GAAA+F,SAAA6E,IAAwC5K,GAAAgH,aAAA4D,GAAA,KAA8B5K,GAAA2K,qBAAAC,IAAy7mDigB,2BAAx5mD,WAAsC,sKAAk3mDC,0BAA7smD,WAAqC95D,EAAA,8CAAkD0B,IAAA,IAAsnmDq4D,yBAA5mmD,WAAoC,oKAAwkmDC,4BAAr6lD,WAAuCh6D,EAAA,gDAAoD0B,IAAA,IAA00lDu4D,0BAAh0lD,SAAAre,EAAAse,GAAgD,MAAAte,EAAgB5M,GAAAoH,cAAA8jB,EAAuB,MAAAte,IAAqB5M,GAAAqH,gBAAA6jB,GAAyBjrB,GAAAkrB,YAAAve,EAAAse,IAA2rlDE,4BAA5plD,SAAA1zE,EAAAC,GAA4CsoD,GAAA,cAAAvoD,EAAAC,IAAgnlD0zE,yBAA7vgD,SAAA/9E,EAAAC,EAAAuC,EAAAC,EAAAs9D,EAAApoE,EAAAqoE,GAAuE,GAAAtN,GAAAuG,eAAA2C,0BAAgDjJ,GAAAqb,8BAAwCrb,GAAAqrB,WAAAh+E,EAAAC,EAAAuC,EAAAC,EAAAs9D,EAAApoE,EAAAqoE,GAA2DrN,GAAAqrB,WAAAh+E,EAAAC,EAAAuC,EAAAC,EAAAs9D,EAAApoE,EAAAyoE,GAAAzoE,GAAAqoE,GAAAK,GAAA1oE,QAAnJ,CAA0R,IAAAsmF,EAAAne,GAAAnoE,EAAAooE,EAAAv9D,EAAAC,EAAAu9D,GAAqFie,EAA2CtrB,GAAAqrB,WAAAh+E,EAAAC,EAAAuC,EAAAC,EAAAs9D,EAAApoE,EAAAsmF,GAA5BvrB,GAAAyH,YAAA,QAAwz/C+jB,oCAAnu/C,aAAmu/CC,kCAAnr/C,SAAA/zE,EAAAC,EAAAzJ,EAAAuuE,GAAwDxc,GAAA,oBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAA2n/CiP,sBAAjl/C,WAAiC16D,EAAA,0CAA8C0B,IAAA,IAAkg/Ci5D,6BAAx/+C,SAAAjoF,EAAA4C,GAAoD25D,GAAA2rB,eAAAloF,IAAA4C,IAAo8+CulF,sBAA/5+C,SAAAn0E,EAAAC,EAAAzJ,EAAAuuE,GAA4Cxc,GAAA,QAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAm3+CqP,2BAAr1+C,WAAsC9rB,GAAAyH,YAAA,OAA+y+CskB,2BAA1x+C,SAAAjkB,EAAA3pD,EAAA4pD,EAAAzpD,GAAgE,IAAA0pD,EAAAhI,GAAA6H,UAAAC,EAAA3pD,EAAA4pD,EAAAzpD,GAAoD2hD,GAAA+rB,aAAAhsB,GAAAoG,QAAA0B,GAAAE,IAAsq+CikB,0BAAxn+C,SAAAv0E,EAAAC,EAAAzJ,GAA6C+xD,GAAA,YAAAvoD,EAAAC,EAAAzJ,IAA2k+Cg+E,kCAA5i+C,SAAAx0E,EAAAC,EAAAzJ,EAAAuuE,GAAwDxc,GAAA,oBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAo/9C0P,0BAA189C,SAAAz0E,GAAuCuoD,GAAA,YAAAvoD,IAAm69C00E,kCAA149C,SAAA10E,EAAAC,GAAkDsoD,GAAA,oBAAAvoD,EAAAC,IAAw19C00E,wBAApz9C,SAAA30E,EAAAC,EAAAzJ,GAA2C+xD,GAAA,UAAAvoD,EAAAC,EAAAzJ,IAAyw9Co+E,gCAA5u9C,SAAA50E,EAAAC,EAAAzJ,EAAAuuE,GAAsDxc,GAAA,kBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAsr9C8P,8BAA9o9C,WAAyCv7D,EAAA,kDAAsD0B,IAAA,IAA+i9C85D,yBAAri9C,SAAA9zE,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA4uE,EAAAtR,EAAApoE,EAAAqoE,GAAsG,GAAAtN,GAAAuG,eAAA2C,0BAAgDjJ,GAAAsb,gCAA0Ctb,GAAAwsB,WAAA/zE,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA4uE,EAAAtR,EAAApoE,EAAAqoE,GAAqF,GAAAA,EAAmBrN,GAAAwsB,WAAA/zE,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA4uE,EAAAtR,EAAApoE,EAAAyoE,GAAAzoE,GAAAqoE,GAAAK,GAAA1oE,IAAoKg7D,GAAAwsB,WAAA/zE,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA4uE,EAAAtR,EAAApoE,EAAA,UAAtW,CAAgc,IAAAsmF,EAAA,KAAmBje,IAAAie,EAAAne,GAAAnoE,EAAAooE,EAAAv9D,EAAAC,EAAAu9D,IAAmGrN,GAAAwsB,WAAA/zE,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA4uE,EAAAtR,EAAApoE,EAAAsmF,KAAy47CmB,yBAAjz7C,SAAAh0E,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA48E,EAAAhO,EAAAtR,EAAApoE,EAAAqoE,GAA4GrN,GAAAsb,gCAA0Ctb,GAAA,WAAAvnD,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA48E,EAAAhO,EAAAtR,EAAApoE,EAAAqoE,GAA8F,GAAAA,EAAmBrN,GAAA,WAAAvnD,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA48E,EAAAhO,EAAAtR,EAAApoE,EAAAyoE,GAAAzoE,GAAAqoE,GAAAK,GAAA1oE,IAA6Kg7D,GAAA,WAAAvnD,EAAAgmE,EAAAnR,EAAAz9D,EAAAC,EAAA48E,EAAAhO,EAAAtR,EAAApoE,EAAA,OAA636C2nF,8BAAhy6C,WAAyC57D,EAAA,kDAAsD0B,IAAA,IAAis6Cm6D,+BAAvr6C,WAA0C77D,EAAA,mDAAuD0B,IAAA,IAAsl6Co6D,4BAA5k6C,SAAAp1E,EAAAC,EAAAzJ,GAA+C+xD,GAAA,cAAAvoD,EAAAC,EAAAzJ,IAA6h6C6+E,6BAA5/5C,SAAAr0E,EAAAk0D,EAAAH,GAA2D,IAAAye,EAAA33D,EAAAk5C,GAAA,GAA6BxM,GAAA+sB,cAAAt0E,EAAAk0D,EAAAse,IAAo65C+B,4BAA535C,SAAAv1E,EAAAC,EAAAzJ,GAA+C+xD,GAAA,cAAAvoD,EAAAC,EAAAzJ,IAA605Cg/E,6BAA5y5C,SAAAx0E,EAAAk0D,EAAAH,GAA2D,IAAAye,EAAAz5D,EAAAg7C,GAAA,GAA4BxM,GAAAktB,cAAAz0E,EAAAk0D,EAAAse,IAAqt5CkC,2BAA7q5C,SAAA11E,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,GAAoDhf,GAAA,aAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,IAAyn5CoO,2BAAnl5C,SAAA31E,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,GAAuDjf,GAAA,aAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,IAA4h5CoO,4BAAn/4C,SAAA50E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAAqoE,GAAmG,GAAAtN,GAAAuG,eAAA2C,0BAAgDjJ,GAAAsb,gCAA0Ctb,GAAAstB,cAAA70E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAAqoE,GAAkF,GAAAA,EAAmBrN,GAAAstB,cAAA70E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAAyoE,GAAAzoE,GAAAqoE,GAAAK,GAAA1oE,IAAiKg7D,GAAAstB,cAAA70E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAA,UAAhW,CAAub,IAAAsmF,EAAA,KAAmBje,IAAAie,EAAAne,GAAAnoE,EAAAooE,EAAAv9D,EAAAC,EAAAu9D,IAAsFrN,GAAAstB,cAAA70E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAAsmF,KAAg33CiC,4BAA3x3C,SAAA90E,EAAAgmE,EAAAI,EAAAC,EAAA0O,EAAA39E,EAAAC,EAAA48E,EAAAtf,EAAApoE,EAAAqoE,GAAiHrN,GAAAsb,gCAA0Ctb,GAAA,cAAAvnD,EAAAgmE,EAAAI,EAAAC,EAAA0O,EAAA39E,EAAAC,EAAA48E,EAAAtf,EAAApoE,EAAAqoE,GAAmG,GAAAA,EAAmBrN,GAAA,cAAAvnD,EAAAgmE,EAAAI,EAAAC,EAAA0O,EAAA39E,EAAAC,EAAA48E,EAAAtf,EAAApoE,EAAAyoE,GAAAzoE,GAAAqoE,GAAAK,GAAA1oE,IAAkLg7D,GAAA,cAAAvnD,EAAAgmE,EAAAI,EAAAC,EAAA0O,EAAA39E,EAAAC,EAAA48E,EAAAtf,EAAApoE,EAAA,OAAw12CyoF,wCAAtv2C,SAAA9iB,EAAAzsD,EAAAwvE,EAAAC,GAAoFhjB,EAAA5K,GAAA+F,SAAA6E,GAAyC,IAAZ,IAAAijB,EAAA,GAAYprF,EAAA,EAAYA,EAAA0b,EAAQ1b,IAAAorF,EAAA1wD,KAAAzI,EAAAjD,EAAAk8D,EAAA,EAAAlrF,GAAA,KAA0Dw9D,GAAA,0BAAA2K,EAAAijB,EAAAD,IAA2i2CE,wBAA/+1C,SAAAj+D,EAAAroB,GAA8Cy4D,GAAA8tB,UAAA/tB,GAAAmG,SAAAt2C,GAAAroB,IAAi81CwmF,yBAAv51C,SAAAn+D,EAAA1R,EAAAza,GAAwD,GAAAs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAAguB,WAAAjuB,GAAAmG,SAAAt2C,GAAA0D,EAAA7vB,GAAA,EAAAya,OAAhD,CAAsH,IAAAkH,EAAS,GAAAlH,GAAA6hD,GAAAuH,sBAAA,CAAoCliD,EAAA26C,GAAAwH,oBAAArpD,EAAA,GAAqC,QAAA1b,EAAA,EAAYA,EAAA0b,IAAQ1b,EAAK4iB,EAAA5iB,GAAA8wB,EAAA7vB,EAAA,EAAAjB,GAAA,QAAoC4iB,EAAAkO,EAAAc,SAAA3wB,GAAA,EAAAA,EAAA,EAAAya,GAAA,GAAiD8hD,GAAAguB,WAAAjuB,GAAAmG,SAAAt2C,GAAAxK,KAAyi1C6oE,wBAA5/0C,SAAAr+D,EAAAroB,GAA8Cy4D,GAAAkuB,UAAAnuB,GAAAmG,SAAAt2C,GAAAroB,IAA880C4mF,yBAAp60C,SAAAv+D,EAAA1R,EAAAza,GAAwDs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAAouB,WAAAruB,GAAAmG,SAAAt2C,GAAA4B,EAAA/tB,GAAA,EAAAya,GAAqE8hD,GAAAouB,WAAAruB,GAAAmG,SAAAt2C,GAAA4B,EAAA4C,SAAA3wB,GAAA,EAAAA,EAAA,EAAAya,GAAA,KAAuv0CmwE,yBAApq0C,SAAAz+D,EAAAroB,GAA+Cy4D,GAAAsuB,WAAAvuB,GAAAmG,SAAAt2C,GAAAroB,IAAqn0CgnF,wBAA1k0C,SAAA3+D,EAAAroB,EAAAC,GAAiDw4D,GAAAwuB,UAAAzuB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,IAAyh0CinF,yBAA5+zC,SAAA7+D,EAAA1R,EAAAza,GAAwD,GAAAs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAA0uB,WAAA3uB,GAAAmG,SAAAt2C,GAAA0D,EAAA7vB,GAAA,IAAAya,OAAhD,CAAwH,IAAAkH,EAAS,KAAAlH,GAAA6hD,GAAAuH,sBAAA,CAAsCliD,EAAA26C,GAAAwH,oBAAA,EAAArpD,EAAA,GAAuC,QAAA1b,EAAA,EAAYA,EAAA,EAAA0b,EAAU1b,GAAA,EAAM4iB,EAAA5iB,GAAA8wB,EAAA7vB,EAAA,EAAAjB,GAAA,GAA8B4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,YAA0C4iB,EAAAkO,EAAAc,SAAA3wB,GAAA,EAAAA,EAAA,EAAAya,GAAA,GAAiD8hD,GAAA0uB,WAAA3uB,GAAAmG,SAAAt2C,GAAAxK,KAAilzCupE,wBAApizC,SAAA/+D,EAAAroB,EAAAC,GAAiDw4D,GAAA4uB,UAAA7uB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,IAAm/yCqnF,yBAAt8yC,SAAAj/D,EAAA1R,EAAAza,GAAwDs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAA8uB,WAAA/uB,GAAAmG,SAAAt2C,GAAA4B,EAAA/tB,GAAA,IAAAya,GAAuE8hD,GAAA8uB,WAAA/uB,GAAAmG,SAAAt2C,GAAA4B,EAAA4C,SAAA3wB,GAAA,EAAAA,EAAA,EAAAya,GAAA,KAAuxyC6wE,yBAApsyC,SAAAn/D,EAAAroB,EAAAC,GAAkDw4D,GAAAgvB,WAAAjvB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,IAAkpyCynF,wBAApmyC,SAAAr/D,EAAAroB,EAAAC,EAAAwY,GAAoDggD,GAAAkvB,UAAAnvB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,EAAAwY,IAAgjyCmvE,yBAAhgyC,SAAAv/D,EAAA1R,EAAAza,GAAwD,GAAAs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAAovB,WAAArvB,GAAAmG,SAAAt2C,GAAA0D,EAAA7vB,GAAA,IAAAya,OAAhD,CAAwH,IAAAkH,EAAS,KAAAlH,GAAA6hD,GAAAuH,sBAAA,CAAsCliD,EAAA26C,GAAAwH,oBAAA,EAAArpD,EAAA,GAAuC,QAAA1b,EAAA,EAAYA,EAAA,EAAA0b,EAAU1b,GAAA,EAAM4iB,EAAA5iB,GAAA8wB,EAAA7vB,EAAA,EAAAjB,GAAA,GAA8B4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,YAA0C4iB,EAAAkO,EAAAc,SAAA3wB,GAAA,EAAAA,EAAA,GAAAya,GAAA,GAAkD8hD,GAAAovB,WAAArvB,GAAAmG,SAAAt2C,GAAAxK,KAAgkxCiqE,wBAAnhxC,SAAAz/D,EAAAroB,EAAAC,EAAAwY,GAAoDggD,GAAAsvB,UAAAvvB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,EAAAwY,IAA+9wCuvE,yBAA/6wC,SAAA3/D,EAAA1R,EAAAza,GAAwDs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAAwvB,WAAAzvB,GAAAmG,SAAAt2C,GAAA4B,EAAA/tB,GAAA,IAAAya,GAAuE8hD,GAAAwvB,WAAAzvB,GAAAmG,SAAAt2C,GAAA4B,EAAA4C,SAAA3wB,GAAA,EAAAA,EAAA,GAAAya,GAAA,KAAgwwCuxE,yBAA5qwC,SAAA7/D,EAAAroB,EAAAC,EAAAwY,GAAqDggD,GAAA0vB,WAAA3vB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,EAAAwY,IAAunwC2vE,wBAAtkwC,SAAA//D,EAAAroB,EAAAC,EAAAwY,EAAAC,GAAuD+/C,GAAA4vB,UAAA7vB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,EAAAwY,EAAAC,IAA+gwC4vE,yBAA59vC,SAAAjgE,EAAA1R,EAAAza,GAAwD,GAAAs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAA8vB,WAAA/vB,GAAAmG,SAAAt2C,GAAA0D,EAAA7vB,GAAA,IAAAya,OAAhD,CAAwH,IAAAkH,EAAS,KAAAlH,GAAA6hD,GAAAuH,sBAAA,CAAsCliD,EAAA26C,GAAAwH,oBAAA,EAAArpD,EAAA,GAAuC,QAAA1b,EAAA,EAAYA,EAAA,EAAA0b,EAAU1b,GAAA,EAAM4iB,EAAA5iB,GAAA8wB,EAAA7vB,EAAA,EAAAjB,GAAA,GAA8B4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,aAA2C4iB,EAAAkO,EAAAc,SAAA3wB,GAAA,EAAAA,EAAA,GAAAya,GAAA,GAAkD8hD,GAAA8vB,WAAA/vB,GAAAmG,SAAAt2C,GAAAxK,KAAu/uC2qE,wBAA18uC,SAAAngE,EAAAroB,EAAAC,EAAAwY,EAAAC,GAAuD+/C,GAAAgwB,UAAAjwB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,EAAAwY,EAAAC,IAAm5uCgwE,yBAAh2uC,SAAArgE,EAAA1R,EAAAza,GAAwDs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAAkwB,WAAAnwB,GAAAmG,SAAAt2C,GAAA4B,EAAA/tB,GAAA,IAAAya,GAAuE8hD,GAAAkwB,WAAAnwB,GAAAmG,SAAAt2C,GAAA4B,EAAA4C,SAAA3wB,GAAA,EAAAA,EAAA,GAAAya,GAAA,KAAiruCiyE,yBAA7luC,SAAAvgE,EAAAroB,EAAAC,EAAAwY,EAAAC,GAAwD+/C,GAAAowB,WAAArwB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,EAAAwY,EAAAC,IAAqiuCowE,kCAAj/tC,SAAA1lB,EAAAsZ,EAAAqM,GAA0F3lB,EAAA5K,GAAA+F,SAAA6E,GAA6B3K,GAAA,oBAAA2K,EAAAsZ,EAAAqM,IAA03tCC,+BAA9ytC,SAAA3gE,EAAA1R,EAAA/X,EAAA1C,GAAwE,GAAAs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAAwwB,iBAAAzwB,GAAAmG,SAAAt2C,KAAAzpB,EAAAmtB,EAAA7vB,GAAA,IAAAya,OAAhD,CAA0I,IAAAkH,EAAS,KAAAlH,GAAA6hD,GAAAuH,sBAAA,CAAsCliD,EAAA26C,GAAAwH,oBAAA,EAAArpD,EAAA,GAAuC,QAAA1b,EAAA,EAAYA,EAAA,EAAA0b,EAAU1b,GAAA,EAAM4iB,EAAA5iB,GAAA8wB,EAAA7vB,EAAA,EAAAjB,GAAA,GAA8B4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,aAA2C4iB,EAAAkO,EAAAc,SAAA3wB,GAAA,EAAAA,EAAA,GAAAya,GAAA,GAAkD8hD,GAAAwwB,iBAAAzwB,GAAAmG,SAAAt2C,KAAAzpB,EAAAif,KAAuysCqrE,+BAAxusC,SAAA7gE,EAAA1R,EAAA/X,EAAA1C,GAAwE,GAAAs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAA0wB,iBAAA3wB,GAAAmG,SAAAt2C,KAAAzpB,EAAAmtB,EAAA7vB,GAAA,IAAAya,OAAhD,CAA0I,IAAAkH,EAAS,KAAAlH,GAAA6hD,GAAAuH,sBAAA,CAAsCliD,EAAA26C,GAAAwH,oBAAA,EAAArpD,EAAA,GAAuC,QAAA1b,EAAA,EAAYA,EAAA,EAAA0b,EAAU1b,GAAA,EAAM4iB,EAAA5iB,GAAA8wB,EAAA7vB,EAAA,EAAAjB,GAAA,GAA8B4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,aAA2C4iB,EAAAkO,EAAAc,SAAA3wB,GAAA,EAAAA,EAAA,GAAAya,GAAA,GAAkD8hD,GAAA0wB,iBAAA3wB,GAAAmG,SAAAt2C,KAAAzpB,EAAAif,KAAwirCurE,+BAAz+qC,SAAA/gE,EAAA1R,EAAA/X,EAAA1C,GAAwE,GAAAs8D,GAAAuG,eAAA2C,0BAAgDjJ,GAAA4wB,iBAAA7wB,GAAAmG,SAAAt2C,KAAAzpB,EAAAmtB,EAAA7vB,GAAA,KAAAya,OAAhD,CAA2I,IAAAkH,EAAS,MAAAlH,GAAA6hD,GAAAuH,sBAAA,CAAuCliD,EAAA26C,GAAAwH,oBAAA,GAAArpD,EAAA,GAAwC,QAAA1b,EAAA,EAAYA,EAAA,GAAA0b,EAAW1b,GAAA,GAAO4iB,EAAA5iB,GAAA8wB,EAAA7vB,EAAA,EAAAjB,GAAA,GAA8B4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,OAAoC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,GAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAqC4iB,EAAA5iB,EAAA,IAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAsC4iB,EAAA5iB,EAAA,IAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAsC4iB,EAAA5iB,EAAA,IAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAsC4iB,EAAA5iB,EAAA,IAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAsC4iB,EAAA5iB,EAAA,IAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,QAAsC4iB,EAAA5iB,EAAA,IAAA8wB,EAAA7vB,GAAA,EAAAjB,EAAA,aAA4C4iB,EAAAkO,EAAAc,SAAA3wB,GAAA,EAAAA,EAAA,GAAAya,GAAA,GAAkD8hD,GAAA4wB,iBAAA7wB,GAAAmG,SAAAt2C,KAAAzpB,EAAAif,KAA2hpCyrE,yBAA59oC,SAAAlmB,GAA2C3K,GAAA8wB,WAAAnmB,EAAA5K,GAAA+F,SAAA6E,GAAA,OAAi7oComB,8BAA73oC,SAAApmB,GAAgD3K,GAAAgxB,gBAAAjxB,GAAA+F,SAAA6E,KAA60oCsmB,6BAAjyoC,SAAAx5E,EAAAC,GAA6CsoD,GAAA,eAAAvoD,EAAAC,IAAovoCw5E,8BAArtoC,SAAA/3C,EAAA7xC,GAAgD04D,GAAAmxB,eAAAh4C,EAAA7lB,EAAAhsB,GAAA,KAAqqoC8pF,6BAA3noC,SAAA35E,EAAAC,EAAAzJ,GAAgD+xD,GAAA,eAAAvoD,EAAAC,EAAAzJ,IAA2koCojF,8BAAzioC,SAAAl4C,EAAA7xC,GAAgD04D,GAAAsxB,eAAAn4C,EAAA7lB,EAAAhsB,GAAA,GAAAgsB,EAAAhsB,EAAA,QAAy/nCiqF,6BAA/7nC,SAAA95E,EAAAC,EAAAzJ,EAAAuuE,GAAmDxc,GAAA,eAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAA44nCgV,8BAAv2nC,SAAAr4C,EAAA7xC,GAAgD04D,GAAAyxB,eAAAt4C,EAAA7lB,EAAAhsB,GAAA,GAAAgsB,EAAAhsB,EAAA,MAAAgsB,EAAAhsB,EAAA,QAAuznCoqF,6BAA7unC,SAAAj6E,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,GAAsDhf,GAAA,eAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,IAAurnC2S,8BAA/onC,SAAAx4C,EAAA7xC,GAAgD04D,GAAA4xB,eAAAz4C,EAAA7lB,EAAAhsB,GAAA,GAAAgsB,EAAAhsB,EAAA,MAAAgsB,EAAAhsB,EAAA,MAAAgsB,EAAAhsB,EAAA,SAA+lnCuqF,kCAApgnC,SAAA14C,EAAA0wB,GAA0D7J,GAAA,oBAAA7mB,EAAA0wB,IAA08mCioB,8BAA95mC,WAAyC/gE,EAAA,kDAAsD0B,IAAA,IAA+zmCs/D,+BAArzmC,WAA0ChhE,EAAA,mDAAuD0B,IAAA,IAAotmCu/D,+BAA1smC,WAA0CjhE,EAAA,mDAAuD0B,IAAA,IAAymmCw/D,gCAA/lmC,WAA2ClhE,EAAA,oDAAwD0B,IAAA,IAA4/lCy/D,8BAAl/lC,WAAyCnhE,EAAA,kDAAsD0B,IAAA,IAAm5lC0/D,+BAAz4lC,WAA0CphE,EAAA,mDAAuD0B,IAAA,IAAwylC2/D,+BAA9xlC,WAA0CrhE,EAAA,mDAAuD0B,IAAA,IAA6rlC4/D,gCAAnrlC,WAA2CthE,EAAA,oDAAwD0B,IAAA,IAAgllC6/D,8BAAtklC,WAAyCvhE,EAAA,kDAAsD0B,IAAA,IAAu+kC8/D,+BAA79kC,WAA0CxhE,EAAA,mDAAuD0B,IAAA,IAA43kC+/D,+BAAl3kC,WAA0CzhE,EAAA,mDAAuD0B,IAAA,IAAixkCggE,gCAAvwkC,WAA2C1hE,EAAA,oDAAwD0B,IAAA,IAAoqkCigE,+BAA1pkC,WAA0C3hE,EAAA,mDAAuD0B,IAAA,IAAyjkCkgE,8BAA/ikC,SAAAl7E,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,GAAuDhf,GAAA,gBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,IAAw/jC4T,+BAA/8jC,SAAAz5C,EAAA7xC,GAAiD04D,GAAA6yB,gBAAA15C,EAAA3nB,EAAAlqB,GAAA,GAAAkqB,EAAAlqB,EAAA,MAAAkqB,EAAAlqB,EAAA,MAAAkqB,EAAAlqB,EAAA,SAA85jCwrF,+BAAt0jC,WAA0C/hE,EAAA,mDAAuD0B,IAAA,IAAqujCsgE,gCAA3tjC,WAA2ChiE,EAAA,oDAAwD0B,IAAA,IAAwnjCugE,+BAA9mjC,SAAAv7E,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,GAAwDhf,GAAA,iBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,IAAsjjCiU,gCAA5gjC,SAAA95C,EAAA7xC,GAAkD04D,GAAAkzB,iBAAA/5C,EAAAxiB,EAAArvB,GAAA,GAAAqvB,EAAArvB,EAAA,MAAAqvB,EAAArvB,EAAA,MAAAqvB,EAAArvB,EAAA,SAA09iC6rF,gCAA73iC,WAA2CpiE,EAAA,oDAAwD0B,IAAA,IAA0xiC2gE,mCAAhxiC,SAAAj6C,EAAA9nB,EAAArsB,EAAAgZ,EAAA2U,GAAwEqtC,GAAAqzB,qBAAAl6C,EAAA9nB,EAAArsB,EAAAgZ,EAAA2U,IAAwsiC2gE,kCAAjpiC,SAAAn6C,EAAA9nB,EAAArsB,EAAAuuF,EAAAv1E,EAAA2U,GAAkFqtC,GAAAwzB,oBAAAr6C,EAAA9nB,EAAArsB,IAAAuuF,EAAAv1E,EAAA2U,IAA+jiC8gE,4BAA5/hC,WAAuC,uKAAq9hCC,uBAA/yhC,SAAAj8E,EAAAC,EAAAzJ,EAAAuuE,GAA6Cxc,GAAA,SAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAkwhCmX,uBAAt1e,SAAAC,EAAAlkE,EAAAmkE,GAA4F,OAA9Cx/D,EAAAnuB,IAAAmuB,EAAAD,SAAA1E,IAAAmkE,GAAAD,GAA8CA,GAA0ve74B,6BAAAjB,oCAAAg6B,iBAAnuhC,SAAAr8E,GAA8BuoD,GAAA,cAAAvoD,IAAqshCs8E,gBAA1qhC,SAAAppB,EAAA9C,GAAyC7H,GAAA8a,aAAA/a,GAAA+F,SAAA6E,GAAA5K,GAAAoG,QAAA0B,KAAiohCmsB,cAArkhC,SAAAv7E,EAAAiW,GAAsC,IAAA0sD,EAAA1sD,EAAAqxC,GAAA6F,QAAAl3C,GAAA,KAA6C,OAAAjW,EAAkBunD,GAAAqb,8BAAA3sD,EAA2C,OAAAjW,IAAuBunD,GAAAsb,gCAAA5sD,GAA6CsxC,GAAAub,WAAA9iE,EAAA2iE,IAAi3gC6Y,mBAA90gC,SAAAx7E,EAAA0gC,EAAAzqB,EAAAzQ,EAAAy9D,GAAgE,IAAAN,EAAA1sD,EAAAqxC,GAAA6F,QAAAl3C,GAAA,KAA6CsxC,GAAA,gBAAAvnD,EAAA0gC,EAAAiiC,EAAAn9D,EAAAy9D,IAAiugCwY,mBAAjqgC,SAAAz7E,EAAAojE,GAAgD7b,GAAA8b,gBAAArjE,EAAAojE,EAAA9b,GAAAgG,aAAA8V,GAAA,OAAingCsY,oBAArigC,SAAA17E,EAAAwjE,GAAkDjc,GAAAkc,iBAAAzjE,EAAAwjE,EAAAlc,GAAAiG,cAAAiW,GAAA,OAAm//BmY,eAAn6/B,SAAAC,EAAAC,GAAsCt0B,GAAA,YAAAq0B,EAAAC,EAAAv0B,GAAA2G,SAAA4tB,GAAA,OAA63/BC,eAAh0/B,SAAA97E,EAAA2jE,GAAwCpc,GAAAqc,YAAA5jE,EAAA2jE,EAAArc,GAAAkG,SAAAmW,GAAA,OAAwx/BoY,mBAA5t/B,SAAAtqB,GAAiClK,GAAA,gBAAAD,GAAAqG,KAAA8D,KAA2r/BuqB,yBAApp/B,SAAAh9E,EAAAC,GAAyCsoD,GAAA,sBAAAvoD,EAAAC,IAA2m/Bg9E,qBAArk/B,SAAAj9E,EAAAC,EAAAzJ,EAAAuuE,GAA2Cxc,GAAA,kBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAA0h/BmY,mBAAl/+B,SAAAl9E,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,EAAAC,EAAAC,EAAAyV,EAAAC,GAA2D70B,GAAA,gBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,EAAAC,EAAAC,EAAAyV,EAAAC,IAAu7+BC,cAA/3+B,SAAAr8E,EAAA4Y,EAAAlC,EAAA2tD,GAA+C,GAAA3tD,EAA8C,CAAK,GAAA4wC,GAAAuG,eAAA2C,0BAAgG,YAAhDjJ,GAAA+c,WAAAtkE,EAAA4b,EAAAyoD,EAAA3tD,EAAAkC,GAAuD2uC,GAAA+c,WAAAtkE,EAAA4b,EAAAD,SAAAjF,IAAAkC,GAAAyrD,QAAhJ9c,GAAA+c,WAAAtkE,EAAA4Y,EAAAyrD,IAAs0+BiY,iBAAtn+B,SAAAt8E,EAAAwF,EAAAoT,EAAAlC,GAAmD4wC,GAAAuG,eAAA2C,0BAAgDjJ,GAAAid,cAAAxkE,EAAAwF,EAAAoW,EAAAlF,EAAAkC,GAA2D2uC,GAAAid,cAAAxkE,EAAAwF,EAAAoW,EAAAD,SAAAjF,IAAAkC,KAAw99B2jE,SAAr59B,SAAAv9E,GAAsBuoD,GAAA,MAAAvoD,IAA+39Bw9E,cAA529B,SAAAx9E,EAAAC,EAAAzJ,EAAAuuE,GAAoCxc,GAAA,WAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAw09B0Y,eAAvy9B,SAAAz9E,GAA4BuoD,GAAA,WAAAvoD,IAA2w9B09E,gBAAnv9B,SAAA19E,GAA6BuoD,GAAA,aAAAvoD,IAAst9B29E,aAA5r9B,SAAApX,EAAAC,EAAAC,EAAAre,GAA4CG,GAAAme,YAAAH,IAAAC,IAAAC,IAAAre,IAAgp9Bw1B,iBAAlm9B,SAAAxtB,GAAkC7H,GAAAue,cAAAxe,GAAAoG,QAAA0B,KAAgk9BytB,2BAAxh9B,SAAA78E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAAuR,EAAAxvD,GAAqG4wC,GAAAuG,eAAA2C,0BAAgDjJ,GAAA,wBAAAvnD,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAA/4C,EAAAlF,EAAAwvD,GAAgH3e,GAAA,wBAAAvnD,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAAj+C,EAAAkF,EAAAD,SAAAjF,IAAAwvD,GAAA,OAAmx8B4W,iBAAjp8B,WAA4B,IAAAx7D,EAAAgmC,GAAA2H,SAAA3H,GAAA+F,UAAgC6E,EAAA3K,GAAAsf,gBAA0E,OAAxC3U,EAAA5nE,KAAAg3B,EAAgBgmC,GAAA+F,SAAA/rC,GAAA4wC,EAAwB5wC,GAA2g8By7D,gBAAjg8B,SAAAhW,GAAqC,IAAAzlD,EAAAgmC,GAAA2H,SAAA3H,GAAAoG,SAA6E,OAA9CpG,GAAAoG,QAAApsC,GAAAimC,GAAAyf,aAAAD,GAA8CzlD,GAA+47B07D,YAAr47B,SAAAh+E,GAAyBuoD,GAAA,SAAAvoD,IAA427Bi+E,iBAAt17B,SAAAzxF,EAAA2hE,GAAqC,QAAApjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAAo0C,EAAA,EAAApjE,GAAA,GAA8BksB,EAAAqxC,GAAA6F,QAAA7rC,GAA0BrL,IAAoBsxC,GAAA4f,aAAAlxD,GAA2BA,EAAA3rB,KAAA,EAAcg9D,GAAA6F,QAAA7rC,GAAA,KAAoBA,GAAAgmC,GAAA8f,kBAAA9f,GAAA8f,gBAAA,GAA+C9lD,GAAAgmC,GAAA+f,yBAAA/f,GAAA+f,uBAAA,MAAom7B6V,sBAAti7B,SAAA1xF,EAAA8hE,GAA+C,QAAAvjE,EAAA,EAAYA,EAAAyB,IAAIzB,EAAA,CAAK,IAAAu3B,EAAAvI,EAAAu0C,EAAA,EAAAvjE,GAAA,GAAmCq5E,EAAA9b,GAAAgG,aAAAhsC,GAAoC8hD,IAAyB7b,GAAAggB,kBAAAnE,GAAqCA,EAAA94E,KAAA,EAAmBg9D,GAAAgG,aAAAhsC,GAAA,QAA006B67D,iBAAhz6B,SAAA77D,GAA8B,GAAAA,EAAA,CAAc,IAAA4wC,EAAA5K,GAAA+F,SAAA/rC,GAA4B4wC,GAAyC3K,GAAAmgB,cAAAxV,GAA6BA,EAAA5nE,KAAA,EAAeg9D,GAAA+F,SAAA/rC,GAAA,KAAqBgmC,GAAAgH,aAAAhtC,GAAA,MAA7FgmC,GAAAyH,YAAA,QAA2t6BquB,uBAArm6B,SAAA5xF,EAAA+hE,GAAiD,QAAAxjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAAw0C,EAAA,EAAAxjE,GAAA,GAAoCy5E,EAAAlc,GAAAiG,cAAAjsC,GAAsCkiD,IAA0Bjc,GAAAqgB,mBAAApE,GAAuCA,EAAAl5E,KAAA,EAAoBg9D,GAAAiG,cAAAjsC,GAAA,QAAg45B+7D,kBAAr25B,SAAA7xF,EAAAyiE,GAAuC,QAAAlkE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAAk1C,EAAA,EAAAlkE,GAAA,GAA+B8xF,EAAAv0B,GAAA2G,SAAA3sC,GAA4Bu6D,IAAqBt0B,GAAA,cAAAs0B,GAAgCA,EAAAvxF,KAAA,EAAeg9D,GAAA2G,SAAA3sC,GAAA,QAA0q5Bg8D,gBAApp5B,SAAAh8D,GAA6B,GAAAA,EAAA,CAAc,IAAA8tC,EAAA9H,GAAAoG,QAAApsC,GAA0B8tC,GAAwC7H,GAAAugB,aAAA1Y,GAA2B9H,GAAAoG,QAAApsC,GAAA,MAAvDgmC,GAAAyH,YAAA,QAAmk5BwuB,cAAx/4B,SAAAj8D,GAA2B,GAAAA,EAAA,CAAc,IAAAk8D,EAAAl2B,GAAA6G,MAAA7sC,GAAsBk8D,GAAsCj2B,GAAAk2B,WAAAD,GAAuBA,EAAAlzF,KAAA,EAAYg9D,GAAA6G,MAAA7sC,GAAA,MAA/DgmC,GAAAyH,YAAA,QAA+64B2uB,kBAA914B,SAAAlyF,EAAAgiE,GAAuC,QAAAzjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAAy0C,EAAA,EAAAzjE,GAAA,GAA+B45E,EAAArc,GAAAkG,SAAAlsC,GAA4BqiD,IAAqBpc,GAAAygB,cAAArE,GAA6BA,EAAAr5E,KAAA,EAAeg9D,GAAAkG,SAAAlsC,GAAA,QAAsq4Bq8D,sBAAhp4B,SAAAnyF,EAAAmiE,GAAuC,QAAA5jE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAu3B,EAAAvI,EAAA40C,EAAA,EAAA5jE,GAAA,GAA2Bw9D,GAAA,kBAAAD,GAAAqG,KAAArsC,IAAwCgmC,GAAAqG,KAAArsC,GAAA,OAAih4Bs8D,aAA//3B,SAAA5+E,GAA0BuoD,GAAA,UAAAvoD,IAAq+3B6+E,aAA983B,SAAAv0C,GAA4Bie,GAAA6gB,YAAA9+B,IAAk73Bw0C,gBAA153B,SAAA5rB,EAAA9C,GAAyC7H,GAAAihB,aAAAlhB,GAAA+F,SAAA6E,GAAA5K,GAAAoG,QAAA0B,KAAi33B2uB,WAArz3B,SAAA/+E,GAAwBuoD,GAAA,QAAAvoD,IAA6x3Bg/E,4BAAxw3B,SAAAt9C,GAA4C6mB,GAAAohB,yBAAAjoC,IAA4t3Bu9C,cAAtr3B,SAAA/yF,EAAAmmE,EAAA5rD,GAAyC8hD,GAAAuhB,WAAA59E,EAAAmmE,EAAA5rD,IAA6o3By4E,qBAA1m3B,SAAAhzF,EAAA+rC,EAAAhe,EAAAxT,EAAAlZ,EAAAglE,GAAiEwB,GAAA7nE,EAAAua,EAAAlZ,EAAAglE,IAAyi3B4sB,UAAr/2B,SAAAn/E,GAAuBuoD,GAAA,OAAAvoD,IAA892Bo/E,2BAA182B,SAAA19C,GAA2C6mB,GAAAgiB,wBAAA7oC,IAA+52B29C,aAA132B,SAAAvkE,EAAAgkB,GAAuC,IAAA0/C,EAAAj2B,GAAA+2B,UAAAxkE,EAAAgkB,GAA0C,GAAA0/C,EAAA,CAAS,IAAAl8D,EAAAgmC,GAAA2H,SAAA3H,GAAA6G,OAA4D,OAA/BqvB,EAAAlzF,KAAAg3B,EAAagmC,GAAA6G,MAAA7sC,GAAAk8D,EAAkBl8D,EAAe,UAAqt2Bi9D,SAA3s2B,WAAoBh3B,GAAA,SAAur2Bi3B,2BAAtq2B,SAAAx+E,EAAA8pE,EAAAC,EAAAvG,GAAuFjc,GAAAyiB,wBAAAhqE,EAAA8pE,EAAAC,EAAAziB,GAAAiG,cAAAiW,KAA+k2Bib,wBAA5+1B,SAAAz+E,EAAA8pE,EAAAI,EAAAvG,EAAAqC,GAA4Eze,GAAA4iB,qBAAAnqE,EAAA8pE,EAAAI,EAAA5iB,GAAAkG,SAAAmW,GAAAqC,IAAg61B0Y,aAA701B,SAAA1/E,GAA0BuoD,GAAA,UAAAvoD,IAAmz1B2/E,cAA5x1B,SAAAnzF,EAAA2hE,GAAkC,QAAApjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAksB,EAAAsxC,GAAAgjB,eAAgC,IAAAt0D,EAAA,CAAiC,IAArBqxC,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAo0C,EAAA,EAAApjE,KAAA,KAAqC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAA6F,SAA+Bl3C,EAAA3rB,KAAAg3B,EAAegmC,GAAA6F,QAAA7rC,GAAArL,EAAsB8C,EAAAo0C,EAAA,EAAApjE,GAAA,GAAAu3B,IAAoj1Bs9D,mBAAzh1B,SAAApzF,EAAAi/E,GAAmC,QAAA1gF,EAAA,EAAYA,EAAAyB,IAAIzB,EAAA,CAAK,IAAAq5E,EAAA7b,GAAAmjB,oBAA0C,IAAAtH,EAAA,CAAsC,IAArB9b,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAA0xD,EAAA,EAAA1gF,KAAA,KAAiC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAAgG,cAAoC8V,EAAA94E,KAAAg3B,EAAoBgmC,GAAAgG,aAAAhsC,GAAA8hD,EAAgCrqD,EAAA0xD,EAAA,EAAA1gF,GAAA,GAAAu3B,IAAix0Bu9D,oBAA1v0B,SAAArzF,EAAA+hE,GAA8C,QAAAxjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAAy5E,EAAAjc,GAAAqjB,qBAA4C,IAAApH,EAAA,CAAuC,IAArBlc,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAw0C,EAAA,EAAAxjE,KAAA,KAA2C,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAAiG,eAAqCiW,EAAAl5E,KAAAg3B,EAAqBgmC,GAAAiG,cAAAjsC,GAAAkiD,EAAkCzqD,EAAAw0C,EAAA,EAAAxjE,GAAA,GAAAu3B,IAAs9zBw9D,eAAr7zB,SAAAtzF,EAAAyiE,GAAoC,QAAAlkE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAA8xF,EAAAt0B,GAAA,gBAAqC,IAAAs0B,EAAA,CAAkC,IAArBv0B,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAk1C,EAAA,EAAAlkE,KAAA,KAAsC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAA2G,UAAgC4tB,EAAAvxF,KAAAg3B,EAAgBgmC,GAAA2G,SAAA3sC,GAAAu6D,EAAwB9iE,EAAAk1C,EAAA,EAAAlkE,GAAA,GAAAu3B,IAAgszBy9D,eAApqzB,SAAAvzF,EAAAgiE,GAAoC,QAAAzjE,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAA45E,EAAApc,GAAAujB,gBAAkC,IAAAnH,EAAA,CAAkC,IAArBrc,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAy0C,EAAA,EAAAzjE,KAAA,KAAsC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAAkG,UAAgCmW,EAAAr5E,KAAAg3B,EAAgBgmC,GAAAkG,SAAAlsC,GAAAqiD,EAAwB5qD,EAAAy0C,EAAA,EAAAzjE,GAAA,GAAAu3B,IAAk7yB09D,mBAAt5yB,SAAAxzF,EAAAw/E,GAAsC,QAAAjhF,EAAA,EAAYA,EAAAyB,EAAIzB,IAAA,CAAK,IAAA0nE,EAAAlK,GAAA,oBAAqC,IAAAkK,EAAA,CAA8B,IAArBnK,GAAAyH,YAAA,MAAqBhlE,EAAAyB,GAAAutB,EAAAiyD,EAAA,EAAAjhF,KAAA,KAAoC,OAAO,IAAAu3B,EAAAgmC,GAAA2H,SAAA3H,GAAAqG,MAA4B8D,EAAAnnE,KAAAg3B,EAAYgmC,GAAAqG,KAAArsC,GAAAmwC,EAAgB14C,EAAAiyD,EAAA,EAAAjhF,GAAA,GAAAu3B,IAAqryB29D,kBAA3pyB,SAAAjgF,GAA+BuoD,GAAA,eAAAvoD,IAA4nyBkgF,YAAhmyB,WAAuB,GAAA53B,GAAA4F,UAAA,CAAiB,IAAAjtB,EAAAqnB,GAAA4F,UAAsC,OAAf5F,GAAA4F,UAAA,EAAejtB,EAAkB,OAAAsnB,GAAAklB,YAAggyB0S,aAAv+xB,SAAAjsB,EAAArnE,GAA+BonE,GAAAC,EAAArnE,EAAA,UAAw8xBuzF,eAAp6xB,SAAAlsB,EAAArnE,GAAiConE,GAAAC,EAAArnE,EAAA,YAAm4xBwzF,qBAA71xB,SAAAntB,EAAAkb,EAAAxnE,EAAAynE,GAAgE,IAAAj1D,EAAAmvC,GAAA+lB,kBAAAhmB,GAAA+F,SAAA6E,IAA0F,GAApC,OAAA95C,MAAA,mBAAoCg1D,EAAA,GAAAC,EAAA,CAAyB,IAAAhC,EAAA7tD,EAAApF,EAAAi1D,EAAAD,GAAgExnE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,OAAijxB05E,gBAAlhxB,SAAAptB,EAAAgC,EAAAroE,GAA0C,GAAAA,EAAmC,GAAAqmE,GAAA5K,GAAA2F,QAAwB3F,GAAAyH,YAAA,UAAxB,CAAoD,IAAAuD,EAAAhL,GAAAgH,aAAA4D,GAAoC,GAAAI,EAAwC,UAAA4B,EAAA,CAAiB,IAAA97C,EAAAmvC,GAAA+lB,kBAAAhmB,GAAA+F,SAAA6E,IAAsD,OAAA95C,MAAA,mBAAoCW,EAAAltB,GAAA,GAAAusB,EAAAxS,OAAA,OAA0B,UAAAsuD,EAAsBn7C,EAAAltB,GAAA,GAAAymE,EAAAH,sBAAqC,UAAA+B,EAAA,CAAsB,OAAA5B,EAAAF,mBAAA,CAAkCF,EAAA5K,GAAA+F,SAAA6E,GAA6B,IAAAsb,EAAAjmB,GAAAkL,oBAAAP,EAAA3K,GAAAkmB,mBAA0Enb,EAAAF,mBAAA,EAA4B,QAAAroE,EAAA,EAAYA,EAAAyjF,IAAazjF,EAAA,CAAK,IAAA2jF,EAAAnmB,GAAA6jB,gBAAAlZ,EAAAnoE,GAAkDuoE,EAAAF,mBAAAhmE,KAAAW,IAAAulE,EAAAF,mBAAAsb,EAAApjF,KAAAsb,OAAA,IAA0FmT,EAAAltB,GAAA,GAAAymE,EAAAF,wBAAuC,UAAA8B,EAAA,CAAsB,OAAA5B,EAAAD,0BAAA,CAAyCH,EAAA5K,GAAA+F,SAAA6E,GAA6B,IAAAyb,EAAApmB,GAAAkL,oBAAAP,EAAA3K,GAAAqmB,uBAAgH,IAAnCtb,EAAAD,0BAAA,EAAmCtoE,EAAA,EAAYA,EAAA4jF,IAAY5jF,EAAA,CAAK,IAAA8jF,EAAAtmB,GAAAumB,0BAAA5b,EAAAnoE,GAA+DuoE,EAAAD,0BAAAjmE,KAAAW,IAAAulE,EAAAD,0BAAAwb,EAAAjoE,OAAA,IAAsGmT,EAAAltB,GAAA,GAAAymE,EAAAD,+BAAmDt5C,EAAAltB,GAAA,GAAA07D,GAAAkL,oBAAAnL,GAAA+F,SAAA6E,GAAAgC,QAAziC5M,GAAAyH,YAAA,WAAhIzH,GAAAyH,YAAA,OAAi+wBwwB,oBAApvuB,SAAAnwB,EAAAge,EAAAxnE,EAAAynE,GAA8D,IAAAj1D,EAAAmvC,GAAA2mB,iBAAA5mB,GAAAoG,QAAA0B,IAAuF,GAApC,OAAAh3C,MAAA,mBAAoCg1D,EAAA,GAAAC,EAAA,CAAyB,IAAAhC,EAAA7tD,EAAApF,EAAAi1D,EAAAD,GAAgExnE,IAAAmT,EAAAnT,GAAA,GAAAylE,QAAyDzlE,IAAAmT,EAAAnT,GAAA,OAA68tB45E,eAA96tB,SAAApwB,EAAA8E,EAAAroE,GAAwC,GAAAA,EAAmC,UAAAqoE,EAAA,CAAiB,IAAA97C,EAAAmvC,GAAA2mB,iBAAA5mB,GAAAoG,QAAA0B,IAAmD,OAAAh3C,MAAA,mBAAoCW,EAAAltB,GAAA,GAAAusB,EAAAxS,OAAA,OAA0B,UAAAsuD,EAAA,CAAsB,IAAA5E,EAAA/H,GAAAonB,gBAAArnB,GAAAoG,QAAA0B,IAAqDyf,EAAA,OAAAvf,GAAA,GAAAA,EAAA1pD,OAAA,EAAA0pD,EAAA1pD,OAAA,EAAmEmT,EAAAltB,GAAA,GAAAgjF,OAA+B91D,EAAAltB,GAAA,GAAA07D,GAAAunB,mBAAAxnB,GAAAoG,QAAA0B,GAAA8E,QAA3U5M,GAAAyH,YAAA,OAA+3tB0wB,aAAn/sB,SAAAvsB,GAA6B,GAAA5L,GAAAiH,YAAA2E,GAAA,OAAA5L,GAAAiH,YAAA2E,GAAsD,IAAAn9C,EAAQ,OAAAm9C,GAAc,0CAAAn9C,EAAAmF,EAAA4e,GAAAytB,GAAAyJ,aAAAkC,IAAA,KAAAn4C,GAAwH,MAAM,cAAAi0D,EAAAznB,GAAAyJ,aAAAzJ,GAAA0nB,SAA0Ll5D,EAAAmF,EAAA4e,GAAhIk1C,EAAAznB,GAAA/B,OAAAiL,YAAAL,SAAA,oBAAA4e,EAAA,IAAsF,kBAAAA,EAAA,KAA0C,KAAAj0D,GAA8D,MAAM,UAAiE,IAAjE,IAAA+2C,EAAAvK,GAAAwK,yBAAkDmd,EAAA,GAAenlF,EAAA,EAAYA,EAAA+nE,EAAAlsD,SAAc7b,EAAKmlF,EAAAzqD,KAAAqtC,EAAA/nE,IAAsBmlF,EAAAzqD,KAAA,MAAAqtC,EAAA/nE,IAA4BgsB,EAAAmF,EAAA4e,GAAAo1C,EAAA33D,KAAA,WAAAwD,GAAsE,MAAM,eAAAo0D,EAAA5nB,GAAAyJ,aAAAzJ,GAAA6nB,0BAAwIC,EAAAF,EAAAxsC,MAA1D,gDAAgG,OAAA0sC,IAAmB,GAAAA,EAAA,GAAAzpE,SAAAypE,EAAA,GAAAA,EAAA,QAAkDF,EAAA,qBAAAE,EAAA,QAAAF,EAAA,KAAiEp5D,EAAAmF,EAAA4e,GAAAq1C,GAAA,KAAAp0D,GAAgE,MAAM,QAA6B,OAA7BusC,GAAAyH,YAAA,MAA6B,EAAmC,OAA1BzH,GAAAiH,YAAA2E,GAAAn9C,EAA0BA,GAAs3qB2pE,cAA32qB,SAAAp1F,EAAAo2C,GAAmC,GAAA6mB,GAAA/B,OAAAiL,YAAAL,QAAA,EAA4D,OAArB9I,GAAAyH,YAAA,MAAqB,EAAS,IAAAP,EAAAlH,GAAAkH,aAAAlkE,GAAuC,GAAAkkE,EAAiB,OAAA9tB,EAAA,GAAAA,GAAA8tB,EAAA5oD,QAAwC0hD,GAAAyH,YAAA,MAAqB,GAASP,EAAA9tB,GAA2B,OAAAp2C,GAAa,UAAiE,IAAjE,IAAAwnE,EAAAvK,GAAAwK,yBAAkDmd,EAAA,GAAenlF,EAAA,EAAYA,EAAA+nE,EAAAlsD,SAAc7b,EAAKmlF,EAAAzqD,KAAAvJ,EAAA4e,GAAAg4B,EAAA/nE,IAAA,KAAAgxB,IAAsEm0D,EAAAzqD,KAAAvJ,EAAA4e,GAAA,MAAAg4B,EAAA/nE,IAAA,KAAAgxB,IAAuH,OAA3CyzC,EAAAlH,GAAAkH,aAAAlkE,GAAA4kF,EAA2CxuC,EAAA,GAAAA,GAAA8tB,EAAA5oD,QAAwC0hD,GAAAyH,YAAA,MAAqB,GAASP,EAAA9tB,GAA2B,QAA6B,OAA7B4mB,GAAAyH,YAAA,MAA6B,IAAkspB4wB,wBAAxrpB,SAAAztB,EAAAuZ,GAA6I,OAAlFvZ,EAAA5K,GAAA+F,SAAA6E,GAA6BuZ,EAAAzvD,EAAAyvD,GAAqDlkB,GAAA,qBAAA2K,EAAAuZ,IAA2ipBmU,sBAA5+oB,SAAA1tB,EAAA5nE,GAA0E,IAAA4lF,EAAA,EAAkB,SAA/C5lF,EAAA0xB,EAAA1xB,IAA+C+sB,QAAA,IAAA/sB,EAAAsb,OAAA,IAAyC,IAAAgtD,EAAAtoE,EAAA6rC,YAAA,KAA6Bg6C,EAAA7lF,EAAA+rB,MAAAu8C,EAAA,MAAmC,GAAAud,EAAAvqE,OAAA,IAAwBsqE,EAAA12D,SAAA22D,IAAiC,EAAkB,SAAU7lF,IAAA+rB,MAAA,EAAAu8C,GAAsB,IAAAN,EAAAhL,GAAAgH,aAAA4D,GAAoC,IAAAI,EAAY,SAAS,IAA2B8d,EAA3B9d,EAAA7E,SAA2BnjE,GAA6B,OAAA8lF,GAAAF,EAAAE,EAAA,GAA4CA,EAAA,GAAAF,GAAuC,GAAw/nB2P,qBAA9+nB,SAAAn/C,EAAAwzB,EAAAH,GAAkDE,GAAAvzB,EAAAwzB,EAAAH,EAAA,mBAA47nB+rB,QAAx3nB,SAAA9gF,EAAAC,GAAwBsoD,GAAA,KAAAvoD,EAAAC,IAAg2nB8gF,yBAA30nB,SAAA//E,EAAAggF,EAAAC,GAAsH,IAAjD,IAAAC,EAAA54B,GAAAmH,qBAAAuxB,GAAiDj2F,EAAA,EAAYA,EAAAi2F,EAAiBj2F,IAAKm2F,EAAAn2F,GAAAgvB,EAAAknE,EAAA,EAAAl2F,GAAA,GAAmCw9D,GAAA,sBAAAvnD,EAAAkgF,IAAgpnBC,4BAApmnB,SAAAngF,EAAAggF,EAAAC,EAAArrF,EAAAC,EAAAuC,EAAAC,GAA0I,IAAjD,IAAA6oF,EAAA54B,GAAAmH,qBAAAuxB,GAAiDj2F,EAAA,EAAYA,EAAAi2F,EAAiBj2F,IAAKm2F,EAAAn2F,GAAAgvB,EAAAknE,EAAA,EAAAl2F,GAAA,GAAmCw9D,GAAA,yBAAAvnD,EAAAkgF,EAAAtrF,EAAAC,EAAAuC,EAAAC,IAAq5mB+oF,aAAr1mB,SAAAphF,GAA0B,OAAAuoD,GAAA,UAAAvoD,IAA2zmBqhF,eAA7xmB,SAAAnuB,GAAiC3K,GAAA2qB,YAAA5qB,GAAA+F,SAAA6E,IAAwC5K,GAAAgH,aAAA4D,GAAA,KAA8B5K,GAAA2K,qBAAAC,IAAsrmBouB,eAArpmB,SAAApsB,EAAAse,GAAqC,MAAAte,EAAgB5M,GAAAoH,cAAA8jB,EAAuB,MAAAte,IAAqB5M,GAAAqH,gBAAA6jB,GAAyBjrB,GAAAkrB,YAAAve,EAAAse,IAA2hmB+N,iBAA5/lB,SAAAvhF,EAAAC,GAAiCsoD,GAAA,cAAAvoD,EAAAC,IAA29lBuhF,cAA77lB,SAAA5rF,EAAAC,EAAAuC,EAAAC,EAAAs9D,EAAApoE,EAAAqoE,GAA4D,GAAAtN,GAAAuG,eAAA2C,0BAAgDjJ,GAAAqb,8BAAwCrb,GAAAqrB,WAAAh+E,EAAAC,EAAAuC,EAAAC,EAAAs9D,EAAApoE,EAAAqoE,GAA2DrN,GAAAqrB,WAAAh+E,EAAAC,EAAAuC,EAAAC,EAAAs9D,EAAApoE,EAAAyoE,GAAAzoE,GAAAqoE,GAAAK,GAAA1oE,QAAnJ,CAA0R,IAAAsmF,EAAAne,GAAAnoE,EAAAooE,EAAAv9D,EAAAC,EAAAu9D,GAAqFie,EAA2CtrB,GAAAqrB,WAAAh+E,EAAAC,EAAAuC,EAAAC,EAAAs9D,EAAApoE,EAAAsmF,GAA5BvrB,GAAAyH,YAAA,QAAmglB0xB,uBAA96kB,SAAAzhF,EAAAC,EAAAzJ,EAAAuuE,GAA6Cxc,GAAA,oBAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAi4kB2c,kCAAv1kB,SAAA1hF,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,GAA2Dhf,GAAA,+BAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,IAA4xkBoa,qBAApukB,SAAA9E,EAAA3nB,EAAAse,GAAmDjrB,GAAA,kBAAAs0B,EAAAv0B,GAAA2G,SAAA4tB,GAAA,KAAA3nB,EAAAse,IAAirkBoO,WAAvmkB,SAAA5hF,EAAAC,EAAAzJ,EAAAuuE,GAAiCxc,GAAA,QAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAskkB8c,gBAAxikB,SAAAzxB,EAAA3pD,EAAA4pD,EAAAzpD,GAAqD,IAAA0pD,EAAAhI,GAAA6H,UAAAC,EAAA3pD,EAAA4pD,EAAAzpD,GAAoD2hD,GAAA+rB,aAAAhsB,GAAAoG,QAAA0B,GAAAE,IAA+7jBwxB,iBAAj5jB,SAAA9hF,EAAAC,EAAAzJ,GAAoC+xD,GAAA,cAAAvoD,EAAAC,EAAAzJ,IAA62jBurF,gBAA50jB,SAAA/hF,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,GAAyChf,GAAA,aAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,IAAmyjBya,2BAA7vjB,WAAsC1oE,EAAA,+CAAmD0B,IAAA,IAAoqjBinE,gBAA1pjB,SAAAjiF,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,GAA4Cjf,GAAA,aAAAvoD,EAAAC,EAAAzJ,EAAAuuE,EAAAwC,EAAAC,IAA8mjB0a,iBAArkjB,SAAAlhF,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAAqoE,GAAwF,GAAAtN,GAAAuG,eAAA2C,0BAAgDjJ,GAAAsb,gCAA0Ctb,GAAAstB,cAAA70E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAAqoE,GAAkF,GAAAA,EAAmBrN,GAAAstB,cAAA70E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAAyoE,GAAAzoE,GAAAqoE,GAAAK,GAAA1oE,IAAiKg7D,GAAAstB,cAAA70E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAA,UAAhW,CAAub,IAAAsmF,EAAA,KAAmBje,IAAAie,EAAAne,GAAAnoE,EAAAooE,EAAAv9D,EAAAC,EAAAu9D,IAAsFrN,GAAAstB,cAAA70E,EAAAgmE,EAAAI,EAAAC,EAAAjvE,EAAAC,EAAAs9D,EAAApoE,EAAAsmF,KAA68hBsO,aAAx3hB,SAAAhqE,EAAAroB,GAAmCy4D,GAAA8tB,UAAA/tB,GAAAmG,SAAAt2C,GAAAroB,IAAq1hBsyF,aAA3yhB,SAAAjqE,EAAAroB,GAAmCy4D,GAAAkuB,UAAAnuB,GAAAmG,SAAAt2C,GAAAroB,IAAwwhBuyF,aAA9thB,SAAAlqE,EAAAroB,EAAAC,EAAAwY,EAAAC,GAA4C+/C,GAAA4vB,UAAA7vB,GAAAmG,SAAAt2C,GAAAroB,EAAAC,EAAAwY,EAAAC,IAAkrhB85E,uBAA/nhB,SAAApvB,EAAAsZ,EAAAqM,GAA+E3lB,EAAA5K,GAAA+F,SAAA6E,GAA6B3K,GAAA,oBAAA2K,EAAAsZ,EAAAqM,IAAmhhB0J,cAAv8gB,SAAArvB,GAAgC3K,GAAA8wB,WAAAnmB,EAAA5K,GAAA+F,SAAA6E,GAAA,OAAu6gBsvB,wBAAn3gB,SAAA9gD,EAAA9nB,EAAArsB,EAAAgZ,EAAA2U,GAA6DqtC,GAAAqzB,qBAAAl6C,EAAA9nB,EAAArsB,EAAAgZ,EAAA2U,IAAszgBunE,uBAA/vgB,SAAA/gD,EAAA9nB,EAAArsB,EAAAuuF,EAAAv1E,EAAA2U,GAAuEqtC,GAAAwzB,oBAAAr6C,EAAA9nB,EAAArsB,IAAAuuF,EAAAv1E,EAAA2U,IAAwrgBwnE,YAArngB,SAAA1iF,EAAAC,EAAAzJ,EAAAuuE,GAAkCxc,GAAA,SAAAvoD,EAAAC,EAAAzJ,EAAAuuE,IAAmlgB4d,YAApjgB,SAAAnE,EAAA1/C,EAAA8jD,EAAAC,GAA6EA,KAAA,EAAwB,IAA32rO7sC,EAAAC,EAA22rOoU,EAAA,aAAhDu4B,KAAA,IAAgD,YAAAC,GAAA,GAA32rO7sC,EAA22rO4sC,EAA32rO3sC,EAA22rO4sC,IAAp0rO7sC,IAAA,gBAAAC,IAAA,IAAq6rOsS,GAAAu6B,SAAAx6B,GAAA6G,MAAAqvB,GAAA1/C,EAAAurB,IAA82f6L,kBAAAC,kBAAA4sB,eAAztf,SAAA/3F,EAAA0iE,GAA6B,IAAA32C,EAAAo/C,GAAAnrE,GAA4D,OAAlC,IAAA+rB,OAAAo/C,GAAAzI,IAAkC,GAAAyN,GAAA,GAAApkD,IAAgofq/C,kBAAA4sB,eAAnjf,WAA0B,OAAA5sB,GAAAh5C,MAAA,KAAAvF,YAAyhfw+C,kBAAAC,mBAAA2sB,eAAl7e,SAAArtF,GAA2B,OAAAxI,KAAAgsB,IAAAxjB,GAAAxI,KAAA81F,KAAu5eC,WAA33e,WAAsBnoE,GAAA,UAAq2eooE,sBAA9ue,WAAiC,UAA6seC,qBAApse,WAAgC,UAAoqeC,wBAA3pe,WAAmC,UAAwneC,mBAA/me,WAA8B,UAAileC,gBAAxke,WAA2B,WAA6ieC,qBAA3ge,SAAAn3F,GAAmC,OAAAiqE,GAAAjqE,IAAA,GAAw+do3F,cAAx8d,aAAw8dC,oBAA94d,SAAAr3F,EAAAs6B,GAA6C,UAAAt6B,EAAWy6B,GAAAuB,QAA0BvO,EAAAztB,GAAA,GAAAkqE,GAAyCD,GAAAC,IAAA,EAA8CA,KAA4B,IAAysdotB,uBAAhsd,aAAgsdC,cAA7pd,SAAAA,EAAA3oE,EAAAoG,GAAiCuiE,EAAAtkC,OAAAskC,EAAAtkC,KAAA,IAA6CrkC,KAAA2oE,EAAAtkC,OAAoC3pC,EAAA,UAAA0L,GAA0BuiE,EAAAtkC,KAAArkC,GAAA,IAAihd4oE,qBAAv/c,SAAAx3F,EAAAN,GAAyC,OAAAM,KAAAiqE,IAAyDA,GAAAjqE,GAAAN,EAA4B,GAAtD+6B,GAAAuB,QAA+6cy7D,SAAh3c,SAAAz4F,GAAwB,OAAAA,GAAa,eAAAi0B,GAAyB,QAA+C,OAA/C,WAA+CA,GAA6B,yVAAyV,iBAAiB,gSAAgS,wIAAwI,mDAAmD,kCAAkC,0CAA0C,4BAA4B,0BAA0B,4BAA4B,sBAAsB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,mBAAmB,kBAAkB,iBAAiB,gBAAgB,iBAAiB,QAAS,uBAAAyrC,qBAAA,qBAA0E,EAA0C,OAAhC/0B,GAAAlP,GAAAuB,SAAgC,GAAw2ZszB,uCAAAuF,uBAAAvB,wBAAA7I,uBAAA8F,mBAAA2B,2BAAArG,yBAAAkd,mCAAApB,sBAAA+B,iCAAAnB,6BAAAoB,kCAAAP,kCAAAZ,6BAAAG,kCAAAta,uBAAA2G,4BAAApG,sBAAAjE,eAAA0K,6BAAApH,uBAAAyB,4BAAAoB,oBAAAE,wBAAAP,6BAAAE,6BAAA/E,oBAAA6J,qBAAA7C,eAAAkC,mBAAAT,uBAAAlG,oBAAA2D,0BAAAjB,eAAAkE,cAAAO,+BAAArE,mBAAAzG,yBAAA2I,QAAAjD,0CAAAlE,oBAAAR,gBAAAyG,uBAAAsD,iBAAAJ,yBAAAzH,iBAAA5D,kBAAA8G,oBAAA1D,8BAAAjD,8BAAAiC,qBAAAqB,+BAAAvC,sBAAA+H,yBAAA5D,iBAAAqF,gBAAAvJ,iCAAAv9B,kBAAA+L,iBAAAlL,QAAAuE,WAAAC,aAAqyxB,IAAA2kE,GAAApuE,EAAA,IAAAA,EAAAkhD,aAAAlhD,EAAAmhD,cAAA9/C,GAAuErB,EAAA,IAAAouE,GAAkB,IAAAp+D,GAAAhQ,EAAA,sCAAgF,OAAAA,EAAA,+BAAAwH,MAAA,KAAAvF,YAA2EiO,GAAAlQ,EAAA,oCAA4E,OAAAA,EAAA,6BAAAwH,MAAA,KAAAvF,YAAyEgO,GAAAjQ,EAAA,0CAAwF,OAAAA,EAAA,mCAAAwH,MAAA,KAAAvF,YAA+E8N,GAAA/P,EAAA,0CAAwF,OAAAA,EAAA,mCAAAwH,MAAA,KAAAvF,YAA+E6N,GAAA9P,EAAA,uCAAkF,OAAAA,EAAA,gCAAAwH,MAAA,KAAAvF,YAA4MsnC,IAAhIvpC,EAAA,6BAA8D,OAAAA,EAAA,sBAAAwH,MAAA,KAAAvF,YAAkEjC,EAAA,0BAAwD,OAAAA,EAAA,mBAAAwH,MAAA,KAAAvF,aAA+DqrD,GAAAttD,EAAA,sCAAgF,OAAAA,EAAA,+BAAAwH,MAAA,KAAAvF,YAA2EiJ,GAAAlL,EAAA,sCAAgF,OAAAA,EAAA,+BAAAwH,MAAA,KAAAvF,YAA2EunC,GAAAxpC,EAAA,iBAAsC,OAAAA,EAAA,UAAAwH,MAAA,KAAAvF,YAAoa2E,IAA9W5G,EAAA,2BAA0D,OAAAA,EAAA,oBAAAwH,MAAA,KAAAvF,YAAgEjC,EAAA,2BAA0D,OAAAA,EAAA,oBAAAwH,MAAA,KAAAvF,YAAgEjC,EAAA,2BAA0D,OAAAA,EAAA,oBAAAwH,MAAA,KAAAvF,YAAgEjC,EAAA,mBAA0C,OAAAA,EAAA,YAAAwH,MAAA,KAAAvF,aAAqyCsjD,IAA7uCvlD,EAAA,mBAA0C,OAAAA,EAAA,YAAAwH,MAAA,KAAAvF,YAAwDjC,EAAA,oBAA4C,OAAAA,EAAA,aAAAwH,MAAA,KAAAvF,YAAyDjC,EAAA,mBAA0C,OAAAA,EAAA,YAAAwH,MAAA,KAAAvF,YAAwDjC,EAAA,mCAA0E,OAAAA,EAAA,4BAAAwH,MAAA,KAAAvF,YAAwEjC,EAAA,+BAAkE,OAAAA,EAAA,wBAAAwH,MAAA,KAAAvF,YAAoEjC,EAAA,iCAAsE,OAAAA,EAAA,0BAAAwH,MAAA,KAAAvF,YAAsEjC,EAAA,iBAAsC,OAAAA,EAAA,UAAAwH,MAAA,KAAAvF,YAAsDjC,EAAA,mBAA0C,OAAAA,EAAA,YAAAwH,MAAA,KAAAvF,YAAwDjC,EAAA,+BAAkE,OAAAA,EAAA,wBAAAwH,MAAA,KAAAvF,YAAoEjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,aAAiK4E,IAArG7G,EAAA,oBAA4C,OAAAA,EAAA,aAAAwH,MAAA,KAAAvF,YAAyDjC,EAAA,sBAAgD,OAAAA,EAAA,eAAAwH,MAAA,KAAAvF,aAA2Dw/C,GAAAzhD,EAAA,wBAAoD,OAAAA,EAAA,iBAAAwH,MAAA,KAAAvF,YAA6Du/C,GAAAxhD,EAAA,qBAA8C,OAAAA,EAAA,cAAAwH,MAAA,KAAAvF,YAA0DjC,EAAA,sBAAgD,OAAAA,EAAA,eAAAwH,MAAA,KAAAvF,YAA2DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,qBAA8C,OAAAA,EAAA,cAAAwH,MAAA,KAAAvF,YAA0DjC,EAAA,sBAAgD,OAAAA,EAAA,eAAAwH,MAAA,KAAAvF,YAA2DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,wBAAoD,OAAAA,EAAA,iBAAAwH,MAAA,KAAAvF,YAA6DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,wBAAoD,OAAAA,EAAA,iBAAAwH,MAAA,KAAAvF,YAA6DjC,EAAA,yBAAsD,OAAAA,EAAA,kBAAAwH,MAAA,KAAAvF,YAA8DjC,EAAA,wBAAoD,OAAAA,EAAA,iBAAAwH,MAAA,KAAAvF,YAA6DjC,EAAA,yBAAsD,OAAAA,EAAA,kBAAAwH,MAAA,KAAAvF,YAA8DjC,EAAA,0BAAwD,OAAAA,EAAA,mBAAAwH,MAAA,KAAAvF,YAA+DjC,EAAA,2BAA0D,OAAAA,EAAA,oBAAAwH,MAAA,KAAAvF,YAAgEjC,EAAA,4BAA4D,OAAAA,EAAA,qBAAAwH,MAAA,KAAAvF,YAAiEjC,EAAA,wBAAoD,OAAAA,EAAA,iBAAAwH,MAAA,KAAAvF,YAA6DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,qBAA8C,OAAAA,EAAA,cAAAwH,MAAA,KAAAvF,YAA0DjC,EAAA,sBAAgD,OAAAA,EAAA,eAAAwH,MAAA,KAAAvF,YAA2DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,2BAA0D,OAAAA,EAAA,oBAAAwH,MAAA,KAAAvF,YAAgEjC,EAAA,sBAAgD,OAAAA,EAAA,eAAAwH,MAAA,KAAAvF,YAA2DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,yBAAsD,OAAAA,EAAA,kBAAAwH,MAAA,KAAAvF,YAA8DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,sBAAgD,OAAAA,EAAA,eAAAwH,MAAA,KAAAvF,YAA2DjC,EAAA,2BAA0D,OAAAA,EAAA,oBAAAwH,MAAA,KAAAvF,YAAgEjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,wBAAoD,OAAAA,EAAA,iBAAAwH,MAAA,KAAAvF,YAA6DjC,EAAA,yBAAsD,OAAAA,EAAA,kBAAAwH,MAAA,KAAAvF,YAA8DjC,EAAA,0BAAwD,OAAAA,EAAA,mBAAAwH,MAAA,KAAAvF,YAA+DjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA4DjC,EAAA,6BAA8D,OAAAA,EAAA,sBAAAwH,MAAA,KAAAvF,YAAkEjC,EAAA,4BAA4D,OAAAA,EAAA,qBAAAwH,MAAA,KAAAvF,YAAiEjC,EAAA,wBAAoD,OAAAA,EAAA,iBAAAwH,MAAA,KAAAvF,YAA6DjC,EAAA,yBAAsD,OAAAA,EAAA,kBAAAwH,MAAA,KAAAvF,YAA8DjC,EAAA,0BAAwD,OAAAA,EAAA,mBAAAwH,MAAA,KAAAvF,YAA+DjC,EAAA,yBAAsD,OAAAA,EAAA,kBAAAwH,MAAA,KAAAvF,YAA8DjC,EAAA,wBAAoD,OAAAA,EAAA,iBAAAwH,MAAA,KAAAvF,YAA6DjC,EAAA,8BAAgE,OAAAA,EAAA,uBAAAwH,MAAA,KAAAvF,YAAmEjC,EAAA,yBAAsD,OAAAA,EAAA,kBAAAwH,MAAA,KAAAvF,YAA8DjC,EAAA,yBAAsD,OAAAA,EAAA,kBAAAwH,MAAA,KAAAvF,YAA8DjC,EAAA,0BAAwD,OAAAA,EAAA,mBAAAwH,MAAA,KAAAvF,YAA+DjC,EAAA,2BAA0D,OAAAA,EAAA,oBAAAwH,MAAA,KAAAvF,YAAgEjC,EAAA,4BAA4D,OAAAA,EAAA,qBAAAwH,MAAA,KAAAvF,YAAiEjC,EAAA,6BAA8D,OAAAA,EAAA,sBAAAwH,MAAA,KAAAvF,YAAkEjC,EAAA,8BAAgE,OAAAA,EAAA,uBAAAwH,MAAA,KAAAvF,YAAmEjC,EAAA,+BAAkE,OAAAA,EAAA,wBAAAwH,MAAA,KAAAvF,YAAoEjC,EAAA,gCAAoE,OAAAA,EAAA,yBAAAwH,MAAA,KAAAvF,YAAqEjC,EAAA,uBAAkD,OAAAA,EAAA,gBAAAwH,MAAA,KAAAvF,YAA8E,SAAAN,GAAAzB,GAA4BkrB,KAAA11C,KAAA,aAAuB01C,KAAAgM,QAAA,gCAAAl3B,EAAA,IAAwDkrB,KAAAlrB,SAAoP,SAAAmuE,GAAAllC,GAAkJ,SAAAmlC,IAAiBtuE,EAAA,YAA8BA,EAAA,aAAyBiF,IAA727QkH,KAA6BA,IAAA,EAAwBb,GAAAS,KAAoDT,GAAAU,IAAkz7QhM,EAAA,sBAAAA,EAAA,uBAAts7Q,WAAmB,GAAAA,EAAA,QAAoG,IAA9E,mBAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAA8EA,EAAA,QAAAhP,QAA+JiyC,EAA/HjjC,EAAA,QAAAyL,QAAyJS,GAAA2U,QAAAoiB,GAA1B,IAAAA,EAAtF33B,GAAAY,IAAyk7QqiE,KAAxTplC,KAAAnpC,EAAA,UAA+BsM,GAAA,KAA777Q,WAAkB,GAAAtM,EAAA,OAAgG,IAA3E,mBAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,SAA2EA,EAAA,OAAAhP,QAA+jBiyC,EAAhiBjjC,EAAA,OAAAyL,QAAyjBK,GAAA+U,QAAAoiB,GAAzB,IAAAA,EAAzf33B,GAAAQ,IAAky7Q0iE,GAASliE,GAAA,GAA4BtM,EAAA,YAAiOA,EAAA,WAAwBA,EAAA,wBAAkCgtC,WAAA,WAAuBA,WAAA,WAAuBhtC,EAAA,eAAwB,GAAKsuE,KAAQ,IAAUA,MAA2B,SAAAlpE,GAAAqpE,GAA2K,MAAtJzuE,EAAA,SAAsBA,EAAA,QAAAyuE,QAAwB5qE,IAAA4qE,GAAqBr2F,EAAAq2F,GAAU/qE,EAAA+qE,GAAUA,EAAAtzB,KAAAC,UAAAqzB,IAA+BA,EAAA,GAAQxpE,GAAA,EAAW,EAAa,SAAAwpE,EAAA,+CAAwF,GAA3nCzuE,EAAA,IAAAouE,GAAgJzsE,GAAA5qB,UAAA,IAAAkyB,MAA+BtH,GAAA5qB,UAAA6iD,YAAAj4B,GAAgE6K,GAAA,SAAAkiE,IAA2C1uE,EAAA,WAAAquE,KAA8BruE,EAAA,YAAAwM,GAAAkiE,IAA8iB1uE,EAAA,IAAAquE,GAA+PruE,EAAA,MAAAoF,GAAsBpF,EAAA,QAAoG,IAA9E,mBAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAA8EA,EAAA,QAAAhP,OAAA,GAAkCgP,EAAA,QAAA6rB,KAAA7rB,GAAktC,SAAA2uE,GAAAttE,GAAkM,OAA7J,iBAAAA,gBAAAiG,UAAsDjG,EAAAtB,EAAA6uE,OAAAvtE,IAA+BA,oBAAA0J,cAAyC1J,EAAAtB,EAAAukB,OAAAjjB,IAA+BA,EAM1t+R,OANi27RrB,EAAA,iBAA6BquE,KAAMtuE,EAAA8uE,6BAAA,EAAwC9uE,EAAA8iB,KAAA,SAAA+rD,EAAAE,GAAwC/uE,EAAAgvE,QAAAD,EAAyB/uE,EAAA8uE,8BAAAD,EAAA59E,OAAqD+O,EAAA6uE,OAAA,GAAmB,oBAAAI,UAAkCjvE,EAAAkvE,qBAA8BlvE,EAAAyO,MAAAogE,EAAA,cAAAl5F,GAA2C,KAAAqqB,EAAA8uE,8BAAA9uE,EAAAgvE,SAAiEhvE,EAAAgvE,aAAyBhvE,EAAAwuE,QAAA,WAA6BxuE,EAAAmvE,sBAA+B,KAAAnvE,EAAA8uE,8BAAA9uE,EAAAgvE,SAAiEhvE,EAAAgvE,WAAsBhvE,EAAAyO,MAAA,SAAAogE,EAAAO,EAAAC,GAAkD,IAAAC,EAAAT,EAAA59E,OAAkC49E,EAAAl+E,QAAA,SAAAhb,GAA+B,MAAA45F,EAAA55F,EAAA65F,cAA+B,GAAAD,EAAAE,SAAA,UAAAF,EAAAE,SAAA,SAAoD,IAAA/+B,EAAA,IAAAC,MAAiL,OAA/JD,EAAApuC,IAAA3sB,EAAa+6D,EAAAg/B,SAAA,aAAqBh/B,EAAArtC,OAAA,WAAuBrD,EAAA6uE,OAAAl5F,GAAA+6D,EAA0B2+B,GAAcA,EAAA15F,GAAgB,KAAA25F,GAAAF,GAAkCA,MAAmB3gE,MAAA94B,GAAAm5B,KAAA,SAAA1L,GAAqC,IAAAA,EAAAq6B,GAAiB,UAAAv0B,MAAAvzB,GAAsB,OAAAytB,EAAAmrB,gBAA8Bzf,KAAA,SAAAyf,GAA+BvuB,EAAA6uE,OAAAl5F,GAAA,IAAA4rB,WAAAgtB,GAAkD8gD,GAAcA,EAAA15F,GAAgB,KAAA25F,GAAAF,GAAkCA,SAAkOpvE,EAAAmvE,oBAAA,WAAyCnvE,EAAA2vE,OAAAj5F,OAAA,SAAAm6D,EAAA7N,GAAiZ,OAAzQA,EAAAltD,OAAA85F,OAAvF,CAAgB30B,aAAA,EAAAC,aAAA,EAAA1I,WAAA,EAAA8sB,OAAA,EAAA7sB,OAAA,GAAuEzP,GAAwChjC,EAAAkyC,cAAArB,GAAA,KAAA7N,GAAiDhjC,EAAAyuC,IAAA+N,aAAA,iCAA2Dx8C,EAAAyuC,IAAA+N,aAAA,iCAA2Dx8C,EAAAyuC,IAAA+N,aAAA,gCAA0Dx8C,EAAA2vE,OAAAE,WAAmC7vE,EAAA2vE,OAAA34F,UAAA84F,eAAA,SAAAxuE,GAA2DA,EAAAstE,GAAAttE,GAAmC,MAAA6f,EAAAkK,KAAA0kD,gBAAAzuE,GAA0D,OAAhBA,EAAA6rB,SAAgBhM,GAAgBnhB,EAAA2vE,OAAA34F,UAAAg5F,qBAAA,SAAA1uE,EAAA0hC,GAAyE1hC,EAAAstE,GAAAttE,GAAmC,MAAA6f,EAAAnhB,EAAAiwE,sBAAA3uE,EAAA+pB,KAAA2X,GAAiF,OAAhB1hC,EAAA6rB,SAAgBhM,GAAgBnhB,EAAA2vE,OAAA34F,UAAAk5F,iBAAA,SAAA5uE,EAAA0hC,GAAqE1hC,EAAAstE,GAAAttE,GAAmC,MAAA6f,EAAAnhB,EAAAmwE,kBAAA7uE,EAAA+pB,KAAA2X,GAA6E,OAAhB1hC,EAAA6rB,SAAgBhM,GAAgBnhB,EAAA2vE,OAAA34F,UAAAo5F,iBAAA,SAAA9uE,EAAA0hC,GAAqEA,KAAA,CAAkBqtC,MAAA,GAAa,MAAAC,EAAAjlD,KAAA2kD,qBAAA1uE,EAAA0hC,GAAuD,OAAAhjC,EAAAuwE,OAAAC,UAAAC,YAAAH,GAAAI,MAAArlD,OAAmErrB,EAAA2vE,OAAA34F,UAAA25F,qBAAA,SAAArvE,EAAA0hC,GAAyE1hC,EAAAstE,GAAAttE,GAAmC,MAAA6f,EAAAnhB,EAAA4wE,sBAAAtvE,EAAA+pB,KAAA2X,GAAiF,OAAhB1hC,EAAA6rB,SAAgBhM,GAAgBnhB,EAAA2vE,OAAA34F,UAAA65F,sBAAA,SAAAC,EAAA9tC,GAA0J,OAAjF,iBAAA8tC,gBAAAvpE,UAAoDupE,EAAA9wE,EAAA6uE,OAAAiC,IAA6B9wE,EAAA+wE,uBAAAD,EAAAzlD,KAAA2X,IAA6DhjC,EAAA2vE,OAAA34F,UAAAg6F,aAAA,SAAA1vE,EAAA2vE,EAAAC,GAAkF5vE,EAAAstE,GAAAttE,GAAmC,MAAA6f,EAAAnhB,EAAAmxE,cAAA9lD,KAAA/pB,EAAA2vE,EAAAC,GAA0F,OAAhB5vE,EAAA6rB,SAAgBhM,GAAgBnhB,EAAAoxE,aAAAp6F,UAAAq6F,YAAA,SAAAC,EAAAC,EAAAjwE,GAAiFA,EAAAstE,GAAAttE,GAAmC+pB,KAAAmmD,aAAAF,EAAAC,EAAAjwE,GAA6CA,EAAA6rB,UAAkBntB,EAAAyxE,YAAAz6F,UAAA06F,UAAA,SAAAJ,EAAAhwE,GAAkEA,EAAAstE,GAAAttE,GAAmC+pB,KAAAsmD,WAAAL,EAAAhwE,GAA+BA,EAAA6rB,UAAkBntB,EAAA4xE,0BAAA56F,UAAA05F,MAAA1wE,EAAA6xE,qBAAA76F,UAAA05F,MAAA,SAAAY,EAAAQ,GAA0H,MAAA3wD,EAAAkK,KAAA0mD,OAAAT,EAAAQ,GAAsD,OAAdzmD,KAAA8B,SAAchM,GAAgBnhB,EAAAgyE,qBAAAh7F,UAAA05F,MAAA1wE,EAAAiyE,oBAAAj7F,UAAA05F,MAAA1wE,EAAAkyE,gBAAAl7F,UAAA05F,MAAA1wE,EAAAmyE,sBAAAn7F,UAAA05F,MAAA1wE,EAAAoyE,eAAAp7F,UAAA05F,MAAA,SAAAY,GAA6O,MAAAnwD,EAAAkK,KAAA0mD,OAAAT,GAA+C,OAAdjmD,KAAA8B,SAAchM,GAAgBnhB,EAAAqyE,UAAAr7F,UAAAw5D,QAAA,SAAAzkB,GAAsD,MAAAumD,EAAAjnD,KAAAknD,SAAAxmD,GAAgC5K,EAAAmxD,EAAAE,WAA2C,OAAdF,EAAAnlD,SAAchM,GAAgBnhB,EAAAqyE,UAAAr7F,UAAAy7F,YAAA,SAAAC,GAA6D,MAAAJ,EAAAjnD,KAAAsnD,aAAAD,GAAuCvxD,EAAAmxD,EAAAE,WAA2C,OAAdF,EAAAnlD,SAAchM,GAAgBnhB,EAAA4yE,QAAA57F,UAAA67F,SAAA,SAAAvB,EAAAjgB,EAAAyhB,GAAgEznD,KAAA0nD,UAAAzB,EAAAjgB,EAAAyhB,GAAiCA,EAAA3lD,UAAentB,EAAA4yE,QAAA57F,UAAAg8F,aAAA,SAAA1B,EAAAjgB,EAAAyhB,GAAoEznD,KAAA4nD,cAAA3B,EAAAjgB,EAAAyhB,GAAqCA,EAAA3lD,WAAiBntB,EAAAukB,OAAA,SAAA2uD,GAAsC1vE,QAAAhC,OAAA0xE,EAAA5xE,kBAAA0J,aAAyDxH,QAAAhC,OAAA0xE,EAAAnoE,WAAA,GAAwC/K,EAAAuJ,QAAAjI,QAAA4xE,EAAA5xE,SAA+C4xE,EAAA,IAAA3xE,WAAA2xE,IAAsC,MAAAC,EAAAD,EAAoBE,EAAA,IAAApzE,EAAAqzE,wBAAAF,GAAkDG,EAAA,IAAA/xE,WAAA4xE,EAAA7xE,OAAA6xE,EAAA9pD,WAAA8pD,EAAApoE,YAAqG,OAA9BqoE,EAAAZ,WAAA15F,IAAAw6F,GAA8BF,GAAYpzE,EAAAuzE,YAAA,SAAAL,EAAAlzB,EAAAwzB,GAA2DhwE,QAAAhC,OAAA0xE,EAAA5xE,kBAAA0J,aAAyDxH,QAAAhC,OAAA0xE,EAAAnoE,WAAA,GAAwC/K,EAAAuJ,QAAAjI,QAAA4xE,EAAA5xE,SAA+C4xE,EAAA,IAAA3xE,WAAA2xE,IAAsC,MAAAC,EAAAD,EAAoBE,EAAA,IAAApzE,EAAAyzE,6BAAAN,EAAAnzB,EAAAwzB,GAAuEF,EAAA,IAAA/xE,WAAA4xE,EAAA7xE,OAAA6xE,EAAA9pD,WAAA8pD,EAAApoE,YAAqG,OAA9BqoE,EAAAZ,WAAA15F,IAAAw6F,GAA8BF,GAAYpzE,EAAA0zE,sBAAA,SAAAR,EAAAS,EAAAC,GAAwEpwE,QAAAhC,OAAA0xE,EAAA5xE,kBAAA0J,aAAyDxH,QAAAhC,OAAA0xE,EAAAnoE,WAAA,GAAwC6oE,KAAAV,EAAAnoE,WAAyC/K,EAAAuJ,QAAAjI,QAAA4xE,EAAA5xE,SAA+C4xE,EAAA,IAAA3xE,WAAA2xE,IAAsC,MAAAC,EAAAD,EAAoBE,EAAA,IAAApzE,EAAAyzE,6BAAAN,EAAAQ,EAAAC,GAAA,GAA+EN,EAAA,IAAA/xE,WAAA4xE,EAAA7xE,OAAA6xE,EAAA9pD,WAAA8pD,EAAApoE,YAAqG,OAA9BqoE,EAAAZ,WAAA15F,IAAAw6F,GAA8BF,GAAYpzE,EAAAmxE,cAAA,SAAAG,EAAAhwE,EAAA2vE,EAAAC,GAAyEA,KAAA,GAA8B,MAAA2C,EAAA,IAAA7zE,EAAA8zE,4BAAwD,QAAAn9F,KAAAu6F,EAA6B2C,EAAA/6F,IAAAnC,EAAAu6F,EAAAv6F,IAAoCs6F,GAAgB4C,EAAA/6F,IAAA,kBAAAm4F,GAA4C,MAAA8C,EAAA/zE,EAAAg0E,WAAAC,mBAAA3C,EAAAhwE,EAAAuyE,GAA0ExmD,EAAAwmD,EAAAxmD,OAA2B,QAAAj4C,EAAA,EAAYA,EAAAi4C,EAAAppB,OAAc7uB,IAAA,CAAK,MAAAuB,EAAA02C,EAAAp3C,IAAAb,GAAsB8+F,EAAAL,EAAA59F,IAAAU,GAAkCu6F,EAAAv6F,GAAAu9F,EAA4B,OAAOC,WAAAJ,EAAAI,aAAAC,aAAAL,EAAAK,eAAAC,YAAAN,EAAAM,gBAAsGr0E,EAAAs0E,UAAA,SAAAC,GAAuC,MAAAC,EAAA,kBAA0BC,EAAA,kBAAsV,GAAlTppD,KAAAqpD,SAAA,IAAAp9F,aAAA,EAAAk9F,EAAA,GAAAC,GAAAD,EAAA,GAAAC,GAAAD,EAAA,GAAAC,GAAAD,EAAA,GAAAC,EAAA,GAAAA,GAAAD,EAAA,GAAAC,GAAAD,EAAA,GAAAC,GAAAD,EAAA,GAAAC,GAAAD,GAAAC,GAAAD,EAAA,GAAAC,GAAAD,EAAA,GAAAC,GAAAD,EAAA,GAAAC,GAAAD,EAAA,IAA8InpD,KAAAspD,UAAA,IAAAnqE,YAAA,qIAAoK+pE,EAAa,KAAAA,KAAA,GAAoBlpD,KAAAupD,YAAkB,MAAAC,EAAAxpD,KAAAqpD,SAAAzjF,OAAA,EAAoCo6B,KAAAypD,SAAA,IAAAtqE,YAAA,EAAAqqE,GAAwC,QAAAz/F,EAAA,EAAYA,EAAAy/F,IAASz/F,EAAA,CAAK,MAAAktB,EAAA+oB,KAAAqpD,SAAA1tE,SAAA,EAAA5xB,EAAA,EAAAA,EAAA,GAA4Ci1C,EAAAgB,KAAAypD,SAAA9tE,SAAA,EAAA5xB,EAAA,EAAAA,EAAA,GAA4CyB,EAAAk+F,KAAAnnF,UAAAmnF,KAAAr+F,SAAA4rB,GAA0CpqB,EAAA68F,KAAAjnF,MAAAinF,KAAAr+F,SAAAG,EAAA,SAA4Ck+F,KAAAnnF,UAAA1V,KAAoB,MAAA5B,EAAAy+F,KAAAjnF,MAAAinF,KAAAr+F,SAAAwB,EAAArB,GAAsC6J,EAAAs0F,KAAAp/E,SAAAo/E,KAAAt+F,SAAA,CAAAJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA4B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAArB,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAoFo+F,KAAAC,YAAA7qD,EAAA3pC,KAA2Bsf,EAAAs0E,UAAAt9F,UAAA49F,UAAA,WAAmD,MAAAO,EAAA9pD,KAAAspD,UAA6BS,EAAA/pD,KAAAqpD,SAA6BW,EAAAF,EAAAlkF,OAAA,EAAgCqkF,EAAA,EAAAD,EAA0BE,EAAAH,EAAAnkF,OAAA,EAAkCukF,EAAAD,EAAA,EAAAF,EAAqCI,EAAA,IAAAjrE,YAAA,EAAA8qE,GAA0CI,EAAA,IAAAp+F,aAAA,EAAAk+F,GAA6CE,EAAA58F,IAAAs8F,GAA4E,IAArD,IAAAO,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAN,EAAAO,EAAAD,EAAA,EAAAE,EAAAD,EAAA,EAAqDE,EAAA,EAAcA,EAAAX,EAAaW,IAAAH,GAAA,EAAAC,GAAA,EAAAC,GAAA,GAAyB,MAAAE,EAAA,EAAAd,EAAAQ,KAA6BO,EAAA,EAAAf,EAAAQ,KAA6BQ,EAAA,EAAAhB,EAAAQ,KAA6Bx7F,EAAAi7F,EAAApuE,SAAAivE,IAAA,GAAoC77F,EAAAg7F,EAAApuE,SAAAkvE,IAAA,GAAoCtjF,EAAAwiF,EAAApuE,SAAAmvE,IAAA,GAAoCtjF,EAAA6iF,EAAA1uE,SAAA6uE,IAAA,GAAoC/iF,EAAA4iF,EAAA1uE,SAAA8uE,IAAA,GAAoCM,EAAAV,EAAA1uE,SAAA+uE,IAAA,GAAoChB,KAAAnnF,UAAAiF,EAAAkiF,KAAAh6F,IAAA8X,EAAA1Y,EAAAC,IAAsC26F,KAAAnnF,UAAAkF,EAAAiiF,KAAAh6F,IAAA+X,EAAA1Y,EAAAwY,IAAsCmiF,KAAAnnF,UAAAwoF,EAAArB,KAAAh6F,IAAAq7F,EAAAxjF,EAAAzY,IAAsCs7F,EAAAG,KAAAK,EAAA,EAAuBR,EAAAG,KAAAC,EAAA,EAAuBJ,EAAAG,KAAAG,EAAA,EAAuBN,EAAAG,KAAAC,EAAA,EAAuBJ,EAAAG,KAAAM,EAAA,EAAuBT,EAAAG,KAAAE,EAAA,EAAuBL,EAAAG,KAAAG,EAAA,EAAuBN,EAAAG,KAAAC,EAAA,EAAuBJ,EAAAG,KAAAE,EAAA,EAAuBL,EAAAG,KAAAO,EAAA,EAAuBV,EAAAG,KAAAG,EAAA,EAAuBN,EAAAG,KAAAE,EAAA,EAAuBzqD,KAAAspD,UAAAc,EAAuBpqD,KAAAqpD,SAAAgB,GAA8F11E,EAAAk1E,YAAA,SAAA7+F,GAAsC,OAAAoB,KAAA2V,MAAA,OAA3GlT,EAA2G7D,EAA3GggG,GAA2G,EAA3GC,EAA2G,EAA9E7+F,KAAAW,IAAAX,KAAA0V,IAAAmpF,EAAAp8F,GAAAm8F,KAA7B,IAAAn8F,EAAAm8F,EAAAC,GAAwJt2E,EAAAkvE,mBAAA,WAAwC+F,KAAAC,YAAA,SAAA78F,EAAAiqB,GAAoL,OAAhJjqB,EAAA,GAAA2nB,EAAAk1E,YAAA5yE,EAAA,IAAoCjqB,EAAA,GAAA2nB,EAAAk1E,YAAA5yE,EAAA,IAAoCjqB,EAAA,GAAA2nB,EAAAk1E,YAAA5yE,EAAA,IAAoCjqB,EAAA,GAAA2nB,EAAAk1E,YAAA5yE,EAAA,IAAoCjqB,GAAa,MAAAk+F,EAAAC,KAAAn8F,aAAsCm8F,KAAAn8F,aAAA,SAAAhC,EAAAo+F,EAAAzxF,GAA8C,OAAAA,EAASwxF,KAAA14F,SAAAzF,EAAAq+F,KAAAr8F,aAAAq8F,KAAAhgG,SAAA+/F,EAAAzxF,IAAwEuxF,EAAAl+F,EAAAo+F,KAAsCz2E,EAAAiwE,sBAAA,SAAA0G,EAAArF,EAAAtuC,GAAqF,MAAA4zC,GAApB5zC,KAAA,IAAoB,SAAAhjC,EAAAqyE,UAAAsE,GAA0DtG,IAAArtC,EAAA,KAA6B6zC,IAAA7zC,EAAA,KAA6B,OAAAhjC,EAAA82E,yBAAAxF,EAAAsF,EAAAC,EAAAxG,IAAiErwE,EAAAmwE,kBAAA,SAAAwG,EAAArF,EAAAtuC,GAA4F,MAAA+zC,GAA/B/zC,KAAA,CAAkBqtC,MAAA,IAAa,QAAArwE,EAAAqyE,UAAAsE,GAA4DK,EAAAh3E,EAAAiwE,sBAAA0G,EAAArF,EAAAtuC,GAA4Gi0C,EAAxCF,EAAAG,YAAA,MAAwCv0E,MAAA,SAAAipB,IAAAurD,YAAwD,OAAAn3E,EAAAo3E,cAAA5G,UAAA6G,YAAAL,GAAAM,aAAA,EAAAL,GAAAvG,MAAAY,IAAqGtxE,EAAA4wE,sBAAA,SAAA2G,EAAAjG,EAAAtuC,GAAiE,MAAAw0C,EAAAx3E,EAAAy3E,gBAAuCC,EAAA13E,EAAA23E,uBAAoDC,EAAA53E,EAAA43E,gBAAmEf,KAApB7zC,KAAA,IAAoB,KAA6BqtC,IAAArtC,EAAA,KAA6B60C,IAAA70C,EAAA,QAAmC80C,IAAA90C,EAAA,OAAiC+0C,EAAA/3E,EAAAg4E,UAAAT,EAAAM,EAAA,KAAyD,IAAAI,EAAAC,EAAAC,EAA8BN,GAAYI,EAAApB,EAAAa,EAAAU,MAAAV,EAAAW,KAAsDH,EAAAN,EAAAU,IAA6BH,EAAAn4E,EAAAu4E,cAAAC,QAAyCP,EAAApB,EAAAa,EAAAe,SAAAf,EAAAgB,MAA0DR,EAAA7H,EAAAuH,EAAAe,KAAAf,EAAAgB,KAAwDT,EAAAn4E,EAAAu4E,cAAAC,OAAoC,MAAAK,EAAA74E,EAAA4yE,QAAApC,UAAA/tF,MAAAs1F,EAAAt1F,OAAAC,OAAAq1F,EAAAr1F,QAAAo2F,OAAAhB,EAAA,OAAA5Q,QAAAsQ,EAAAuB,YAAA/4B,OAAAi4B,GAAA5H,QAAAK,MAAAY,GAAmL0H,EAAAh5E,EAAAuzE,YAAAwE,EAAAh2E,KAAAywE,WAAA0F,EAAAC,GAA8J,OAA3EU,EAAAhG,SAAAvB,EAAA,EAAA0H,GAAmClB,GAAYe,EAAAI,gBAAA3H,GAA4BuH,GAAa74E,EAAA+wE,uBAAA,SAAAD,EAAAQ,EAAAtuC,GAAoF,MAAA6zC,KAApB7zC,KAAA,IAAoB,KAA6B80C,IAAA90C,EAAA,OAAiC,IAAAk2C,EAAA92E,SAAA0uC,cAAA,UAAAC,WAAA,MAAgEmoC,EAAAroC,OAAApuD,MAAAquF,EAAAruF,MAAmCy2F,EAAAroC,OAAAnuD,OAAAouF,EAAApuF,OAAqCw2F,EAAAz2F,MAAAquF,EAAAruF,MAA4By2F,EAAAx2F,OAAAouF,EAAApuF,OAA8Bw2F,EAAAC,yBAAA,OAA0CD,EAAAloC,UAAA8/B,EAAA,KAA+B,IAAAsI,EAAAF,EAAAG,aAAA,IAAAvI,EAAAruF,MAAAquF,EAAApuF,QAAAqf,KAAAT,OAA6Eg4E,EAAA,IAAA/3E,WAAA63E,GAAwC,MAAAG,EAAAv5E,EAAA23E,uBAAyCM,EAAApB,EAAA0C,EAAAd,SAAAc,EAAAb,MAA0CR,EAAAl4E,EAAA43E,gBAAAgB,KAA6CT,EAAAn4E,EAAAu4E,cAAAC,MAA0CK,EAAA74E,EAAA4yE,QAAApC,UAAA/tF,MAAAquF,EAAAruF,OAAAC,OAAAouF,EAAApuF,QAAAo2F,OAAAhB,EAAA,OAAA5Q,QAAAlnE,EAAAy3E,gBAAAsB,YAAA/4B,OAAAi4B,GAAAvH,MAAAY,GAA+K0H,EAAAh5E,EAAAuzE,YAAA+F,EAAApB,EAAAC,GAA+I,OAA3EU,EAAAhG,SAAAvB,EAAA,EAAA0H,GAAmClB,GAAYe,EAAAI,gBAAA3H,GAA4BuH,GAAa74E,EAAAw5E,oBAAA,WAAyC,GAAAx5E,EAAAy5E,iBAA8B,OAAAz5E,EAAAy5E,iBAAqJ,MAAAt4D,EAAA,CAAcu4D,MAAA,EAAAC,MAAA,EAAAC,KAAA,GAAiC,IAAAxkG,EAAA+nE,EAArH/6C,SAAA0uC,cAAA,UAAAC,WAAA,SAA9C,CAAekK,aAAA,EAAAC,aAAA,IAAoJkC,yBAAAy8B,EAAA18B,EAAAlsD,OAA0D,IAAA7b,EAAA,EAAQA,EAAAykG,EAAQzkG,IAAA,CAAK,IAAAioE,EAAAF,EAAA/nE,GAAgB,iCAAAioE,EAAyCl8B,EAAAu4D,MAAA,EAAiB,iCAAAr8B,EAA8Cl8B,EAAAw4D,MAAA,EAAiB,gCAAAt8B,IAA6Cl8B,EAAAy4D,KAAA,GAAiB,OAAA55E,EAAAy5E,iBAAAt4D,GAA0CnhB,EAAA85E,yBAAA,SAAAC,GAA4DA,IAAAp3E,MAAA,KAAyC,IAAAw6C,EAAAn9C,EAAAw5E,sBAAwC,QAAA7iG,KAAAwmE,EAAqB,GAAAA,EAAAxmE,IAAAojG,EAAAC,SAAArjG,GAA4C,UAAAA,EAAe,UAMl+0SqpB,EAVA,GAcA7qB,EAAAD,QAAA8qB,sECfA,IAAAi6E,EAGAA,EAAA,WACA,OAAA5uD,KADA,GAIA,IAEA4uD,KAAA7uE,SAAA,cAAAA,KAAA,EAAA8uE,MAAA,QACC,MAAA9wE,GAED,iBAAA3I,SAAAw5E,EAAAx5E,QAOAtrB,EAAAD,QAAA+kG,iBClBA,IAOAE,EACAC,EARAz5E,EAAAxrB,EAAAD,QAAA,GAUA,SAAAmlG,IACA,UAAAnxE,MAAA,mCAEA,SAAAoxE,IACA,UAAApxE,MAAA,qCAsBA,SAAAqxE,EAAAC,GACA,GAAAL,IAAAltC,WAEA,OAAAA,WAAAutC,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAltC,WAEA,OADAktC,EAAAltC,WACAA,WAAAutC,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAApxE,GACL,IAEA,OAAA+wE,EAAA5kG,KAAA,KAAAilG,EAAA,GACS,MAAApxE,GAET,OAAA+wE,EAAA5kG,KAAA81C,KAAAmvD,EAAA,MAvCA,WACA,IAEAL,EADA,mBAAAltC,WACAA,WAEAotC,EAEK,MAAAjxE,GACL+wE,EAAAE,EAEA,IAEAD,EADA,mBAAAK,aACAA,aAEAH,EAEK,MAAAlxE,GACLgxE,EAAAE,GAjBA,GAwEA,IAEAI,EAFAxsC,EAAA,GACAysC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAD,IAGAC,GAAA,EACAD,EAAAzpF,OACAi9C,EAAAwsC,EAAA/3D,OAAAurB,GAEA0sC,GAAA,EAEA1sC,EAAAj9C,QACA6pF,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAjmC,EAAA6lC,EAAAM,GACAF,GAAA,EAGA,IADA,IAAA11F,EAAAipD,EAAAj9C,OACAhM,GAAA,CAGA,IAFAy1F,EAAAxsC,EACAA,EAAA,KACA0sC,EAAA31F,GACAy1F,GACAA,EAAAE,GAAAtM,MAGAsM,GAAA,EACA31F,EAAAipD,EAAAj9C,OAEAypF,EAAA,KACAC,GAAA,EAnEA,SAAAI,GACA,GAAAX,IAAAK,aAEA,OAAAA,aAAAM,GAGA,IAAAX,IAAAE,IAAAF,IAAAK,aAEA,OADAL,EAAAK,aACAA,aAAAM,GAEA,IAEAX,EAAAW,GACK,MAAA3xE,GACL,IAEA,OAAAgxE,EAAA7kG,KAAA,KAAAwlG,GACS,MAAA3xE,GAGT,OAAAgxE,EAAA7kG,KAAA81C,KAAA0vD,KAgDAC,CAAAtmC,IAiBA,SAAAumC,EAAAT,EAAAtvC,GACA7f,KAAAmvD,MACAnvD,KAAA6f,QAYA,SAAAgwC,KA5BAv6E,EAAAw6E,SAAA,SAAAX,GACA,IAAApxC,EAAA,IAAA7xD,MAAA2qB,UAAAjR,OAAA,GACA,GAAAiR,UAAAjR,OAAA,EACA,QAAA7b,EAAA,EAAuBA,EAAA8sB,UAAAjR,OAAsB7b,IAC7Cg0D,EAAAh0D,EAAA,GAAA8sB,UAAA9sB,GAGA84D,EAAAp+B,KAAA,IAAAmrE,EAAAT,EAAApxC,IACA,IAAA8E,EAAAj9C,QAAA0pF,GACAJ,EAAAO,IASAG,EAAAjkG,UAAAs3F,IAAA,WACAjjD,KAAAmvD,IAAA/yE,MAAA,KAAA4jB,KAAA6f,QAEAvqC,EAAA4C,MAAA,UACA5C,EAAAy6E,SAAA,EACAz6E,EAAA4M,IAAA,GACA5M,EAAAssD,KAAA,GACAtsD,EAAA86C,QAAA,GACA96C,EAAA06E,SAAA,GAIA16E,EAAA26E,GAAAJ,EACAv6E,EAAA46E,YAAAL,EACAv6E,EAAA66E,KAAAN,EACAv6E,EAAA86E,IAAAP,EACAv6E,EAAA+6E,eAAAR,EACAv6E,EAAAg7E,mBAAAT,EACAv6E,EAAAi7E,KAAAV,EACAv6E,EAAAk7E,gBAAAX,EACAv6E,EAAAm7E,oBAAAZ,EAEAv6E,EAAAo7E,UAAA,SAAApmG,GAAqC,UAErCgrB,EAAAq7E,QAAA,SAAArmG,GACA,UAAAuzB,MAAA,qCAGAvI,EAAAohB,IAAA,WAA2B,WAC3BphB,EAAAm4B,MAAA,SAAAzX,GACA,UAAAnY,MAAA,mCAEAvI,EAAAs9B,MAAA,WAA4B,yBCvL5B9oD,EAAAD,QAAA2vC,kBCAA1vC,EAAAD,QAAA8rB,mDCAA,IAEMi7E,EAFNjnG,EAAA,GAE2B8kG,yBAAyB,YAC9CoC,EAAU,gCAEHhnG,EAAAinG,IAASD,EAAO,OAAOD,EAAS,WAChC/mG,EAAAknG,SAAcF,EAAO,uBACrBhnG,EAAAmnG,SAAcH,EAAO,kBAErBhnG,EAAAonG,eAAiB,2BACjBpnG,EAAAqnG,YAAc,wBACdrnG,EAAAsnG,YAAc,wBAEdtnG,EAAAunG,QAAU,cACVvnG,EAAAwnG,SAAW,eACXxnG,EAAAynG,OAAS,aACTznG,EAAA6+F,KAAO,WAEP7+F,EAAA0nG,UAAY,uBACZ1nG,EAAA2nG,UAAY,kECZzB,IAAAC,EAAA9nG,EAAA,GAEA+nG,EAAA,WAKI,SAAAA,EAAYj5D,GACRuH,KAAKtC,SAAW+zD,EAAA/H,KAAKx8F,KAAKukG,EAAA/H,KAAKr+F,SAAUotC,GACzCuH,KAAK2xD,YAAcF,EAAA9H,KAAKt+F,SACxB20C,KAAK4xD,OAASH,EAAApG,KAAKhgG,SACnB20C,KAAK6xD,KAAOJ,EAAA/H,KAAKr+F,SASzB,OAPWqmG,EAAA/lG,UAAAmmG,UAAP,WACI,OAAOL,EAAApG,KAAK/wF,wBAAwB0lC,KAAK4xD,OAAQ5xD,KAAK2xD,YAAa3xD,KAAKtC,WAErEg0D,EAAA/lG,UAAA+F,UAAP,SAAiB7C,GACb4iG,EAAA/H,KAAKnmF,cAAcy8B,KAAK6xD,KAAMhjG,EAAGmxC,KAAK2xD,aACtCF,EAAA/H,KAAKh6F,IAAIswC,KAAKtC,SAAUsC,KAAKtC,SAAUsC,KAAK6xD,OAEpDH,EAlBA,6DCFA,IAAA/8E,EAAAhrB,EAAA,GACAooG,EAAApoG,EAAA,GAEA8nG,EAAA9nG,EAAA,GAEAqoG,EAAAroG,EAAA,IACAsoG,EAAAtoG,EAAA,IACAuoG,EAAAvoG,EAAA,IACAwoG,EAAAxoG,EAAA,IACAyoG,EAAAzoG,EAAA,GAEM0oG,EAAyBZ,EAAA/H,KAAKt8F,YAAY,KAAM,KAAM,KAEtDklG,EAAgB,CAClBP,EAAKhB,SACLgB,EAAKjB,IACLiB,EAAKb,YACLa,EAAKd,eACLc,EAAKZ,aAGTx8E,EAAS8iB,KAAK66D,EAAe,WAEzBb,EAAA7N,SAASt3F,mBAAmBJ,OAG5BkpB,OAAY,IAAI,IAAIm9E,IAGxB,IAAAA,EAAA,WAMI,SAAAA,IACI,IAAM/sC,EAASzuC,SAASy7E,qBAAqB,UAAU,GACjDjB,EAAY,IAAIW,EAAA,QAAQH,EAAKR,WAC7BC,EAAY,IAAIU,EAAA,QAAQH,EAAKP,WAC7BiB,EAAU,IAAIL,EAAA,QAAQC,GAC5BryD,KAAK0yD,WAAa,IAAIP,EAAA,QAAWM,EAASlB,EAAWC,GACrDxxD,KAAK2yD,QAAU,IAAIV,EAAA,QAAQzsC,EAAQitC,GACnCzyD,KAAK4yD,SAAW,IAAIZ,EAAA,QAAYhyD,KAAK2yD,QAAQE,OAAQJ,GACrDzyD,KAAK8yD,KAAO9yD,KAAK8yD,KAAKvnG,KAAKy0C,MAC3BA,KAAK+yD,KAAOl6D,KAAKC,MACjB1jB,OAAO2sC,sBAAsB/hB,KAAK8yD,MAqB1C,OAlBYP,EAAA5mG,UAAAmnG,KAAR,WAEI,IAAMC,EAAOl6D,KAAKC,MACZme,EAA0B,IAApB87C,EAAO/yD,KAAK+yD,MACxB/yD,KAAK+yD,KAAOA,EAGZ/yD,KAAK0yD,WAAWI,KAAK77C,GAGrBjX,KAAK4yD,SAASE,KAAK77C,EAAIjX,KAAK0yD,WAAWM,sBAGvChzD,KAAK2yD,QAAQM,SAGb79E,OAAO2sC,sBAAsB/hB,KAAK8yD,OAE1CP,EArCA,kCCpCA,SAAAtwE;;;;;;;AAUA,IAAAixE,EAAavpG,EAAQ,IACrBwpG,EAAcxpG,EAAQ,IACtBypG,EAAczpG,EAAQ,IAmDtB,SAAA0pG,IACA,OAAAn6D,EAAAo6D,oBACA,WACA,WAGA,SAAA/oB,EAAAgpB,EAAA3tF,GACA,GAAAytF,IAAAztF,EACA,UAAA4tF,WAAA,8BAcA,OAZAt6D,EAAAo6D,qBAEAC,EAAA,IAAAr9E,WAAAtQ,IACA6tF,UAAAv6D,EAAAvtC,WAGA,OAAA4nG,IACAA,EAAA,IAAAr6D,EAAAtzB,IAEA2tF,EAAA3tF,UAGA2tF,EAaA,SAAAr6D,EAAAvzB,EAAA+tF,EAAA9tF,GACA,KAAAszB,EAAAo6D,qBAAAtzD,gBAAA9G,GACA,WAAAA,EAAAvzB,EAAA+tF,EAAA9tF,GAIA,oBAAAD,EAAA,CACA,oBAAA+tF,EACA,UAAA71E,MACA,qEAGA,OAAA81E,EAAA3zD,KAAAr6B,GAEA,OAAAkxB,EAAAmJ,KAAAr6B,EAAA+tF,EAAA9tF,GAWA,SAAAixB,EAAA08D,EAAAvoG,EAAA0oG,EAAA9tF,GACA,oBAAA5a,EACA,UAAA2rC,UAAA,yCAGA,0BAAAhX,aAAA30B,aAAA20B,YA6HA,SAAA4zE,EAAA1zC,EAAA7hB,EAAAp4B,GAGA,GAFAi6C,EAAAngC,WAEAse,EAAA,GAAA6hB,EAAAngC,WAAAse,EACA,UAAAw1D,WAAA,6BAGA,GAAA3zC,EAAAngC,WAAAse,GAAAp4B,GAAA,GACA,UAAA4tF,WAAA,6BAIA3zC,OADApnC,IAAAulB,QAAAvlB,IAAA7S,EACA,IAAAsQ,WAAA2pC,QACGpnC,IAAA7S,EACH,IAAAsQ,WAAA2pC,EAAA7hB,GAEA,IAAA9nB,WAAA2pC,EAAA7hB,EAAAp4B,GAGAszB,EAAAo6D,qBAEAC,EAAA1zC,GACA4zC,UAAAv6D,EAAAvtC,UAGA4nG,EAAAK,EAAAL,EAAA1zC,GAEA,OAAA0zC,EAvJAM,CAAAN,EAAAvoG,EAAA0oG,EAAA9tF,GAGA,iBAAA5a,EAwFA,SAAAuoG,EAAAlkC,EAAA/hB,GACA,iBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAApU,EAAA46D,WAAAxmD,GACA,UAAA3W,UAAA,8CAGA,IAAA/wB,EAAA,EAAA8Z,EAAA2vC,EAAA/hB,GAGAymD,GAFAR,EAAAhpB,EAAAgpB,EAAA3tF,IAEAmzB,MAAAs2B,EAAA/hB,GAEAymD,IAAAnuF,IAIA2tF,IAAAl9E,MAAA,EAAA09E,IAGA,OAAAR,EA5GAS,CAAAT,EAAAvoG,EAAA0oG,GAsJA,SAAAH,EAAA9tD,GACA,GAAAvM,EAAA83C,SAAAvrC,GAAA,CACA,IAAA7rC,EAAA,EAAAq6F,EAAAxuD,EAAA7/B,QAGA,YAFA2tF,EAAAhpB,EAAAgpB,EAAA35F,IAEAgM,OACA2tF,GAGA9tD,EAAAv4C,KAAAqmG,EAAA,IAAA35F,GACA25F,GAGA,GAAA9tD,EAAA,CACA,uBAAA9lB,aACA8lB,EAAAxvB,kBAAA0J,aAAA,WAAA8lB,EACA,uBAAAA,EAAA7/B,SA+8CAm0B,EA/8CA0L,EAAA7/B,SAg9CAm0B,EA/8CAwwC,EAAAgpB,EAAA,GAEAK,EAAAL,EAAA9tD,GAGA,cAAAA,EAAAl5C,MAAA6mG,EAAA3tD,EAAA/uB,MACA,OAAAk9E,EAAAL,EAAA9tD,EAAA/uB,MAw8CA,IAAAqjB,EAp8CA,UAAApD,UAAA,sFA9KAu9D,CAAAX,EAAAvoG,GA4BA,SAAAmpG,EAAAv7E,GACA,oBAAAA,EACA,UAAA+d,UAAA,oCACG,GAAA/d,EAAA,EACH,UAAA46E,WAAA,wCA4BA,SAAAG,EAAAJ,EAAA36E,GAGA,GAFAu7E,EAAAv7E,GACA26E,EAAAhpB,EAAAgpB,EAAA36E,EAAA,MAAAq7E,EAAAr7E,KACAsgB,EAAAo6D,oBACA,QAAAvpG,EAAA,EAAmBA,EAAA6uB,IAAU7uB,EAC7BwpG,EAAAxpG,GAAA,EAGA,OAAAwpG,EAwCA,SAAAK,EAAAL,EAAA1zC,GACA,IAAAj6C,EAAAi6C,EAAAj6C,OAAA,MAAAquF,EAAAp0C,EAAAj6C,QACA2tF,EAAAhpB,EAAAgpB,EAAA3tF,GACA,QAAA7b,EAAA,EAAiBA,EAAA6b,EAAY7b,GAAA,EAC7BwpG,EAAAxpG,GAAA,IAAA81D,EAAA91D,GAEA,OAAAwpG,EA+DA,SAAAU,EAAAruF,GAGA,GAAAA,GAAAytF,IACA,UAAAG,WAAA,0DACAH,IAAAr9E,SAAA,cAEA,SAAApQ,EAsFA,SAAA8Z,EAAA2vC,EAAA/hB,GACA,GAAApU,EAAA83C,SAAA3hB,GACA,OAAAA,EAAAzpD,OAEA,uBAAA+Z,aAAA,mBAAAA,YAAA6tB,SACA7tB,YAAA6tB,OAAA6hB,iBAAA1vC,aACA,OAAA0vC,EAAA3vC,WAEA,iBAAA2vC,IACAA,EAAA,GAAAA,GAGA,IAAAz1D,EAAAy1D,EAAAzpD,OACA,OAAAhM,EAAA,SAIA,IADA,IAAAw6F,GAAA,IAEA,OAAA9mD,GACA,YACA,aACA,aACA,OAAA1zC,EACA,WACA,YACA,UAAA6e,EACA,OAAA47E,EAAAhlC,GAAAzpD,OACA,WACA,YACA,cACA,eACA,SAAAhM,EACA,UACA,OAAAA,IAAA,EACA,aACA,OAAA06F,EAAAjlC,GAAAzpD,OACA,QACA,GAAAwuF,EAAA,OAAAC,EAAAhlC,GAAAzpD,OACA0nC,GAAA,GAAAA,GAAA62C,cACAiQ,GAAA,GAgFA,SAAAG,EAAA1nG,EAAArB,EAAArB,GACA,IAAAJ,EAAA8C,EAAArB,GACAqB,EAAArB,GAAAqB,EAAA1C,GACA0C,EAAA1C,GAAAJ,EAmIA,SAAAyqG,EAAAv+E,EAAA8jB,EAAAiE,EAAAsP,EAAAtX,GAEA,OAAA/f,EAAArQ,OAAA,SAmBA,GAhBA,iBAAAo4B,GACAsP,EAAAtP,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACAy2D,MAAAz2D,KAEAA,EAAAhI,EAAA,EAAA/f,EAAArQ,OAAA,GAIAo4B,EAAA,IAAAA,EAAA/nB,EAAArQ,OAAAo4B,GACAA,GAAA/nB,EAAArQ,OAAA,CACA,GAAAowB,EAAA,SACAgI,EAAA/nB,EAAArQ,OAAA,OACG,GAAAo4B,EAAA,GACH,IAAAhI,EACA,SADAgI,EAAA,EAUA,GALA,iBAAAjE,IACAA,EAAAb,EAAArC,KAAAkD,EAAAuT,IAIApU,EAAA83C,SAAAj3C,GAEA,WAAAA,EAAAn0B,QACA,EAEA8uF,EAAAz+E,EAAA8jB,EAAAiE,EAAAsP,EAAAtX,GACG,oBAAA+D,EAEH,OADAA,GAAA,IACAb,EAAAo6D,qBACA,mBAAAp9E,WAAAvqB,UAAA0rB,QACA2e,EACA9f,WAAAvqB,UAAA0rB,QAAAntB,KAAA+rB,EAAA8jB,EAAAiE,GAEA9nB,WAAAvqB,UAAAwqC,YAAAjsC,KAAA+rB,EAAA8jB,EAAAiE,GAGA02D,EAAAz+E,EAAA,CAAA8jB,GAAAiE,EAAAsP,EAAAtX,GAGA,UAAAW,UAAA,wCAGA,SAAA+9D,EAAA19D,EAAA+C,EAAAiE,EAAAsP,EAAAtX,GACA,IA0BAjsC,EA1BA4qG,EAAA,EACAC,EAAA59D,EAAApxB,OACAivF,EAAA96D,EAAAn0B,OAEA,QAAA6S,IAAA60B,IAEA,UADAA,EAAApxB,OAAAoxB,GAAA62C,gBACA,UAAA72C,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAAtW,EAAApxB,OAAA,GAAAm0B,EAAAn0B,OAAA,EACA,SAEA+uF,EAAA,EACAC,GAAA,EACAC,GAAA,EACA72D,GAAA,EAIA,SAAAvnB,EAAAqI,EAAA/0B,GACA,WAAA4qG,EACA71E,EAAA/0B,GAEA+0B,EAAAg2E,aAAA/qG,EAAA4qG,GAKA,GAAA3+D,EAAA,CACA,IAAA++D,GAAA,EACA,IAAAhrG,EAAAi0C,EAAwBj0C,EAAA6qG,EAAe7qG,IACvC,GAAA0sB,EAAAugB,EAAAjtC,KAAA0sB,EAAAsjB,GAAA,IAAAg7D,EAAA,EAAAhrG,EAAAgrG,IAEA,IADA,IAAAA,MAAAhrG,GACAA,EAAAgrG,EAAA,IAAAF,EAAA,OAAAE,EAAAJ,OAEA,IAAAI,IAAAhrG,KAAAgrG,GACAA,GAAA,OAKA,IADA/2D,EAAA62D,EAAAD,IAAA52D,EAAA42D,EAAAC,GACA9qG,EAAAi0C,EAAwBj0C,GAAA,EAAQA,IAAA,CAEhC,IADA,IAAAirG,GAAA,EACAtqF,EAAA,EAAqBA,EAAAmqF,EAAenqF,IACpC,GAAA+L,EAAAugB,EAAAjtC,EAAA2gB,KAAA+L,EAAAsjB,EAAArvB,GAAA,CACAsqF,GAAA,EACA,MAGA,GAAAA,EAAA,OAAAjrG,EAIA,SAeA,SAAAkrG,EAAAn2E,EAAAuwC,EAAA7pD,EAAAI,GACAJ,EAAAmrC,OAAAnrC,IAAA,EACA,IAAAw9C,EAAAlkC,EAAAlZ,OAAAJ,EACAI,GAGAA,EAAA+qC,OAAA/qC,IACAo9C,IACAp9C,EAAAo9C,GAJAp9C,EAAAo9C,EASA,IAAAkyC,EAAA7lC,EAAAzpD,OACA,GAAAsvF,EAAA,eAAAv+D,UAAA,sBAEA/wB,EAAAsvF,EAAA,IACAtvF,EAAAsvF,EAAA,GAEA,QAAAnrG,EAAA,EAAiBA,EAAA6b,IAAY7b,EAAA,CAC7B,IAAAorG,EAAA37E,SAAA61C,EAAA51C,OAAA,EAAA1vB,EAAA,OACA,GAAA0qG,MAAAU,GAAA,OAAAprG,EACA+0B,EAAAtZ,EAAAzb,GAAAorG,EAEA,OAAAprG,EAGA,SAAAqrG,EAAAt2E,EAAAuwC,EAAA7pD,EAAAI,GACA,OAAAyvF,EAAAhB,EAAAhlC,EAAAvwC,EAAAlZ,OAAAJ,GAAAsZ,EAAAtZ,EAAAI,GAGA,SAAA0vF,EAAAx2E,EAAAuwC,EAAA7pD,EAAAI,GACA,OAAAyvF,EAq6BA,SAAAnmG,GAEA,IADA,IAAAyiD,EAAA,GACA5nD,EAAA,EAAiBA,EAAAmF,EAAA0W,SAAgB7b,EAEjC4nD,EAAAltB,KAAA,IAAAv1B,EAAAquB,WAAAxzB,IAEA,OAAA4nD,EA36BA4jD,CAAAlmC,GAAAvwC,EAAAtZ,EAAAI,GAGA,SAAA4vF,EAAA12E,EAAAuwC,EAAA7pD,EAAAI,GACA,OAAA0vF,EAAAx2E,EAAAuwC,EAAA7pD,EAAAI,GAGA,SAAA6vF,EAAA32E,EAAAuwC,EAAA7pD,EAAAI,GACA,OAAAyvF,EAAAf,EAAAjlC,GAAAvwC,EAAAtZ,EAAAI,GAGA,SAAA8vF,EAAA52E,EAAAuwC,EAAA7pD,EAAAI,GACA,OAAAyvF,EAk6BA,SAAAnmG,EAAAymG,GAGA,IAFA,IAAAvrG,EAAAwrG,EAAAC,EACAlkD,EAAA,GACA5nD,EAAA,EAAiBA,EAAAmF,EAAA0W,WACjB+vF,GAAA,QADiC5rG,EAGjCK,EAAA8E,EAAAquB,WAAAxzB,GACA6rG,EAAAxrG,GAAA,EACAyrG,EAAAzrG,EAAA,IACAunD,EAAAltB,KAAAoxE,GACAlkD,EAAAltB,KAAAmxE,GAGA,OAAAjkD,EA/6BAmkD,CAAAzmC,EAAAvwC,EAAAlZ,OAAAJ,GAAAsZ,EAAAtZ,EAAAI,GAkFA,SAAAmwF,EAAAj3E,EAAAmY,EAAAhe,GACA,WAAAge,GAAAhe,IAAA6F,EAAAlZ,OACAstF,EAAA8C,cAAAl3E,GAEAo0E,EAAA8C,cAAAl3E,EAAAzI,MAAA4gB,EAAAhe,IAIA,SAAAg9E,EAAAn3E,EAAAmY,EAAAhe,GACAA,EAAA7sB,KAAA0V,IAAAgd,EAAAlZ,OAAAqT,GAIA,IAHA,IAAAi9E,EAAA,GAEAnsG,EAAAktC,EACAltC,EAAAkvB,GAAA,CACA,IAQAk9E,EAAAC,EAAAC,EAAAC,EARAC,EAAAz3E,EAAA/0B,GACAysG,EAAA,KACAC,EAAAF,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,EAEA,GAAAxsG,EAAA0sG,GAAAx9E,EAGA,OAAAw9E,GACA,OACAF,EAAA,MACAC,EAAAD,GAEA,MACA,OAEA,WADAJ,EAAAr3E,EAAA/0B,EAAA,OAEAusG,GAAA,GAAAC,IAAA,KAAAJ,GACA,MACAK,EAAAF,GAGA,MACA,OACAH,EAAAr3E,EAAA/0B,EAAA,GACAqsG,EAAAt3E,EAAA/0B,EAAA,GACA,UAAAosG,IAAA,UAAAC,KACAE,GAAA,GAAAC,IAAA,OAAAJ,IAAA,KAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAE,EAAAF,GAGA,MACA,OACAH,EAAAr3E,EAAA/0B,EAAA,GACAqsG,EAAAt3E,EAAA/0B,EAAA,GACAssG,EAAAv3E,EAAA/0B,EAAA,GACA,UAAAosG,IAAA,UAAAC,IAAA,UAAAC,KACAC,GAAA,GAAAC,IAAA,OAAAJ,IAAA,OAAAC,IAAA,KAAAC,GACA,OAAAC,EAAA,UACAE,EAAAF,GAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACKD,EAAA,QAELA,GAAA,MACAN,EAAAzxE,KAAA+xE,IAAA,eACAA,EAAA,WAAAA,GAGAN,EAAAzxE,KAAA+xE,GACAzsG,GAAA0sG,EAGA,OAQA,SAAAC,GACA,IAAA98F,EAAA88F,EAAA9wF,OACA,GAAAhM,GAAA+8F,EACA,OAAAz6E,OAAAC,aAAAC,MAAAF,OAAAw6E,GAIA,IAAAR,EAAA,GACAnsG,EAAA,EACA,KAAAA,EAAA6P,GACAs8F,GAAAh6E,OAAAC,aAAAC,MACAF,OACAw6E,EAAArgF,MAAAtsB,KAAA4sG,IAGA,OAAAT,EAvBAU,CAAAV,GA98BArsG,EAAAqvC,SACArvC,EAAAgtG,WAoTA,SAAAjxF,IACAA,OACAA,EAAA,GAEA,OAAAszB,EAAAiK,OAAAv9B,IAvTA/b,EAAAitG,kBAAA,GA0BA59D,EAAAo6D,yBAAA76E,IAAAwJ,EAAAqxE,oBACArxE,EAAAqxE,oBAQA,WACA,IACA,IAAAt8D,EAAA,IAAA9gB,WAAA,GAEA,OADA8gB,EAAAy8D,UAAA,CAAqBA,UAAAv9E,WAAAvqB,UAAAorG,IAAA,WAAmD,YACxE,KAAA//D,EAAA+/D,OACA,mBAAA//D,EAAArb,UACA,IAAAqb,EAAArb,SAAA,KAAA+D,WACG,MAAA3B,GACH,UAfAi5E,GAKAntG,EAAAwpG,eAkEAn6D,EAAA+9D,SAAA,KAGA/9D,EAAAg+D,SAAA,SAAAlgE,GAEA,OADAA,EAAAy8D,UAAAv6D,EAAAvtC,UACAqrC,GA2BAkC,EAAArC,KAAA,SAAA7rC,EAAA0oG,EAAA9tF,GACA,OAAAixB,EAAA,KAAA7rC,EAAA0oG,EAAA9tF,IAGAszB,EAAAo6D,sBACAp6D,EAAAvtC,UAAA8nG,UAAAv9E,WAAAvqB,UACAutC,EAAAu6D,UAAAv9E,WACA,oBAAAprB,eAAAqsG,SACAj+D,EAAApuC,OAAAqsG,WAAAj+D,GAEAzuC,OAAAC,eAAAwuC,EAAApuC,OAAAqsG,QAAA,CACAnsG,MAAA,KACAyzE,cAAA,KAiCAvlC,EAAAiK,MAAA,SAAAvqB,EAAAw+E,EAAA9pD,GACA,OArBA,SAAAimD,EAAA36E,EAAAw+E,EAAA9pD,GAEA,OADA6mD,EAAAv7E,GACAA,GAAA,EACA2xD,EAAAgpB,EAAA36E,QAEAH,IAAA2+E,EAIA,iBAAA9pD,EACAi9B,EAAAgpB,EAAA36E,GAAAw+E,OAAA9pD,GACAi9B,EAAAgpB,EAAA36E,GAAAw+E,QAEA7sB,EAAAgpB,EAAA36E,GAQAuqB,CAAA,KAAAvqB,EAAAw+E,EAAA9pD,IAiBApU,EAAAy6D,YAAA,SAAA/6E,GACA,OAAA+6E,EAAA,KAAA/6E,IAKAsgB,EAAAm+D,gBAAA,SAAAz+E,GACA,OAAA+6E,EAAA,KAAA/6E,IAiHAsgB,EAAA83C,SAAA,SAAAnkF,GACA,cAAAA,MAAAyqG,YAGAp+D,EAAAq+D,QAAA,SAAA5qG,EAAAE,GACA,IAAAqsC,EAAA83C,SAAArkF,KAAAusC,EAAA83C,SAAAnkF,GACA,UAAA8pC,UAAA,6BAGA,GAAAhqC,IAAAE,EAAA,SAKA,IAHA,IAAA+H,EAAAjI,EAAAiZ,OACA/Q,EAAAhI,EAAA+Y,OAEA7b,EAAA,EAAA6P,EAAAxN,KAAA0V,IAAAlN,EAAAC,GAAuC9K,EAAA6P,IAAS7P,EAChD,GAAA4C,EAAA5C,KAAA8C,EAAA9C,GAAA,CACA6K,EAAAjI,EAAA5C,GACA8K,EAAAhI,EAAA9C,GACA,MAIA,OAAA6K,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GAGAskC,EAAA46D,WAAA,SAAAxmD,GACA,OAAApxB,OAAAoxB,GAAA62C,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,SACA,QACA,WAIAjrD,EAAA5B,OAAA,SAAA4oD,EAAAt6E,GACA,IAAAwtF,EAAAlT,GACA,UAAAvpD,UAAA,+CAGA,OAAAupD,EAAAt6E,OACA,OAAAszB,EAAAiK,MAAA,GAGA,IAAAp5C,EACA,QAAA0uB,IAAA7S,EAEA,IADAA,EAAA,EACA7b,EAAA,EAAeA,EAAAm2F,EAAAt6E,SAAiB7b,EAChC6b,GAAAs6E,EAAAn2F,GAAA6b,OAIA,IAAAqQ,EAAAijB,EAAAy6D,YAAA/tF,GACA6yB,EAAA,EACA,IAAA1uC,EAAA,EAAaA,EAAAm2F,EAAAt6E,SAAiB7b,EAAA,CAC9B,IAAA+0B,EAAAohE,EAAAn2F,GACA,IAAAmvC,EAAA83C,SAAAlyD,GACA,UAAA6X,UAAA,+CAEA7X,EAAA5xB,KAAA+oB,EAAAwiB,GACAA,GAAA3Z,EAAAlZ,OAEA,OAAAqQ,GA8CAijB,EAAAxZ,aA0EAwZ,EAAAvtC,UAAA2rG,WAAA,EAQAp+D,EAAAvtC,UAAA6rG,OAAA,WACA,IAAA59F,EAAAomC,KAAAp6B,OACA,GAAAhM,EAAA,KACA,UAAA45F,WAAA,6CAEA,QAAAzpG,EAAA,EAAiBA,EAAA6P,EAAS7P,GAAA,EAC1BwqG,EAAAv0D,KAAAj2C,IAAA,GAEA,OAAAi2C,MAGA9G,EAAAvtC,UAAA8rG,OAAA,WACA,IAAA79F,EAAAomC,KAAAp6B,OACA,GAAAhM,EAAA,KACA,UAAA45F,WAAA,6CAEA,QAAAzpG,EAAA,EAAiBA,EAAA6P,EAAS7P,GAAA,EAC1BwqG,EAAAv0D,KAAAj2C,IAAA,GACAwqG,EAAAv0D,KAAAj2C,EAAA,EAAAA,EAAA,GAEA,OAAAi2C,MAGA9G,EAAAvtC,UAAA+rG,OAAA,WACA,IAAA99F,EAAAomC,KAAAp6B,OACA,GAAAhM,EAAA,KACA,UAAA45F,WAAA,6CAEA,QAAAzpG,EAAA,EAAiBA,EAAA6P,EAAS7P,GAAA,EAC1BwqG,EAAAv0D,KAAAj2C,IAAA,GACAwqG,EAAAv0D,KAAAj2C,EAAA,EAAAA,EAAA,GACAwqG,EAAAv0D,KAAAj2C,EAAA,EAAAA,EAAA,GACAwqG,EAAAv0D,KAAAj2C,EAAA,EAAAA,EAAA,GAEA,OAAAi2C,MAGA9G,EAAAvtC,UAAAqqB,SAAA,WACA,IAAApQ,EAAA,EAAAo6B,KAAAp6B,OACA,WAAAA,EAAA,GACA,IAAAiR,UAAAjR,OAAAqwF,EAAAj2D,KAAA,EAAAp6B,GAxHA,SAAA0nC,EAAArW,EAAAhe,GACA,IAAAm7E,GAAA,EAcA,SALA37E,IAAAwe,KAAA,KACAA,EAAA,GAIAA,EAAA+I,KAAAp6B,OACA,SAOA,SAJA6S,IAAAQ,KAAA+mB,KAAAp6B,UACAqT,EAAA+mB,KAAAp6B,QAGAqT,GAAA,EACA,SAOA,IAHAA,KAAA,KACAge,KAAA,GAGA,SAKA,IAFAqW,MAAA,UAGA,OAAAA,GACA,UACA,OAAAqqD,EAAA33D,KAAA/I,EAAAhe,GAEA,WACA,YACA,OAAAg9E,EAAAj2D,KAAA/I,EAAAhe,GAEA,YACA,OAAA2+E,EAAA53D,KAAA/I,EAAAhe,GAEA,aACA,aACA,OAAA4+E,EAAA73D,KAAA/I,EAAAhe,GAEA,aACA,OAAA88E,EAAA/1D,KAAA/I,EAAAhe,GAEA,WACA,YACA,cACA,eACA,OAAA6+E,EAAA93D,KAAA/I,EAAAhe,GAEA,QACA,GAAAm7E,EAAA,UAAAz9D,UAAA,qBAAA2W,GACAA,KAAA,IAAA62C,cACAiQ,GAAA,IAwDAh4E,MAAA4jB,KAAAnpB,YAGAqiB,EAAAvtC,UAAAiB,OAAA,SAAAC,GACA,IAAAqsC,EAAA83C,SAAAnkF,GAAA,UAAA8pC,UAAA,6BACA,OAAAqJ,OAAAnzC,GACA,IAAAqsC,EAAAq+D,QAAAv3D,KAAAnzC,IAGAqsC,EAAAvtC,UAAAosG,QAAA,WACA,IAAA7oG,EAAA,GACAnC,EAAAlD,EAAAitG,kBAKA,OAJA92D,KAAAp6B,OAAA,IACA1W,EAAA8wC,KAAAhqB,SAAA,QAAAjpB,GAAA41C,MAAA,SAAkDprB,KAAA,KAClDyoB,KAAAp6B,OAAA7Y,IAAAmC,GAAA,UAEA,WAAAA,EAAA,KAGAgqC,EAAAvtC,UAAA4rG,QAAA,SAAAv3F,EAAAi3B,EAAAhe,EAAA++E,EAAAC,GACA,IAAA/+D,EAAA83C,SAAAhxE,GACA,UAAA22B,UAAA,6BAgBA,QAbAle,IAAAwe,IACAA,EAAA,QAEAxe,IAAAQ,IACAA,EAAAjZ,IAAA4F,OAAA,QAEA6S,IAAAu/E,IACAA,EAAA,QAEAv/E,IAAAw/E,IACAA,EAAAj4D,KAAAp6B,QAGAqxB,EAAA,GAAAhe,EAAAjZ,EAAA4F,QAAAoyF,EAAA,GAAAC,EAAAj4D,KAAAp6B,OACA,UAAA4tF,WAAA,sBAGA,GAAAwE,GAAAC,GAAAhhE,GAAAhe,EACA,SAEA,GAAA++E,GAAAC,EACA,SAEA,GAAAhhE,GAAAhe,EACA,SAQA,GAAA+mB,OAAAhgC,EAAA,SASA,IAPA,IAAApL,GAJAqjG,KAAA,IADAD,KAAA,GAMAnjG,GAPAokB,KAAA,IADAge,KAAA,GASAr9B,EAAAxN,KAAA0V,IAAAlN,EAAAC,GAEAqjG,EAAAl4D,KAAA3pB,MAAA2hF,EAAAC,GACAE,EAAAn4F,EAAAqW,MAAA4gB,EAAAhe,GAEAlvB,EAAA,EAAiBA,EAAA6P,IAAS7P,EAC1B,GAAAmuG,EAAAnuG,KAAAouG,EAAApuG,GAAA,CACA6K,EAAAsjG,EAAAnuG,GACA8K,EAAAsjG,EAAApuG,GACA,MAIA,OAAA6K,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GA6HAskC,EAAAvtC,UAAAgjG,SAAA,SAAA50D,EAAAiE,EAAAsP,GACA,WAAAtN,KAAA3oB,QAAA0iB,EAAAiE,EAAAsP,IAGApU,EAAAvtC,UAAA0rB,QAAA,SAAA0iB,EAAAiE,EAAAsP,GACA,OAAAknD,EAAAx0D,KAAAjG,EAAAiE,EAAAsP,GAAA,IAGApU,EAAAvtC,UAAAwqC,YAAA,SAAA4D,EAAAiE,EAAAsP,GACA,OAAAknD,EAAAx0D,KAAAjG,EAAAiE,EAAAsP,GAAA,IAkDApU,EAAAvtC,UAAAotC,MAAA,SAAAs2B,EAAA7pD,EAAAI,EAAA0nC,GAEA,QAAA70B,IAAAjT,EACA8nC,EAAA,OACA1nC,EAAAo6B,KAAAp6B,OACAJ,EAAA,OAEG,QAAAiT,IAAA7S,GAAA,iBAAAJ,EACH8nC,EAAA9nC,EACAI,EAAAo6B,KAAAp6B,OACAJ,EAAA,MAEG,KAAA4yF,SAAA5yF,GAWH,UAAAqY,MACA,2EAXArY,GAAA,EACA4yF,SAAAxyF,IACAA,GAAA,OACA6S,IAAA60B,MAAA,UAEAA,EAAA1nC,EACAA,OAAA6S,GASA,IAAAuqC,EAAAhjB,KAAAp6B,OAAAJ,EAGA,SAFAiT,IAAA7S,KAAAo9C,KAAAp9C,EAAAo9C,GAEAqM,EAAAzpD,OAAA,IAAAA,EAAA,GAAAJ,EAAA,IAAAA,EAAAw6B,KAAAp6B,OACA,UAAA4tF,WAAA,0CAGAlmD,MAAA,QAGA,IADA,IAAA8mD,GAAA,IAEA,OAAA9mD,GACA,UACA,OAAA2nD,EAAAj1D,KAAAqvB,EAAA7pD,EAAAI,GAEA,WACA,YACA,OAAAwvF,EAAAp1D,KAAAqvB,EAAA7pD,EAAAI,GAEA,YACA,OAAA0vF,EAAAt1D,KAAAqvB,EAAA7pD,EAAAI,GAEA,aACA,aACA,OAAA4vF,EAAAx1D,KAAAqvB,EAAA7pD,EAAAI,GAEA,aAEA,OAAA6vF,EAAAz1D,KAAAqvB,EAAA7pD,EAAAI,GAEA,WACA,YACA,cACA,eACA,OAAA8vF,EAAA11D,KAAAqvB,EAAA7pD,EAAAI,GAEA,QACA,GAAAwuF,EAAA,UAAAz9D,UAAA,qBAAA2W,GACAA,GAAA,GAAAA,GAAA62C,cACAiQ,GAAA,IAKAl7D,EAAAvtC,UAAA0sG,OAAA,WACA,OACA9rG,KAAA,SACAmqB,KAAAxqB,MAAAP,UAAA0qB,MAAAnsB,KAAA81C,KAAAs4D,MAAAt4D,KAAA,KAwFA,IAAA22D,EAAA,KAoBA,SAAAiB,EAAA94E,EAAAmY,EAAAhe,GACA,IAAAlD,EAAA,GACAkD,EAAA7sB,KAAA0V,IAAAgd,EAAAlZ,OAAAqT,GAEA,QAAAlvB,EAAAktC,EAAqBltC,EAAAkvB,IAASlvB,EAC9BgsB,GAAAmG,OAAAC,aAAA,IAAA2C,EAAA/0B,IAEA,OAAAgsB,EAGA,SAAA8hF,EAAA/4E,EAAAmY,EAAAhe,GACA,IAAAlD,EAAA,GACAkD,EAAA7sB,KAAA0V,IAAAgd,EAAAlZ,OAAAqT,GAEA,QAAAlvB,EAAAktC,EAAqBltC,EAAAkvB,IAASlvB,EAC9BgsB,GAAAmG,OAAAC,aAAA2C,EAAA/0B,IAEA,OAAAgsB,EAGA,SAAA4hF,EAAA74E,EAAAmY,EAAAhe,GACA,IAAArf,EAAAklB,EAAAlZ,SAEAqxB,KAAA,KAAAA,EAAA,KACAhe,KAAA,GAAAA,EAAArf,KAAAqf,EAAArf,GAGA,IADA,IAAA5M,EAAA,GACAjD,EAAAktC,EAAqBltC,EAAAkvB,IAASlvB,EAC9BiD,GAAAurG,EAAAz5E,EAAA/0B,IAEA,OAAAiD,EAGA,SAAA8qG,EAAAh5E,EAAAmY,EAAAhe,GAGA,IAFA,IAAA87C,EAAAj2C,EAAAzI,MAAA4gB,EAAAhe,GACAi9E,EAAA,GACAnsG,EAAA,EAAiBA,EAAAgrE,EAAAnvD,OAAkB7b,GAAA,EACnCmsG,GAAAh6E,OAAAC,aAAA44C,EAAAhrE,GAAA,IAAAgrE,EAAAhrE,EAAA,IAEA,OAAAmsG,EA0CA,SAAAsC,EAAAhzF,EAAAwsD,EAAApsD,GACA,GAAAJ,EAAA,MAAAA,EAAA,YAAAguF,WAAA,sBACA,GAAAhuF,EAAAwsD,EAAApsD,EAAA,UAAA4tF,WAAA,yCA+JA,SAAAiF,EAAA35E,EAAA9zB,EAAAwa,EAAAwsD,EAAAjlE,EAAA+U,GACA,IAAAo3B,EAAA83C,SAAAlyD,GAAA,UAAA6X,UAAA,+CACA,GAAA3rC,EAAA+B,GAAA/B,EAAA8W,EAAA,UAAA0xF,WAAA,qCACA,GAAAhuF,EAAAwsD,EAAAlzC,EAAAlZ,OAAA,UAAA4tF,WAAA,sBAkDA,SAAAkF,EAAA55E,EAAA9zB,EAAAwa,EAAAmzF,GACA3tG,EAAA,IAAAA,EAAA,MAAAA,EAAA,GACA,QAAAjB,EAAA,EAAA2gB,EAAAte,KAAA0V,IAAAgd,EAAAlZ,OAAAJ,EAAA,GAAuDzb,EAAA2gB,IAAO3gB,EAC9D+0B,EAAAtZ,EAAAzb,IAAAiB,EAAA,QAAA2tG,EAAA5uG,EAAA,EAAAA,MACA,GAAA4uG,EAAA5uG,EAAA,EAAAA,GA8BA,SAAA6uG,EAAA95E,EAAA9zB,EAAAwa,EAAAmzF,GACA3tG,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA,QAAAjB,EAAA,EAAA2gB,EAAAte,KAAA0V,IAAAgd,EAAAlZ,OAAAJ,EAAA,GAAuDzb,EAAA2gB,IAAO3gB,EAC9D+0B,EAAAtZ,EAAAzb,GAAAiB,IAAA,GAAA2tG,EAAA5uG,EAAA,EAAAA,GAAA,IAmJA,SAAA8uG,EAAA/5E,EAAA9zB,EAAAwa,EAAAwsD,EAAAjlE,EAAA+U,GACA,GAAA0D,EAAAwsD,EAAAlzC,EAAAlZ,OAAA,UAAA4tF,WAAA,sBACA,GAAAhuF,EAAA,YAAAguF,WAAA,sBAGA,SAAAsF,EAAAh6E,EAAA9zB,EAAAwa,EAAAmzF,EAAAI,GAKA,OAJAA,GACAF,EAAA/5E,EAAA9zB,EAAAwa,EAAA,GAEA2tF,EAAAp6D,MAAAja,EAAA9zB,EAAAwa,EAAAmzF,EAAA,MACAnzF,EAAA,EAWA,SAAAwzF,EAAAl6E,EAAA9zB,EAAAwa,EAAAmzF,EAAAI,GAKA,OAJAA,GACAF,EAAA/5E,EAAA9zB,EAAAwa,EAAA,GAEA2tF,EAAAp6D,MAAAja,EAAA9zB,EAAAwa,EAAAmzF,EAAA,MACAnzF,EAAA,EA/cA0zB,EAAAvtC,UAAA0qB,MAAA,SAAA4gB,EAAAhe,GACA,IAoBAggF,EApBAr/F,EAAAomC,KAAAp6B,OAqBA,IApBAqxB,OAGA,GACAA,GAAAr9B,GACA,IAAAq9B,EAAA,GACGA,EAAAr9B,IACHq9B,EAAAr9B,IANAqf,OAAAR,IAAAQ,EAAArf,IAAAqf,GASA,GACAA,GAAArf,GACA,IAAAqf,EAAA,GACGA,EAAArf,IACHqf,EAAArf,GAGAqf,EAAAge,IAAAhe,EAAAge,GAGAiC,EAAAo6D,qBACA2F,EAAAj5D,KAAArkB,SAAAsb,EAAAhe,IACAw6E,UAAAv6D,EAAAvtC,cACG,CACH,IAAAutG,EAAAjgF,EAAAge,EACAgiE,EAAA,IAAA//D,EAAAggE,OAAAzgF,GACA,QAAA1uB,EAAA,EAAmBA,EAAAmvG,IAAcnvG,EACjCkvG,EAAAlvG,GAAAi2C,KAAAj2C,EAAAktC,GAIA,OAAAgiE,GAWA//D,EAAAvtC,UAAAwtG,WAAA,SAAA3zF,EAAAka,EAAAq5E,GACAvzF,GAAA,EACAka,GAAA,EACAq5E,GAAAP,EAAAhzF,EAAAka,EAAAsgB,KAAAp6B,QAKA,IAHA,IAAAm0B,EAAAiG,KAAAx6B,GACAvV,EAAA,EACAlG,EAAA,IACAA,EAAA21B,IAAAzvB,GAAA,MACA8pC,GAAAiG,KAAAx6B,EAAAzb,GAAAkG,EAGA,OAAA8pC,GAGAb,EAAAvtC,UAAAytG,WAAA,SAAA5zF,EAAAka,EAAAq5E,GACAvzF,GAAA,EACAka,GAAA,EACAq5E,GACAP,EAAAhzF,EAAAka,EAAAsgB,KAAAp6B,QAKA,IAFA,IAAAm0B,EAAAiG,KAAAx6B,IAAAka,GACAzvB,EAAA,EACAyvB,EAAA,IAAAzvB,GAAA,MACA8pC,GAAAiG,KAAAx6B,IAAAka,GAAAzvB,EAGA,OAAA8pC,GAGAb,EAAAvtC,UAAA0tG,UAAA,SAAA7zF,EAAAuzF,GAEA,OADAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACAo6B,KAAAx6B,IAGA0zB,EAAAvtC,UAAA2tG,aAAA,SAAA9zF,EAAAuzF,GAEA,OADAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACAo6B,KAAAx6B,GAAAw6B,KAAAx6B,EAAA,OAGA0zB,EAAAvtC,UAAAmpG,aAAA,SAAAtvF,EAAAuzF,GAEA,OADAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACAo6B,KAAAx6B,IAAA,EAAAw6B,KAAAx6B,EAAA,IAGA0zB,EAAAvtC,UAAA4tG,aAAA,SAAA/zF,EAAAuzF,GAGA,OAFAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,SAEAo6B,KAAAx6B,GACAw6B,KAAAx6B,EAAA,MACAw6B,KAAAx6B,EAAA,QACA,SAAAw6B,KAAAx6B,EAAA,IAGA0zB,EAAAvtC,UAAA6tG,aAAA,SAAAh0F,EAAAuzF,GAGA,OAFAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QAEA,SAAAo6B,KAAAx6B,IACAw6B,KAAAx6B,EAAA,OACAw6B,KAAAx6B,EAAA,MACAw6B,KAAAx6B,EAAA,KAGA0zB,EAAAvtC,UAAA8tG,UAAA,SAAAj0F,EAAAka,EAAAq5E,GACAvzF,GAAA,EACAka,GAAA,EACAq5E,GAAAP,EAAAhzF,EAAAka,EAAAsgB,KAAAp6B,QAKA,IAHA,IAAAm0B,EAAAiG,KAAAx6B,GACAvV,EAAA,EACAlG,EAAA,IACAA,EAAA21B,IAAAzvB,GAAA,MACA8pC,GAAAiG,KAAAx6B,EAAAzb,GAAAkG,EAMA,OAFA8pC,IAFA9pC,GAAA,OAEA8pC,GAAA3tC,KAAAiD,IAAA,IAAAqwB,IAEAqa,GAGAb,EAAAvtC,UAAA+tG,UAAA,SAAAl0F,EAAAka,EAAAq5E,GACAvzF,GAAA,EACAka,GAAA,EACAq5E,GAAAP,EAAAhzF,EAAAka,EAAAsgB,KAAAp6B,QAKA,IAHA,IAAA7b,EAAA21B,EACAzvB,EAAA,EACA8pC,EAAAiG,KAAAx6B,IAAAzb,GACAA,EAAA,IAAAkG,GAAA,MACA8pC,GAAAiG,KAAAx6B,IAAAzb,GAAAkG,EAMA,OAFA8pC,IAFA9pC,GAAA,OAEA8pC,GAAA3tC,KAAAiD,IAAA,IAAAqwB,IAEAqa,GAGAb,EAAAvtC,UAAAguG,SAAA,SAAAn0F,EAAAuzF,GAEA,OADAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACA,IAAAo6B,KAAAx6B,IACA,OAAAw6B,KAAAx6B,GAAA,GADAw6B,KAAAx6B,IAIA0zB,EAAAvtC,UAAAiuG,YAAA,SAAAp0F,EAAAuzF,GACAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACA,IAAAm0B,EAAAiG,KAAAx6B,GAAAw6B,KAAAx6B,EAAA,MACA,aAAAu0B,EAAA,WAAAA,KAGAb,EAAAvtC,UAAAkuG,YAAA,SAAAr0F,EAAAuzF,GACAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACA,IAAAm0B,EAAAiG,KAAAx6B,EAAA,GAAAw6B,KAAAx6B,IAAA,EACA,aAAAu0B,EAAA,WAAAA,KAGAb,EAAAvtC,UAAAmuG,YAAA,SAAAt0F,EAAAuzF,GAGA,OAFAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QAEAo6B,KAAAx6B,GACAw6B,KAAAx6B,EAAA,MACAw6B,KAAAx6B,EAAA,OACAw6B,KAAAx6B,EAAA,QAGA0zB,EAAAvtC,UAAAouG,YAAA,SAAAv0F,EAAAuzF,GAGA,OAFAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QAEAo6B,KAAAx6B,IAAA,GACAw6B,KAAAx6B,EAAA,OACAw6B,KAAAx6B,EAAA,MACAw6B,KAAAx6B,EAAA,IAGA0zB,EAAAvtC,UAAAquG,YAAA,SAAAx0F,EAAAuzF,GAEA,OADAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACAutF,EAAA18E,KAAAupB,KAAAx6B,GAAA,SAGA0zB,EAAAvtC,UAAAsuG,YAAA,SAAAz0F,EAAAuzF,GAEA,OADAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACAutF,EAAA18E,KAAAupB,KAAAx6B,GAAA,SAGA0zB,EAAAvtC,UAAAuuG,aAAA,SAAA10F,EAAAuzF,GAEA,OADAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACAutF,EAAA18E,KAAAupB,KAAAx6B,GAAA,SAGA0zB,EAAAvtC,UAAAwuG,aAAA,SAAA30F,EAAAuzF,GAEA,OADAA,GAAAP,EAAAhzF,EAAA,EAAAw6B,KAAAp6B,QACAutF,EAAA18E,KAAAupB,KAAAx6B,GAAA,SASA0zB,EAAAvtC,UAAAyuG,YAAA,SAAApvG,EAAAwa,EAAAka,EAAAq5E,IACA/tG,KACAwa,GAAA,EACAka,GAAA,EACAq5E,IAEAN,EAAAz4D,KAAAh1C,EAAAwa,EAAAka,EADAtzB,KAAAiD,IAAA,IAAAqwB,GAAA,EACA,GAGA,IAAAzvB,EAAA,EACAlG,EAAA,EAEA,IADAi2C,KAAAx6B,GAAA,IAAAxa,IACAjB,EAAA21B,IAAAzvB,GAAA,MACA+vC,KAAAx6B,EAAAzb,GAAAiB,EAAAiF,EAAA,IAGA,OAAAuV,EAAAka,GAGAwZ,EAAAvtC,UAAA0uG,YAAA,SAAArvG,EAAAwa,EAAAka,EAAAq5E,IACA/tG,KACAwa,GAAA,EACAka,GAAA,EACAq5E,IAEAN,EAAAz4D,KAAAh1C,EAAAwa,EAAAka,EADAtzB,KAAAiD,IAAA,IAAAqwB,GAAA,EACA,GAGA,IAAA31B,EAAA21B,EAAA,EACAzvB,EAAA,EAEA,IADA+vC,KAAAx6B,EAAAzb,GAAA,IAAAiB,IACAjB,GAAA,IAAAkG,GAAA,MACA+vC,KAAAx6B,EAAAzb,GAAAiB,EAAAiF,EAAA,IAGA,OAAAuV,EAAAka,GAGAwZ,EAAAvtC,UAAA2uG,WAAA,SAAAtvG,EAAAwa,EAAAuzF,GAMA,OALA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,SACA0zB,EAAAo6D,sBAAAtoG,EAAAoB,KAAAyV,MAAA7W,IACAg1C,KAAAx6B,GAAA,IAAAxa,EACAwa,EAAA,GAWA0zB,EAAAvtC,UAAA4uG,cAAA,SAAAvvG,EAAAwa,EAAAuzF,GAUA,OATA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,WACA0zB,EAAAo6D,qBACAtzD,KAAAx6B,GAAA,IAAAxa,EACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,GAEA0tG,EAAA14D,KAAAh1C,EAAAwa,GAAA,GAEAA,EAAA,GAGA0zB,EAAAvtC,UAAA6uG,cAAA,SAAAxvG,EAAAwa,EAAAuzF,GAUA,OATA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,WACA0zB,EAAAo6D,qBACAtzD,KAAAx6B,GAAAxa,IAAA,EACAg1C,KAAAx6B,EAAA,OAAAxa,GAEA0tG,EAAA14D,KAAAh1C,EAAAwa,GAAA,GAEAA,EAAA,GAUA0zB,EAAAvtC,UAAA8uG,cAAA,SAAAzvG,EAAAwa,EAAAuzF,GAYA,OAXA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,gBACA0zB,EAAAo6D,qBACAtzD,KAAAx6B,EAAA,GAAAxa,IAAA,GACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,GACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,EACAg1C,KAAAx6B,GAAA,IAAAxa,GAEA4tG,EAAA54D,KAAAh1C,EAAAwa,GAAA,GAEAA,EAAA,GAGA0zB,EAAAvtC,UAAA+uG,cAAA,SAAA1vG,EAAAwa,EAAAuzF,GAYA,OAXA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,gBACA0zB,EAAAo6D,qBACAtzD,KAAAx6B,GAAAxa,IAAA,GACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,GACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,EACAg1C,KAAAx6B,EAAA,OAAAxa,GAEA4tG,EAAA54D,KAAAh1C,EAAAwa,GAAA,GAEAA,EAAA,GAGA0zB,EAAAvtC,UAAAgvG,WAAA,SAAA3vG,EAAAwa,EAAAka,EAAAq5E,GAGA,GAFA/tG,KACAwa,GAAA,GACAuzF,EAAA,CACA,IAAA6B,EAAAxuG,KAAAiD,IAAA,IAAAqwB,EAAA,GAEA+4E,EAAAz4D,KAAAh1C,EAAAwa,EAAAka,EAAAk7E,EAAA,GAAAA,GAGA,IAAA7wG,EAAA,EACAkG,EAAA,EACAC,EAAA,EAEA,IADA8vC,KAAAx6B,GAAA,IAAAxa,IACAjB,EAAA21B,IAAAzvB,GAAA,MACAjF,EAAA,OAAAkF,GAAA,IAAA8vC,KAAAx6B,EAAAzb,EAAA,KACAmG,EAAA,GAEA8vC,KAAAx6B,EAAAzb,IAAAiB,EAAAiF,GAAA,GAAAC,EAAA,IAGA,OAAAsV,EAAAka,GAGAwZ,EAAAvtC,UAAAkvG,WAAA,SAAA7vG,EAAAwa,EAAAka,EAAAq5E,GAGA,GAFA/tG,KACAwa,GAAA,GACAuzF,EAAA,CACA,IAAA6B,EAAAxuG,KAAAiD,IAAA,IAAAqwB,EAAA,GAEA+4E,EAAAz4D,KAAAh1C,EAAAwa,EAAAka,EAAAk7E,EAAA,GAAAA,GAGA,IAAA7wG,EAAA21B,EAAA,EACAzvB,EAAA,EACAC,EAAA,EAEA,IADA8vC,KAAAx6B,EAAAzb,GAAA,IAAAiB,IACAjB,GAAA,IAAAkG,GAAA,MACAjF,EAAA,OAAAkF,GAAA,IAAA8vC,KAAAx6B,EAAAzb,EAAA,KACAmG,EAAA,GAEA8vC,KAAAx6B,EAAAzb,IAAAiB,EAAAiF,GAAA,GAAAC,EAAA,IAGA,OAAAsV,EAAAka,GAGAwZ,EAAAvtC,UAAAmvG,UAAA,SAAA9vG,EAAAwa,EAAAuzF,GAOA,OANA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,YACA0zB,EAAAo6D,sBAAAtoG,EAAAoB,KAAAyV,MAAA7W,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAg1C,KAAAx6B,GAAA,IAAAxa,EACAwa,EAAA,GAGA0zB,EAAAvtC,UAAAovG,aAAA,SAAA/vG,EAAAwa,EAAAuzF,GAUA,OATA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,gBACA0zB,EAAAo6D,qBACAtzD,KAAAx6B,GAAA,IAAAxa,EACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,GAEA0tG,EAAA14D,KAAAh1C,EAAAwa,GAAA,GAEAA,EAAA,GAGA0zB,EAAAvtC,UAAAqvG,aAAA,SAAAhwG,EAAAwa,EAAAuzF,GAUA,OATA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,gBACA0zB,EAAAo6D,qBACAtzD,KAAAx6B,GAAAxa,IAAA,EACAg1C,KAAAx6B,EAAA,OAAAxa,GAEA0tG,EAAA14D,KAAAh1C,EAAAwa,GAAA,GAEAA,EAAA,GAGA0zB,EAAAvtC,UAAAsvG,aAAA,SAAAjwG,EAAAwa,EAAAuzF,GAYA,OAXA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,0BACA0zB,EAAAo6D,qBACAtzD,KAAAx6B,GAAA,IAAAxa,EACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,EACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,GACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,IAEA4tG,EAAA54D,KAAAh1C,EAAAwa,GAAA,GAEAA,EAAA,GAGA0zB,EAAAvtC,UAAAuvG,aAAA,SAAAlwG,EAAAwa,EAAAuzF,GAaA,OAZA/tG,KACAwa,GAAA,EACAuzF,GAAAN,EAAAz4D,KAAAh1C,EAAAwa,EAAA,0BACAxa,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACAkuC,EAAAo6D,qBACAtzD,KAAAx6B,GAAAxa,IAAA,GACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,GACAg1C,KAAAx6B,EAAA,GAAAxa,IAAA,EACAg1C,KAAAx6B,EAAA,OAAAxa,GAEA4tG,EAAA54D,KAAAh1C,EAAAwa,GAAA,GAEAA,EAAA,GAgBA0zB,EAAAvtC,UAAAwvG,aAAA,SAAAnwG,EAAAwa,EAAAuzF,GACA,OAAAD,EAAA94D,KAAAh1C,EAAAwa,GAAA,EAAAuzF,IAGA7/D,EAAAvtC,UAAAyvG,aAAA,SAAApwG,EAAAwa,EAAAuzF,GACA,OAAAD,EAAA94D,KAAAh1C,EAAAwa,GAAA,EAAAuzF,IAWA7/D,EAAAvtC,UAAA0vG,cAAA,SAAArwG,EAAAwa,EAAAuzF,GACA,OAAAC,EAAAh5D,KAAAh1C,EAAAwa,GAAA,EAAAuzF,IAGA7/D,EAAAvtC,UAAA2vG,cAAA,SAAAtwG,EAAAwa,EAAAuzF,GACA,OAAAC,EAAAh5D,KAAAh1C,EAAAwa,GAAA,EAAAuzF,IAIA7/D,EAAAvtC,UAAAuB,KAAA,SAAA8S,EAAAu7F,EAAAtkE,EAAAhe,GAQA,GAPAge,MAAA,GACAhe,GAAA,IAAAA,MAAA+mB,KAAAp6B,QACA21F,GAAAv7F,EAAA4F,SAAA21F,EAAAv7F,EAAA4F,QACA21F,MAAA,GACAtiF,EAAA,GAAAA,EAAAge,IAAAhe,EAAAge,GAGAhe,IAAAge,EAAA,SACA,OAAAj3B,EAAA4F,QAAA,IAAAo6B,KAAAp6B,OAAA,SAGA,GAAA21F,EAAA,EACA,UAAA/H,WAAA,6BAEA,GAAAv8D,EAAA,GAAAA,GAAA+I,KAAAp6B,OAAA,UAAA4tF,WAAA,6BACA,GAAAv6E,EAAA,YAAAu6E,WAAA,2BAGAv6E,EAAA+mB,KAAAp6B,SAAAqT,EAAA+mB,KAAAp6B,QACA5F,EAAA4F,OAAA21F,EAAAtiF,EAAAge,IACAhe,EAAAjZ,EAAA4F,OAAA21F,EAAAtkE,GAGA,IACAltC,EADA6P,EAAAqf,EAAAge,EAGA,GAAA+I,OAAAhgC,GAAAi3B,EAAAskE,KAAAtiF,EAEA,IAAAlvB,EAAA6P,EAAA,EAAqB7P,GAAA,IAAQA,EAC7BiW,EAAAjW,EAAAwxG,GAAAv7D,KAAAj2C,EAAAktC,QAEG,GAAAr9B,EAAA,MAAAs/B,EAAAo6D,oBAEH,IAAAvpG,EAAA,EAAeA,EAAA6P,IAAS7P,EACxBiW,EAAAjW,EAAAwxG,GAAAv7D,KAAAj2C,EAAAktC,QAGA/gB,WAAAvqB,UAAA8B,IAAAvD,KACA8V,EACAggC,KAAArkB,SAAAsb,IAAAr9B,GACA2hG,GAIA,OAAA3hG,GAOAs/B,EAAAvtC,UAAAyrG,KAAA,SAAAr9D,EAAA9C,EAAAhe,EAAAq0B,GAEA,oBAAAvT,EAAA,CASA,GARA,iBAAA9C,GACAqW,EAAArW,EACAA,EAAA,EACAhe,EAAA+mB,KAAAp6B,QACK,iBAAAqT,IACLq0B,EAAAr0B,EACAA,EAAA+mB,KAAAp6B,QAEA,IAAAm0B,EAAAn0B,OAAA,CACA,IAAA29B,EAAAxJ,EAAAxc,WAAA,GACAgmB,EAAA,MACAxJ,EAAAwJ,GAGA,QAAA9qB,IAAA60B,GAAA,iBAAAA,EACA,UAAA3W,UAAA,6BAEA,oBAAA2W,IAAApU,EAAA46D,WAAAxmD,GACA,UAAA3W,UAAA,qBAAA2W,OAEG,iBAAAvT,IACHA,GAAA,KAIA,GAAA9C,EAAA,GAAA+I,KAAAp6B,OAAAqxB,GAAA+I,KAAAp6B,OAAAqT,EACA,UAAAu6E,WAAA,sBAGA,GAAAv6E,GAAAge,EACA,OAAA+I,KAQA,IAAAj2C,EACA,GANAktC,KAAA,EACAhe,OAAAR,IAAAQ,EAAA+mB,KAAAp6B,OAAAqT,IAAA,EAEA8gB,MAAA,GAGA,iBAAAA,EACA,IAAAhwC,EAAAktC,EAAmBltC,EAAAkvB,IAASlvB,EAC5Bi2C,KAAAj2C,GAAAgwC,MAEG,CACH,IAAAg7B,EAAA77B,EAAA83C,SAAAj3C,GACAA,EACAs6D,EAAA,IAAAn7D,EAAAa,EAAAuT,GAAAt3B,YACApc,EAAAm7D,EAAAnvD,OACA,IAAA7b,EAAA,EAAeA,EAAAkvB,EAAAge,IAAiBltC,EAChCi2C,KAAAj2C,EAAAktC,GAAA89B,EAAAhrE,EAAA6P,GAIA,OAAAomC,MAMA,IAAAw7D,EAAA,qBAmBA,SAAAjD,EAAA/sG,GACA,OAAAA,EAAA,OAAAA,EAAAwqB,SAAA,IACAxqB,EAAAwqB,SAAA,IAGA,SAAAq+E,EAAAhlC,EAAAsmC,GAEA,IAAAa,EADAb,KAAA/3F,IAMA,IAJA,IAAAgI,EAAAypD,EAAAzpD,OACA61F,EAAA,KACA1mC,EAAA,GAEAhrE,EAAA,EAAiBA,EAAA6b,IAAY7b,EAAA,CAI7B,IAHAysG,EAAAnnC,EAAA9xC,WAAAxzB,IAGA,OAAAysG,EAAA,OAEA,IAAAiF,EAAA,CAEA,GAAAjF,EAAA,QAEAb,GAAA,OAAA5gC,EAAAtwC,KAAA,aACA,SACS,GAAA16B,EAAA,IAAA6b,EAAA,EAET+vF,GAAA,OAAA5gC,EAAAtwC,KAAA,aACA,SAIAg3E,EAAAjF,EAEA,SAIA,GAAAA,EAAA,QACAb,GAAA,OAAA5gC,EAAAtwC,KAAA,aACAg3E,EAAAjF,EACA,SAIAA,EAAA,OAAAiF,EAAA,UAAAjF,EAAA,YACKiF,IAEL9F,GAAA,OAAA5gC,EAAAtwC,KAAA,aAMA,GAHAg3E,EAAA,KAGAjF,EAAA,KACA,IAAAb,GAAA,WACA5gC,EAAAtwC,KAAA+xE,QACK,GAAAA,EAAA,MACL,IAAAb,GAAA,WACA5gC,EAAAtwC,KACA+xE,GAAA,MACA,GAAAA,EAAA,UAEK,GAAAA,EAAA,OACL,IAAAb,GAAA,WACA5gC,EAAAtwC,KACA+xE,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,UAAA34E,MAAA,sBARA,IAAA83E,GAAA,WACA5gC,EAAAtwC,KACA+xE,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,OAAAzhC,EA4BA,SAAAu/B,EAAAplG,GACA,OAAAgkG,EAAAwI,YAhIA,SAAAxsG,GAIA,IAFAA,EAUA,SAAAA,GACA,OAAAA,EAAA6nC,KAAA7nC,EAAA6nC,OACA7nC,EAAAknB,QAAA,iBAZAulF,CAAAzsG,GAAAknB,QAAAolF,EAAA,KAEA51F,OAAA,WAEA,KAAA1W,EAAA0W,OAAA,MACA1W,GAAA,IAEA,OAAAA,EAuHA0sG,CAAA1sG,IAGA,SAAAmmG,EAAAp+E,EAAA+nB,EAAAx5B,EAAAI,GACA,QAAA7b,EAAA,EAAiBA,EAAA6b,KACjB7b,EAAAyb,GAAAw5B,EAAAp5B,QAAA7b,GAAAktB,EAAArR,UAD6B7b,EAE7Bi1C,EAAAj1C,EAAAyb,GAAAyR,EAAAltB,GAEA,OAAAA,mDCrvDAF,EAAA61B,WAuCA,SAAAm8E,GACA,IAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA,UAAAE,EAAAC,GAAA,EAAAA,GA1CApyG,EAAA6xG,YAiDA,SAAAG,GAeA,IAdA,IAAAK,EACAJ,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEA9kE,EAAA,IAAAmlE,EAVA,SAAAN,EAAAG,EAAAC,GACA,UAAAD,EAAAC,GAAA,EAAAA,EASAG,CAAAP,EAAAG,EAAAC,IAEAI,EAAA,EAGAziG,EAAAqiG,EAAA,EACAD,EAAA,EACAA,EAEAjyG,EAAA,EAAiBA,EAAA6P,EAAS7P,GAAA,EAC1BmyG,EACAI,EAAAT,EAAAt+E,WAAAxzB,KAAA,GACAuyG,EAAAT,EAAAt+E,WAAAxzB,EAAA,QACAuyG,EAAAT,EAAAt+E,WAAAxzB,EAAA,OACAuyG,EAAAT,EAAAt+E,WAAAxzB,EAAA,IACAitC,EAAAqlE,KAAAH,GAAA,OACAllE,EAAAqlE,KAAAH,GAAA,MACAllE,EAAAqlE,KAAA,IAAAH,EAGA,IAAAD,IACAC,EACAI,EAAAT,EAAAt+E,WAAAxzB,KAAA,EACAuyG,EAAAT,EAAAt+E,WAAAxzB,EAAA,OACAitC,EAAAqlE,KAAA,IAAAH,GAGA,IAAAD,IACAC,EACAI,EAAAT,EAAAt+E,WAAAxzB,KAAA,GACAuyG,EAAAT,EAAAt+E,WAAAxzB,EAAA,OACAuyG,EAAAT,EAAAt+E,WAAAxzB,EAAA,OACAitC,EAAAqlE,KAAAH,GAAA,MACAllE,EAAAqlE,KAAA,IAAAH,GAGA,OAAAllE,GA1FAntC,EAAAmsG,cAiHA,SAAAuG,GAQA,IAPA,IAAAL,EACAtiG,EAAA2iG,EAAA32F,OACA42F,EAAA5iG,EAAA,EACA07B,EAAA,GAIAvrC,EAAA,EAAAqpB,EAAAxZ,EAAA4iG,EAA0CzyG,EAAAqpB,EAAUrpB,GAHpD,MAIAurC,EAAA7Q,KAAAg4E,EACAF,EAAAxyG,IALA,MAKAqpB,IAAArpB,EALA,QAUA,IAAAyyG,GACAN,EAAAK,EAAA3iG,EAAA,GACA07B,EAAA7Q,KACAiW,EAAAwhE,GAAA,GACAxhE,EAAAwhE,GAAA,MACA,OAEG,IAAAM,IACHN,GAAAK,EAAA3iG,EAAA,OAAA2iG,EAAA3iG,EAAA,GACA07B,EAAA7Q,KACAiW,EAAAwhE,GAAA,IACAxhE,EAAAwhE,GAAA,MACAxhE,EAAAwhE,GAAA,MACA,MAIA,OAAA5mE,EAAA/d,KAAA,KA1IA,IALA,IAAAmjB,EAAA,GACA4hE,EAAA,GACAH,EAAA,oBAAAjmF,sBAAAhqB,MAEAq3C,EAAA,mEACAx5C,EAAA,EAAA6P,EAAA2pC,EAAA39B,OAAkC7b,EAAA6P,IAAS7P,EAC3C2wC,EAAA3wC,GAAAw5C,EAAAx5C,GACAuyG,EAAA/4D,EAAAhmB,WAAAxzB,MAQA,SAAAgyG,EAAAF,GACA,IAAAjiG,EAAAiiG,EAAAj2F,OAEA,GAAAhM,EAAA,IACA,UAAAikB,MAAA,kDAKA,IAAAm+E,EAAAH,EAAAxkF,QAAA,KAOA,OANA,IAAA2kF,MAAApiG,GAMA,CAAAoiG,EAJAA,IAAApiG,EACA,EACA,EAAAoiG,EAAA,GAqEA,SAAAS,EAAAF,EAAAtlE,EAAAhe,GAGA,IAFA,IAAAijF,EARA9gB,EASAn4D,EAAA,GACAl5B,EAAAktC,EAAqBltC,EAAAkvB,EAASlvB,GAAA,EAC9BmyG,GACAK,EAAAxyG,IAAA,cACAwyG,EAAAxyG,EAAA,cACA,IAAAwyG,EAAAxyG,EAAA,IACAk5B,EAAAwB,KAdAiW,GADA0gD,EAeA8gB,IAdA,OACAxhE,EAAA0gD,GAAA,OACA1gD,EAAA0gD,GAAA,MACA1gD,EAAA,GAAA0gD,IAaA,OAAAn4D,EAAA1L,KAAA,IAhGA+kF,EAAA,IAAA/+E,WAAA,OACA++E,EAAA,IAAA/+E,WAAA,sBCnBA1zB,EAAA4sB,KAAA,SAAAR,EAAAzQ,EAAAk3F,EAAAC,EAAAC,GACA,IAAA7+E,EAAA5zB,EACA0yG,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAjzG,EAAA2yG,EAAAE,EAAA,IACAvyG,EAAAqyG,GAAA,IACA5wG,EAAAmqB,EAAAzQ,EAAAzb,GAOA,IALAA,GAAAM,EAEA0zB,EAAAjyB,GAAA,IAAAkxG,GAAA,EACAlxG,KAAAkxG,EACAA,GAAAH,EACQG,EAAA,EAAWj/E,EAAA,IAAAA,EAAA9H,EAAAzQ,EAAAzb,MAAAM,EAAA2yG,GAAA,GAKnB,IAHA7yG,EAAA4zB,GAAA,IAAAi/E,GAAA,EACAj/E,KAAAi/E,EACAA,GAAAL,EACQK,EAAA,EAAW7yG,EAAA,IAAAA,EAAA8rB,EAAAzQ,EAAAzb,MAAAM,EAAA2yG,GAAA,GAEnB,OAAAj/E,EACAA,EAAA,EAAAg/E,MACG,IAAAh/E,IAAA++E,EACH,OAAA3yG,EAAA44B,IAAAnlB,KAAA9R,GAAA,KAEA3B,GAAAiC,KAAAiD,IAAA,EAAAstG,GACA5+E,GAAAg/E,EAEA,OAAAjxG,GAAA,KAAA3B,EAAAiC,KAAAiD,IAAA,EAAA0uB,EAAA4+E,IAGA9yG,EAAAkvC,MAAA,SAAA9iB,EAAAjrB,EAAAwa,EAAAk3F,EAAAC,EAAAC,GACA,IAAA7+E,EAAA5zB,EAAAC,EACAyyG,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAG,EAAA,KAAAN,EAAAvwG,KAAAiD,IAAA,OAAAjD,KAAAiD,IAAA,SACAtF,EAAA2yG,EAAA,EAAAE,EAAA,EACAvyG,EAAAqyG,EAAA,KACA5wG,EAAAd,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAmCA,IAjCAA,EAAAoB,KAAAU,IAAA9B,GAEAypG,MAAAzpG,QAAA4S,KACAzT,EAAAsqG,MAAAzpG,GAAA,IACA+yB,EAAA++E,IAEA/+E,EAAA3xB,KAAAyV,MAAAzV,KAAAgsB,IAAAptB,GAAAoB,KAAA81F,KACAl3F,GAAAZ,EAAAgC,KAAAiD,IAAA,GAAA0uB,IAAA,IACAA,IACA3zB,GAAA,IAGAY,GADA+yB,EAAAg/E,GAAA,EACAE,EAAA7yG,EAEA6yG,EAAA7wG,KAAAiD,IAAA,IAAA0tG,IAEA3yG,GAAA,IACA2zB,IACA3zB,GAAA,GAGA2zB,EAAAg/E,GAAAD,GACA3yG,EAAA,EACA4zB,EAAA++E,GACK/+E,EAAAg/E,GAAA,GACL5yG,GAAAa,EAAAZ,EAAA,GAAAgC,KAAAiD,IAAA,EAAAstG,GACA5+E,GAAAg/E,IAEA5yG,EAAAa,EAAAoB,KAAAiD,IAAA,EAAA0tG,EAAA,GAAA3wG,KAAAiD,IAAA,EAAAstG,GACA5+E,EAAA,IAIQ4+E,GAAA,EAAW1mF,EAAAzQ,EAAAzb,GAAA,IAAAI,EAAAJ,GAAAM,EAAAF,GAAA,IAAAwyG,GAAA,GAInB,IAFA5+E,KAAA4+E,EAAAxyG,EACA0yG,GAAAF,EACQE,EAAA,EAAU5mF,EAAAzQ,EAAAzb,GAAA,IAAAg0B,EAAAh0B,GAAAM,EAAA0zB,GAAA,IAAA8+E,GAAA,GAElB5mF,EAAAzQ,EAAAzb,EAAAM,IAAA,IAAAyB,kBClFA,IAAAkqB,EAAA,GAAiBA,SAEjBlsB,EAAAD,QAAAqC,MAAAknG,SAAA,SAAAp8D,GACA,wBAAAhhB,EAAA9rB,KAAA8sC,sBCHA,SAAA/U,GAAA,IAAAi7E,OAAA,IAAAj7E,MACA,oBAAA/K,YACA9B,OACAgH,EAAA2D,SAAAp0B,UAAAywB,MAiBA,SAAA+gF,EAAA77E,EAAA87E,GACAp9D,KAAAq9D,IAAA/7E,EACA0e,KAAAs9D,SAAAF,EAfAvzG,EAAA+3D,WAAA,WACA,WAAAu7C,EAAA/gF,EAAAlyB,KAAA03D,WAAAs7C,EAAArmF,WAAAu4E,eAEAvlG,EAAA0/D,YAAA,WACA,WAAA4zC,EAAA/gF,EAAAlyB,KAAAq/D,YAAA2zC,EAAArmF,WAAA4K,gBAEA53B,EAAAulG,aACAvlG,EAAA43B,cAAA,SAAA4nC,GACAA,GACAA,EAAA9wB,SAQA4kE,EAAAxxG,UAAA4xG,MAAAJ,EAAAxxG,UAAA6xG,IAAA,aACAL,EAAAxxG,UAAA4sC,MAAA,WACAyH,KAAAs9D,SAAApzG,KAAAgzG,EAAAl9D,KAAAq9D,MAIAxzG,EAAA4zG,OAAA,SAAAC,EAAAC,GACAvO,aAAAsO,EAAAE,gBACAF,EAAAG,aAAAF,GAGA9zG,EAAAi0G,SAAA,SAAAJ,GACAtO,aAAAsO,EAAAE,gBACAF,EAAAG,cAAA,GAGAh0G,EAAAk0G,aAAAl0G,EAAAm0G,OAAA,SAAAN,GACAtO,aAAAsO,EAAAE,gBAEA,IAAAD,EAAAD,EAAAG,aACAF,GAAA,IACAD,EAAAE,eAAAh8C,WAAA,WACA87C,EAAAO,YACAP,EAAAO,cACKN,KAKLh0G,EAAQ,IAIRE,EAAAm4D,aAAA,oBAAA9qC,WAAA8qC,mBACA,IAAA//B,KAAA+/B,cACAhiB,WAAAgiB,aACAn4D,EAAAq0G,eAAA,oBAAAhnF,WAAAgnF,qBACA,IAAAj8E,KAAAi8E,gBACAl+D,WAAAk+D,mDC9DA,SAAAj8E,EAAA3M,IAAA,SAAA2M,EAAAxJ,GACA,aAEA,IAAAwJ,EAAA+/B,aAAA,CAIA,IAIAm8C,EA6HAC,EAZAC,EArBAC,EACAC,EAjGAC,EAAA,EACAC,EAAA,GACAC,GAAA,EACAC,EAAA18E,EAAAlL,SAoJA6nF,EAAAn0G,OAAAsuD,gBAAAtuD,OAAAsuD,eAAA92B,GACA28E,OAAAh9C,WAAAg9C,EAAA38E,EAGU,qBAAV,GAAUjM,SAAA9rB,KAAA+3B,EAAA3M,SApFV6oF,EAAA,SAAAllD,GACA3jC,EAAAw6E,SAAA,WAA0C+O,EAAA5lD,OAI1C,WAGA,GAAAh3B,EAAAogC,cAAApgC,EAAA5M,cAAA,CACA,IAAAypF,GAAA,EACAC,EAAA98E,EAAA+8E,UAMA,OALA/8E,EAAA+8E,UAAA,WACAF,GAAA,GAEA78E,EAAAogC,YAAA,QACApgC,EAAA+8E,UAAAD,EACAD,GAwEKG,GAIAh9E,EAAAi9E,iBA9CLb,EAAA,IAAAa,gBACAC,MAAAH,UAAA,SAAAp+D,GAEAi+D,EADAj+D,EAAAlqB,OAIAynF,EAAA,SAAAllD,GACAolD,EAAAe,MAAA/8C,YAAApJ,KA2CK0lD,GAAA,uBAAAA,EAAAl5C,cAAA,WAtCL24C,EAAAO,EAAAU,gBACAlB,EAAA,SAAAllD,GAGA,IAAAqmD,EAAAX,EAAAl5C,cAAA,UACA65C,EAAAC,mBAAA,WACAV,EAAA5lD,GACAqmD,EAAAC,mBAAA,KACAnB,EAAA91C,YAAAg3C,GACAA,EAAA,MAEAlB,EAAA51C,YAAA82C,KAKAnB,EAAA,SAAAllD,GACA2I,WAAAi9C,EAAA,EAAA5lD,KAlDAqlD,EAAA,gBAAAlyG,KAAAC,SAAA,IACAkyG,EAAA,SAAA39D,GACAA,EAAA0uB,SAAArtC,GACA,iBAAA2e,EAAAlqB,MACA,IAAAkqB,EAAAlqB,KAAAW,QAAAinF,IACAO,GAAAj+D,EAAAlqB,KAAAL,MAAAioF,EAAA14F,UAIAqc,EAAAkgC,iBACAlgC,EAAAkgC,iBAAA,UAAAo8C,GAAA,GAEAt8E,EAAAu9E,YAAA,YAAAjB,GAGAJ,EAAA,SAAAllD,GACAh3B,EAAAogC,YAAAi8C,EAAArlD,EAAA,OAgEA2lD,EAAA58C,aA1KA,SAAA5hC,GAEA,mBAAAA,IACAA,EAAA,IAAAL,SAAA,GAAAK,IAIA,IADA,IAAA29B,EAAA,IAAA7xD,MAAA2qB,UAAAjR,OAAA,GACA7b,EAAA,EAAqBA,EAAAg0D,EAAAn4C,OAAiB7b,IACtCg0D,EAAAh0D,GAAA8sB,UAAA9sB,EAAA,GAGA,IAAA01G,EAAA,CAAkBr/E,WAAA29B,QAGlB,OAFA0gD,EAAAD,GAAAiB,EACAtB,EAAAK,GACAA,KA6JAI,EAAAV,iBA1JA,SAAAA,EAAAjlD,UACAwlD,EAAAxlD,GAyBA,SAAA4lD,EAAA5lD,GAGA,GAAAylD,EAGA98C,WAAAi9C,EAAA,EAAA5lD,OACS,CACT,IAAAwmD,EAAAhB,EAAAxlD,GACA,GAAAwmD,EAAA,CACAf,GAAA,EACA,KAjCA,SAAAe,GACA,IAAAr/E,EAAAq/E,EAAAr/E,SACA29B,EAAA0hD,EAAA1hD,KACA,OAAAA,EAAAn4C,QACA,OACAwa,IACA,MACA,OACAA,EAAA29B,EAAA,IACA,MACA,OACA39B,EAAA29B,EAAA,GAAAA,EAAA,IACA,MACA,OACA39B,EAAA29B,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,QACA39B,EAAAhE,MAAA3D,EAAAslC,IAiBAklC,CAAAwc,GACiB,QACjBvB,EAAAjlD,GACAylD,GAAA,MAvEA,CAyLC,oBAAAxnF,UAAA,IAAA+K,EAAA+d,KAAA/d,EAAA/K,4CCzLDptB,EAAAD,QAAAgkD,qDCYA,IAAA4jD,EAAA9nG,EAAA,GAIA+1G,EAAA,WAUI,SAAAA,EAAY7M,EAAyBJ,GACjCzyD,KAAK6yD,OAASA,EACd7yD,KAAKyyD,QAAUA,EACfzyD,KAAKqmC,QAAU,GACfrmC,KAAK+0C,QAAU,GACf/0C,KAAK2/D,YAAc,EACnB3/D,KAAK4/D,eAAiB,GAEtB5/D,KAAK6/D,cAAgB,EA8B7B,OA3BWH,EAAA/zG,UAAAmnG,KAAP,SAAY77C,EAAY6oD,GACpB9/D,KAAK2/D,cAAgB3/D,KAAK4/D,eAAiBE,EAAQ9/D,KAAK2/D,aAChDvzG,KAAK0V,IAAI,EAAK,GAAMm1C,GAE5B,IAAMl4C,EAAK0yF,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,GACjCqkG,EAAA/H,KAAKnmF,cAAcxE,EAAIA,EAAIihC,KAAKyyD,QAAQd,aAExC,IAAM37D,EAAMy7D,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,GAClCqkG,EAAA/H,KAAKnmF,cAAcyyB,EAAKA,EAAKgK,KAAKyyD,QAAQd,aAE1C,IAAMoO,EAAYtO,EAAA/H,KAAKx8F,KAAKukG,EAAA/H,KAAKr+F,SAAU20C,KAAKyyD,QAAQ/0D,UACxD+zD,EAAA/H,KAAK15F,MAAMgmC,EAAKA,EAAKgK,KAAK+0C,QAAU/0C,KAAK2/D,aACzClO,EAAA/H,KAAK/5F,SAASowG,EAAWA,EAAW/pE,GACpCy7D,EAAA/H,KAAK15F,MAAM+O,EAAIA,EAAIihC,KAAKqmC,SACxBorB,EAAA/H,KAAKh6F,IAAIqwG,EAAWA,EAAWhhG,GAE/B,IAAMihG,EAAYvO,EAAA/H,KAAKx8F,KAAKukG,EAAA/H,KAAKr+F,SAAU20C,KAAKyyD,QAAQ/0D,UACxD+zD,EAAA/H,KAAKj8F,IAAIsR,EAAI,EAAG,EAAG,GACnB0yF,EAAA/H,KAAKnmF,cAAcxE,EAAIA,EAAIihC,KAAKyyD,QAAQd,aACxCF,EAAA/H,KAAK15F,MAAM+O,EAAIA,EAAIihC,KAAK6/D,eACxBpO,EAAA/H,KAAKh6F,IAAIswG,EAAWA,EAAWjhG,GAE/BihC,KAAK6yD,OAAOj0F,OACJmhG,EACAC,EACA,CAAC,EAAG,EAAG,KAEvBN,EAhDA,6DCLA,IAAA/qF,EAAAhrB,EAAA,GACAooG,EAAApoG,EAAA,GAGAs2G,EAAA,WAqBI,SAAAA,EAAYz6C,EAAQitC,GAApB,IAAAyN,EAAAlgE,KACIA,KAAKwlB,OAASA,EACdxlB,KAAKyyD,QAAUA,EACfzyD,KAAKimD,OAAStxE,EAAS2vE,OAAOj5F,OAAOm6D,GACrCxlB,KAAKmgE,MAAQngE,KAAKimD,OAAOma,cACzBpgE,KAAKqgE,OAASrgE,KAAKimD,OAAOlB,iBAAiBgN,EAAKhB,UAChD/wD,KAAKmgE,MAAMG,UAAUtgE,KAAKqgE,QAC1BrgE,KAAKugE,cAAgBvgE,KAAKimD,OAAOpB,iBAAiBkN,EAAKjB,KACvD9wD,KAAKugE,cAAcC,aAAa,KAChCxgE,KAAKmgE,MAAMM,iBAAiBzgE,KAAKugE,eACjCvgE,KAAK0gE,UAAY1gE,KAAKimD,OAAO0a,kBAC7B3gE,KAAK4gE,SAAW5gE,KAAKimD,OAAO4a,iBAC5B7gE,KAAK6yD,OAAS7yD,KAAKimD,OAAO6a,eAC1B9gE,KAAKrzB,KAAOqzB,KAAKimD,OAAO8a,aACxB/gE,KAAKrzB,KAAKq0F,UAAUhhE,KAAK6yD,QACzB7yD,KAAKrzB,KAAKs0F,SAASjhE,KAAKmgE,OAExBngE,KAAK67C,QAAU,IAAIlnE,EAASusF,eACxBvsF,EAASwsF,UAAUC,qBAAsBzsF,EAAS0sF,UAAUC,OAC5D3sF,EAAS4sF,SAASC,QAEtBxhE,KAAKkxD,YAAclxD,KAAKimD,OAAOxB,eAAesN,EAAKb,aACnDlxD,KAAKixD,eAAiBjxD,KAAKimD,OAAOxB,eAAesN,EAAKd,gBACtDjxD,KAAKmxD,YAAcnxD,KAAKimD,OAAOxB,eAAesN,EAAKZ,aAGnD,IAAMsQ,EAAY,SAAChb,GACfyZ,EAAKC,MAAMsB,UAAUhb,GACjB,IAAMyZ,EAAKC,MAAMuB,sBACjB/sF,EAASyO,MAAM,CAAC2uE,EAAKf,UAAW,WAC5BkP,EAAKja,OAAO0b,cAAczB,EAAKG,QAC/BH,EAAKG,OAASH,EAAKja,OAAOlB,iBAAiBgN,EAAKf,UAChDkP,EAAKC,MAAMG,UAAUJ,EAAKG,WAMhCuB,EAAY,CAAC7P,EAAKX,QAASW,EAAKV,SAAUU,EAAKT,OAAQS,EAAKrJ,MAC5DmZ,EAAWD,EAAUrhE,IAAI,SAAC5qB,GAAS,cAAQA,IACjDhB,EAASyO,MAAMy+E,EAAU,WAGrB,IAAMC,EAAS5B,EAAKhP,YAAY6Q,iBAChC7B,EAAK8B,KAAO9B,EAAK+B,iBAAiB,OAAQH,EAAQ,GAClDL,EAAUvB,EAAK8B,MAGf,mBAAWE,GACP,IAAMC,EAASP,EAAUrhE,IAAI,SAAC5qB,GAAS,OAAGusF,EAAO,IAAIvsF,IACrDhB,EAASyO,MAAM++E,EAAQ,WACnB,IAAMC,EAAOlC,EAAKhP,YAAY6Q,iBAC9BN,EAAUvB,EAAK+B,iBAAiBC,EAASE,EAAM,QAJjCC,EAAA,EAAAC,EAAA,CAAC,YAAa,aAAdD,EAAAC,EAAA18F,OAAAy8F,IAA0B,GAA9BC,EAAAD,IASlB,mBAAWH,GACP,IAAMC,EAASP,EAAUrhE,IAAI,SAAC5qB,GAAS,OAAGusF,EAAO,IAAIvsF,IACrDhB,EAASyO,MAAM++E,EAAQ,WACnB,IAAMC,EAAOlC,EAAKhP,YAAY6Q,iBAC9BN,EAAUvB,EAAK+B,iBAAiBC,EAASE,EAAM,OAJjCG,EAAA,EAAAC,EAAA,CAAC,UAADD,EAAAC,EAAA58F,OAAA28F,IAAU,GAAdC,EAAAD,IAUlB5tF,EAASyO,MAAM,CADI,uBACU,WACzB,IAAM2nB,EAAKm1D,EAAKjP,eAAe8Q,iBAC/Bh3D,EAAG03D,mBAAmB,QAAS,CAAC,EAAK,GAAK,EAAK,IAC/C,IAAM/Z,EAAOwX,EAAKja,OAAON,aAJV,sBAImC56C,EAAI,IACtD02D,EAAU/Y,EAAKI,cAMnBn0E,EAASyO,MAAM,CADM,uBADA,0BAEwB,WACzC,IAAM2nB,EAAKm1D,EAAK/O,YAAY4Q,iBACtBW,EAASxC,EAAKja,OAAOT,sBAJV,0BAKjBz6C,EAAG43D,oBAAoB,SAAUD,EAAQxC,EAAKrkB,SAC9C,IAAM6M,EAAOwX,EAAKja,OAAON,aALR,uBAKmC56C,EAAI,IACxD02D,EAAU/Y,EAAKI,cAKnBn0E,EAASyO,MAAM,CADM,uBADA,0BAEwB,WACzC,IAAM2nB,EAAKm1D,EAAK/O,YAAY4Q,iBACtBW,EAASxC,EAAKja,OAAOT,sBAJV,0BAKjBz6C,EAAG43D,oBAAoB,SAAUD,EAAQxC,EAAKrkB,SAC9C,IAAM6M,EAAOwX,EAAKja,OAAON,aALR,uBAKmC56C,EAAI,IACxD02D,EAAU/Y,EAAKI,gBAIvB,IAAM8Z,EAAWjuF,EAASkuF,cAAcj4G,MAAMS,SAC9CspB,EAASmuF,aAAa3d,QAAQxwE,EAASouF,kBAAkBC,KACpDC,MAAM,CAAC,IAAM,IAAM,MACnBC,aAAY,GACZC,UAAU,MACVC,UAAU,CAAC,IAAM,EAAG,IACpB/d,MAAMrlD,KAAKimD,OAAQ2c,GACxBnB,EAAUmB,GAEV5iE,KAAKqjE,OAASrjE,KAAKqjE,OAAO93G,KAAKy0C,MAC/B5qB,OAAO+sC,iBAAiB,SAAUniB,KAAKqjE,QACvCrjE,KAAKqjE,SAgDb,OA7CWpD,EAAAt0G,UAAAsnG,OAAP,WACI,GAAIjzD,KAAKgiE,KAAM,CACX,IAAMsB,EAAMtjE,KAAKimD,OAAOsd,sBAClBC,EAAOF,EAAIG,YAAYzjE,KAAKgiE,MAClCsB,EAAII,aAAaF,EAAMxjE,KAAKyyD,QAAQX,aACpC0R,EAAW,SAEfxjE,KAAK4gE,SAAS3N,OAAOjzD,KAAK0gE,UAAW1gE,KAAKrzB,OAGtCszF,EAAAt0G,UAAA03G,OAAR,WACI,IAAMM,EAAMvuF,OAAOwuF,iBACbxsG,EAAQ4oC,KAAKwlB,OAAOpuD,MAAQge,OAAOyuF,WAAaF,EAChDtsG,EAAS2oC,KAAKwlB,OAAOnuD,OAAS+d,OAAO0uF,YAAcH,EACzD3jE,KAAKrzB,KAAKo3F,YAAY,CAAC,EAAG,EAAG3sG,EAAOC,IAEpC,IAAMoG,EAASrG,EAAQC,EACjB2sG,EAAMrvF,EAASsvF,WACfnmG,EAAML,EAAS,EAAIumG,EAAIE,WAAaF,EAAIG,SAC9CnkE,KAAK6yD,OAAOuR,iBAAiB,GAAI3mG,EAAQ,EAAK,IAASK,IAGnDmiG,EAAAt0G,UAAAs2G,iBAAR,SAAyB33G,EAAM+5G,EAAaC,GACxC,IAAMlT,EAAUpxD,KAAKimD,OAAOT,sBAAyBl7F,EAAI,IAAIynG,EAAKX,SAC5DC,EAAWrxD,KAAKimD,OAAOT,sBAAyBl7F,EAAI,IAAIynG,EAAKV,UAC7DC,EAAStxD,KAAKimD,OAAOT,sBAAyBl7F,EAAI,IAAIynG,EAAKT,QACjE+S,EAAY1B,oBAAoB,UAAWvR,EAASpxD,KAAK67C,SACzDwoB,EAAY1B,oBAAoB,WAAYtR,EAAUrxD,KAAK67C,SAC3DwoB,EAAY1B,oBAAoB,SAAUrR,EAAQtxD,KAAK67C,SAEvDwoB,EAAYE,kBAAkB,WAAY,GAC1CF,EAAYE,kBAAkB,cAAe,GAC7CF,EAAYE,kBAAkB,YAAaD,GAC3CD,EAAYE,kBAAkB,qBAAsB,GAEpD,IAAM9d,EAASzmD,KAAKimD,OAAON,aAAgBr7F,EAAI,IAAIynG,EAAKrJ,KAAQ2b,EAAa,IAAIvb,WAE3E0b,EAAKxkE,KAAKimD,OAAOwe,uBACjBjB,EAAOgB,EAAGf,YAAYhd,GAK5B,OAJA+d,EAAGE,eAAelB,GAAM,GACxBgB,EAAGG,kBAAkBnB,GAAM,GAC3BA,EAAW,SAEJ/c,GAEfwZ,EAhLA,6DCKA,IAAA9T,EAAA,WAOI,SAAAA,EAAY30E,GAAZ,IAAA0oF,EAAAlgE,KACIA,KAAKylD,MAAQ,IAAIngC,MACjBtlB,KAAK40B,OAAS,KACd50B,KAAKwlB,OAAS,KACdxlB,KAAKylD,MAAMztE,OAAS,WAChB,IAAMwtC,EAAS06C,EAAK16C,OAASzuC,SAAS0uC,cAAc,UACpDy6C,EAAK16C,OAAOpuD,MAAQ8oG,EAAKza,MAAMruF,MAC/B8oG,EAAK16C,OAAOnuD,OAAS6oG,EAAKza,MAAMpuF,OAChC,IAAM64D,EAAUgwC,EAAK16C,OAAOE,WAAW,MACvCwK,EAAQvK,UAAUu6C,EAAKza,MAAO,EAAG,GACjCya,EAAKtrC,OAAS1E,EAAQ89B,aAAa,EAAG,EAAGxoC,EAAOpuD,MAAOouD,EAAOnuD,QAC9D6oG,EAAK9oG,MAAQ8oG,EAAKtrC,OAAOx9D,MACzB8oG,EAAK7oG,OAAS6oG,EAAKtrC,OAAOv9D,OAC1B6oG,EAAK16C,OAAS,KACd06C,EAAKza,MAAQ,MAEjBzlD,KAAKylD,MAAMxuE,IAAMO,EA8DzB,OA3DW20E,EAAAxgG,UAAAi5G,MAAP,WACI,OAAsB,OAAf5kE,KAAKylD,OAGT0G,EAAAxgG,UAAAk5G,SAAP,SAAgBjwG,EAAWC,GACvB,IAAKmrC,KAAK40B,QAAUhgE,EAAI,GAAKC,EAAI,GAAKD,GAAKorC,KAAK40B,OAAOx9D,OAASvC,GAAKmrC,KAAK40B,OAAOv9D,OAC7E,MAAO,CAACxM,EAAG,EAAG+jG,EAAG,EAAG/hG,EAAG,EAAGF,EAAG,GAEjC,IAAM5C,EAAkC,GAA7B8K,EAAImrC,KAAK40B,OAAOx9D,MAAQxC,GACnC,MAAO,CACH/J,EAAGm1C,KAAK40B,OAAOl+C,KAAK3sB,GACpB6kG,EAAG5uD,KAAK40B,OAAOl+C,KAAK3sB,EAAI,GACxB8C,EAAGmzC,KAAK40B,OAAOl+C,KAAK3sB,EAAI,GACxB4C,EAAGqzC,KAAK40B,OAAOl+C,KAAK3sB,EAAI,KAIzBoiG,EAAAxgG,UAAAm5G,iBAAP,SAAwBC,EAAYC,GAChC,IAAMpwG,EAAIxI,KAAKyV,MAAMkjG,GACflwG,EAAIzI,KAAKyV,MAAMmjG,GACfC,EAAKF,EAAKnwG,EAAI,GACdswG,EAAKF,EAAKnwG,EAAI,GACdmG,EAAK5O,KAAKU,IAAIm4G,GACdhqG,EAAK7O,KAAKU,IAAIo4G,GACdC,EAAKF,EAAK,GAAK,EAAI,EACnBG,EAAKF,EAAK,GAAK,EAAI,EACnB96G,EAAI41C,KAAK6kE,SAASjwG,EAAGC,GACrBiW,EAAKk1B,KAAK6kE,SAASjwG,EAAIuwG,EAAItwG,GAC3BkW,EAAKi1B,KAAK6kE,SAASjwG,EAAGC,EAAIuwG,GAC1BC,EAAMrlE,KAAK6kE,SAASjwG,EAAIuwG,EAAItwG,EAAIuwG,GAChCE,EAAM,EACP,EAAItqG,GAAM5Q,EAAES,EAAImQ,EAAK8P,EAAGjgB,GACxB,EAAImQ,GAAM5Q,EAAEwkG,EAAI5zF,EAAK8P,EAAG8jF,GACxB,EAAI5zF,GAAM5Q,EAAEyC,EAAImO,EAAK8P,EAAGje,GACxB,EAAImO,GAAM5Q,EAAEuC,EAAIqO,EAAK8P,EAAGne,GAEvB44G,EAAM,EACP,EAAIvqG,GAAM+P,EAAGlgB,EAAImQ,EAAKqqG,EAAIx6G,GAC1B,EAAImQ,GAAM+P,EAAG6jF,EAAI5zF,EAAKqqG,EAAIzW,GAC1B,EAAI5zF,GAAM+P,EAAGle,EAAImO,EAAKqqG,EAAIx4G,GAC1B,EAAImO,GAAM+P,EAAGpe,EAAIqO,EAAKqqG,EAAI14G,GAE/B,MAAO,CACH9B,GAAI,EAAIoQ,GAAMqqG,EAAI,GAAKrqG,EAAKsqG,EAAI,GAChC3W,GAAI,EAAI3zF,GAAMqqG,EAAI,GAAKrqG,EAAKsqG,EAAI,GAChC14G,GAAI,EAAIoO,GAAMqqG,EAAI,GAAKrqG,EAAKsqG,EAAI,GAChC54G,GAAI,EAAIsO,GAAMqqG,EAAI,GAAKrqG,EAAKsqG,EAAI,KAIjCpZ,EAAAxgG,UAAA65G,UAAP,SAAiB5wG,EAAWC,GACxB,IAAMzK,EAAI41C,KAAK6kE,SAASjwG,EAAGC,GAC3B,OAAOzK,EAAES,EAAU,IAANT,EAAEwkG,EAAgB,IAANxkG,EAAEyC,EAAU,KAGlCs/F,EAAAxgG,UAAA85G,kBAAP,SAAyB7wG,EAAWC,GAChC,IAAMzK,EAAI41C,KAAK8kE,iBAAiBlwG,EAAGC,GACnC,OAAOzK,EAAES,EAAU,IAANT,EAAEwkG,EAAgB,IAANxkG,EAAEyC,EAAU,KAE7Cs/F,EArFA,6DCNA,IAAAiG,EAAAzoG,EAAA,GAEA8nG,EAAA9nG,EAAA,GAEA+7G,EAAA,WAyDI,SAAAA,EAAYjT,EAAkBlB,EAAoBC,GAE9CxxD,KAAK2lE,WAAa,IAAIvT,EAAA,QAAQK,EAAQ/0D,UAGtCsC,KAAK4lE,WAAanT,EAElBzyD,KAAKuxD,UAAYA,EACjBvxD,KAAKwxD,UAAYA,EACjBxxD,KAAK6lE,SAAW,CACZC,UAAU,EACVC,SAAS,EACTjpG,MAAM,EACNkpG,UAAU,EACVjpG,OAAO,EACPkpG,UAAU,EACVC,KAAK,GAETnvF,SAASorC,iBAAiB,UAAWniB,KAAKmmE,UAAU56G,KAAKy0C,OACzDjpB,SAASorC,iBAAiB,QAASniB,KAAKomE,QAAQ76G,KAAKy0C,OAErDA,KAAKqmE,SAAW,EAChBrmE,KAAKsmE,aAA+B,GAAhBtmE,KAAKqmE,SACzBrmE,KAAKg+D,QAAS,EACdh+D,KAAKumE,WAAY,EACjBvmE,KAAKwmE,SAAU,EACfxmE,KAAKymE,SAAWhV,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,GACtC4yC,KAAK0mE,KAAO,EACZ1mE,KAAK2mE,SAAWlV,EAAA/H,KAAKr+F,SACrB20C,KAAK4mE,MAAQ,EACb5mE,KAAK6mE,YAAc,GACnB7mE,KAAK8/D,MAAQ,EACb9/D,KAAK8mE,WAAa,EAClB9mE,KAAK+mE,MAAQ,EACb/mE,KAAKgnE,OAAS,EACdhnE,KAAKinE,SAAW,EAChBjnE,KAAKknE,WAAazV,EAAA9H,KAAKt+F,SACvB20C,KAAKmnE,oBAAsB,KAAS,IACpCnnE,KAAKonE,oBAAqB,EAC1BpnE,KAAKqnE,0BAA4B5V,EAAA/H,KAAKr+F,SACtC20C,KAAKsnE,iBAAmB,KAAS,IACjCtnE,KAAKunE,WAAa,EAClBvnE,KAAKwnE,WAAa,GAClBxnE,KAAKynE,YAAc,GACnBznE,KAAK0nE,UAAY,GACjB1nE,KAAK2nE,SAAW,IAChB3nE,KAAK4nE,cAAgBnW,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,GAC3C4yC,KAAK6nE,SAAW,EAChB7nE,KAAK8nE,eAAiB,EACtB9nE,KAAK+nE,aAAe,IACpB/nE,KAAKgoE,cAAgB,EACrBhoE,KAAKioE,eAAiBxW,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,GAC5C4yC,KAAKkoE,KAAO,EACZloE,KAAKmoE,WAAa,EAClBnoE,KAAKooE,SAAW,IAChBpoE,KAAKqoE,UAAY,EACjBroE,KAAKsoE,WAAa7W,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,GACxC4yC,KAAKuoE,eAAiB9W,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,GAC5C4yC,KAAKwoE,gBAAkB/W,EAAA/H,KAAKt8F,YAAY,EAAG,EAAG,GAC9C4yC,KAAKyoE,gBAAkBhX,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,GAC7C4yC,KAAK0oE,gBAAkB,EACvB1oE,KAAK2oE,gBAAkB,EACvB3oE,KAAK4oE,eAAiBnX,EAAA/H,KAAKr+F,SAK3B20C,KAAK6oE,eAAiB,CAClBC,OAAO,EACPhsG,MAAM,EACNC,OAAO,GA+SnB,OA3SW2oG,EAAA/5G,UAAAmnG,KAAP,SAAY77C,GACR,GAAKjX,KAAKuxD,UAAUqT,SAAY5kE,KAAKwxD,UAAUoT,QAG/C,GAAI5kE,KAAKwmE,QACL/U,EAAA/H,KAAKh6F,IAAIswC,KAAK4lE,WAAWloE,SAAUsC,KAAK4lE,WAAWloE,SAAUsC,KAAK+oE,gBADtE,CAIAtX,EAAA/H,KAAKx8F,KAAK8yC,KAAK2lE,WAAWjoE,SAAUsC,KAAK4lE,WAAWloE,UACpD+zD,EAAA/H,KAAKj8F,IAAIuyC,KAAKymE,SAAU,EAAG,EAAG,GAC9BzmE,KAAK4mE,OAAS5mE,KAAK4mE,MAAQoC,EAC3BhpE,KAAKinE,UAAYjnE,KAAKinE,SAAWgC,EAAe,GAEhD,IAyUkBt8G,EAASE,EAASq8G,EAClCr7G,EAAWF,EAAWG,EACtBM,EAAWC,EAAWC,EA3UpB66G,EAAa,EACbC,EAAiB,EAwDrB,GArDIppE,KAAKg+D,SACDh+D,KAAK6lE,SAAS/oG,OACdssG,GAAkBC,EAAgBpyD,EAClCkyD,GAAcnpE,KAAK0nE,WAEnB1nE,KAAK6lE,SAAS9oG,QACdqsG,GAAkBC,EAAgBpyD,EAClCkyD,GAAcnpE,KAAK0nE,WAGnB1nE,KAAK6lE,SAASE,QACd/lE,KAAK8/D,OAASwJ,EAASryD,EAEvBjX,KAAK8/D,OAASyJ,EAAYtyD,EAG1BjX,KAAK6lE,SAASG,WACVhmE,KAAK6lE,SAAS/oG,KACdssG,GAAkBI,EAAkBvyD,EAEpCmyD,GAAoC,GAAlBI,EAAuBvyD,EAE7CjX,KAAK8/D,OAAS2J,EAAWxyD,EACzBjX,KAAK4mE,QAAU8C,EAAW1pE,KAAK4mE,OAASoC,EACxChpE,KAAKymE,SAAS,IAAMzmE,KAAK8/D,MAAQ9/D,KAAK4mE,MAAQ3vD,EAC1CjX,KAAK4mE,MAAQ,IACb5mE,KAAKymE,SAAS,IAAMzmE,KAAK8/D,MAAQ9/D,KAAK4mE,MAAQ3vD,GAElDkyD,GAA+B,GAAjBnpE,KAAK0nE,WAGnB1nE,KAAK6lE,SAASI,WACVjmE,KAAK6lE,SAAS9oG,MACdqsG,GAAkBI,EAAkBvyD,EAEpCmyD,GAAoC,GAAlBI,EAAuBvyD,EAE7CjX,KAAK8/D,OAAS2J,EAAWxyD,EACzBjX,KAAK4mE,SAAW8C,EAAW1pE,KAAK4mE,OAASoC,EACzChpE,KAAKymE,SAAS,IAAMzmE,KAAK8/D,MAAQ9/D,KAAK4mE,MAAQ3vD,EAC1CjX,KAAK4mE,MAAQ,IACb5mE,KAAKymE,SAAS,IAAMzmE,KAAK8/D,MAAQ9/D,KAAK4mE,MAAQ3vD,GAElDkyD,GAA+B,GAAjBnpE,KAAK0nE,YAI3B1nE,KAAKinE,WAAamC,EAAiBppE,KAAKinE,UAAYgC,EAEpDjpE,KAAK8/D,MAAQ1zG,KAAKW,IAAI,EAAGX,KAAK0V,IAAIk+B,KAAK8/D,MAAOuG,IAC9CrmE,KAAK8mE,WAAa9mE,KAAK8/D,MAAQuG,EAC/BrmE,KAAKymE,SAAS,IAAMzmE,KAAK8/D,MAAQ7oD,EAkRftqD,EAhRGqzC,KAAK4oE,eAgRC/7G,EAhRe88G,EAgRNT,EAhRa,KAiR/Cr7G,EAAKlB,EAAE,GAAIgB,EAAKhB,EAAE,GAAImB,EAAKnB,EAAE,GAC7ByB,EAAKvB,EAAE,GAAIwB,EAAKxB,EAAE,GAAIyB,EAAKzB,EAAE,GAC3BT,KAAKU,IAAIe,EAAKO,IAAO86G,EAAW98G,KAAKW,IAAI,EAAKX,KAAKU,IAAIe,GAAKzB,KAAKU,IAAIsB,KACrEhC,KAAKU,IAAIa,EAAKU,IAAO66G,EAAW98G,KAAKW,IAAI,EAAKX,KAAKU,IAAIa,GAAKvB,KAAKU,IAAIuB,KACrEjC,KAAKU,IAAIgB,EAAKQ,IAAO46G,EAAW98G,KAAKW,IAAI,EAAKX,KAAKU,IAAIgB,GAAK1B,KAAKU,IAAIwB,IApRrEmjG,EAAA/H,KAAKx8F,KAAK8yC,KAAK4oE,eAAgBe,OAC5B,CAC4B,IAA3B3pE,KAAK4oE,eAAe,KACpB5oE,KAAKymE,SAAS,GAAK,GAEvBhV,EAAA/H,KAAKh6F,IAAIswC,KAAKymE,SAAUzmE,KAAKymE,SAAUzmE,KAAK4oE,gBAC5C,IAAM39G,EAAIgsD,EAAK,IAAsB,EAAhB2yD,EAAoBA,EACzCnY,EAAA/H,KAAKhnF,KAAKs9B,KAAK4oE,eAAgB5oE,KAAK4oE,eAAgBe,EAAO1+G,GAG/DwmG,EAAA/H,KAAKx8F,KAAK8yC,KAAKqnE,0BAA2BrnE,KAAK2lE,WAAWjoE,UAC1DsC,KAAK6pE,aAAa5yD,GAElBjX,KAAK2lE,WAAWj0G,UAAU+/F,EAAA/H,KAAKt8F,WAAW4yC,KAAKymE,SAAS,GAAI,EAAGzmE,KAAKymE,SAAS,KAC7EzmE,KAAK8pE,cAEL9pE,KAAK2lE,WAAWj0G,UAAU+/F,EAAA/H,KAAKt8F,WAAW,EAAG4yC,KAAKymE,SAAS,GAAI,IAC/DzmE,KAAK+pE,eAAe9yD,GAIpB,IAAM+yD,EAA0B,IAAhBhqE,KAAKinE,SACrBxV,EAAA9H,KAAKx8F,SAAS6yC,KAAKknE,YACnBzV,EAAA9H,KAAK/+E,UAAUo1B,KAAKknE,WAAY,EAAG8C,EAAS,GAC5CvY,EAAA9H,KAAKx7F,SAAS6xC,KAAK2lE,WAAWhU,YAAa3xD,KAAK2lE,WAAWhU,YAAa3xD,KAAKknE,YAG7E,IAAM+C,EAAQxY,EAAApG,KAAKl+F,SAASskG,EAAApG,KAAKhgG,UAG3B6+G,GAAiBlqE,KAAK8nE,gBAtFZ,EAsFwC9nE,KAAK6nE,WAAa7nE,KAAK+nE,aAC3E37G,KAAKU,IAAIo9G,GAAiBC,IAC1BnqE,KAAK6nE,UAAYqC,GAEjB99G,KAAKU,IAAIkzC,KAAK6nE,UAAYsC,GAC1B1Y,EAAApG,KAAK78F,OAAOy7G,EAAOA,EAAOjqE,KAAK6nE,SAAUuC,GAI7C,IAAMC,GAAarqE,KAAKmoE,WAAanoE,KAAKkoE,MAAQloE,KAAKooE,SACnDh8G,KAAKU,IAAIu9G,GAAaF,IACtBnqE,KAAKkoE,MAAQmC,GAEbj+G,KAAKU,IAAIkzC,KAAKkoE,MAAQiC,GACtB1Y,EAAApG,KAAK78F,OAAOy7G,EAAOA,EAAOjqE,KAAKkoE,KAAMoC,GAIzC,IAAMC,GAAapB,EAAanpE,KAAK0mE,MAAQ1mE,KAAK2nE,SAC9Cv7G,KAAKU,IAAIy9G,GAAaJ,IACtBnqE,KAAK0mE,MAAQ6D,GAEbn+G,KAAKU,IAAIkzC,KAAK0mE,MAAQyD,IACtB1Y,EAAA/H,KAAKx8F,KAAK8yC,KAAK2mE,SAAU3mE,KAAK4nE,eAC9BnW,EAAApG,KAAK78F,OAAOy7G,EAAOA,EAAOjqE,KAAK0mE,KAAM1mE,KAAK2mE,WAG9ClV,EAAApG,KAAKl9F,SAAS87G,EAAOjqE,KAAK2lE,WAAW7T,YAAamY,GAClDxY,EAAApG,KAAKhwF,eAAe2kC,KAAK4lE,WAAWloE,SAAUusE,GAC9CxY,EAAApG,KAAK7vF,YAAYwkC,KAAK4lE,WAAWjU,YAAasY,KAG3CvE,EAAA/5G,UAAAqnG,mBAAP,WACI,OAAQhzD,KAAK8/D,MAAQ9/D,KAAK+mE,OAAS/mE,KAAKqmE,UAGpCX,EAAA/5G,UAAAw6G,UAAR,SAAkBvlE,GACd,IAAMt1C,EAAM00C,KAAK6lE,SACjB,OAAQjlE,EAAM4pE,SACV,KAAK,GAAWl/G,EAAIy6G,SAAU,EAAM,MACpC,KAAK,GAAaz6G,EAAIw6G,UAAW,EAAM,MACvC,KAAK,GAAax6G,EAAIwR,MAAO,EAAM,MACnC,KAAK,GAAcxR,EAAIyR,OAAQ,EAAM,MACrC,KAAK,GACL,KAAK,GAAUzR,EAAI06G,UAAW,EAAM,MACpC,KAAK,GACL,KAAK,GAAU16G,EAAI26G,UAAW,IAI9BP,EAAA/5G,UAAAy6G,QAAR,SAAgBxlE,GACZ,IAAMt1C,EAAM00C,KAAK6lE,SACjB,OAAQjlE,EAAM4pE,SACV,KAAK,GAAWl/G,EAAIy6G,SAAU,EAAO,MACrC,KAAK,GAAaz6G,EAAIw6G,UAAW,EAAO,MACxC,KAAK,GAAax6G,EAAIwR,MAAO,EAAO,MACpC,KAAK,GAAcxR,EAAIyR,OAAQ,EAAO,MACtC,KAAK,GACL,KAAK,GAAUzR,EAAI06G,UAAW,EAAO,MACrC,KAAK,GACL,KAAK,GAAU16G,EAAI26G,UAAW,IAI9BP,EAAA/5G,UAAAo+G,eAAR,SAAuB9yD,GACfjX,KAAK6mE,YAAc,IACnB7mE,KAAK6mE,aAAe5vD,GAExBjX,KAAK6oE,eAAe/rG,MAAO,EAC3BkjC,KAAK6oE,eAAe9rG,OAAQ,EAC5BijC,KAAK6oE,eAAeC,OAAQ,EAE5B,IAAM2B,EAASzqE,KAAK2lE,WAAWjoE,SACzBgtE,EAAU1qE,KAAK2lE,WAAWhU,YAE1B/8F,EAAIorC,KAAKuxD,UAAUn6F,MAAQ,EAAIqzG,EAAO,GAAKzqE,KAAKmnE,oBAChD7xG,EAAI0qC,KAAKuxD,UAAUl6F,OAAS,EAAIozG,EAAO,GAAKzqE,KAAKmnE,oBACjD1uE,EAAMg5D,EAAA/H,KAAKt8F,WAAWwH,EAAG,EAAGU,GAE5Bi8F,EAAYvxD,KAAKuxD,UAAUuT,iBAAiBlwG,EAAGU,GACrD,GAAIi8F,EAAU1mG,EAAI,IAAK,CAGnB,IAAM8/G,EAAM3qE,KAAK4qE,eAAiBvE,EAClCrmE,KAAKgnE,QAAU2D,EAAKA,EAAK,GAAME,EAG/BpZ,EAAA/H,KAAKj8F,IAAIuyC,KAAKuoE,eAAgB,EAAG,EAAG,GACpC9W,EAAA/H,KAAKj8F,IAAIuyC,KAAKwoE,iBAAkB,EAAG,EAAG,GACtC/W,EAAA/H,KAAKnmF,cAAcy8B,KAAKuoE,eAAgBvoE,KAAKuoE,eAAgBmC,GAC7DjZ,EAAA/H,KAAKnmF,cAAcy8B,KAAKwoE,gBAAiBxoE,KAAKwoE,gBAAiBkC,GAC/DjZ,EAAA/H,KAAK15F,MAAMgwC,KAAKuoE,eAAgBvoE,KAAKuoE,eAAgBvoE,KAAK0oE,iBAC1DjX,EAAA/H,KAAK15F,MAAMgwC,KAAKwoE,gBAAiBxoE,KAAKwoE,gBAAiBxoE,KAAK0oE,iBAE5D,IAAMoC,EAAOrZ,EAAA/H,KAAKh6F,IAAIswC,KAAKuoE,eAAgBvoE,KAAKuoE,eAAgB9vE,GAC1DsyE,EAAOtZ,EAAA/H,KAAKh6F,IAAIswC,KAAKwoE,gBAAiBxoE,KAAKwoE,gBAAiB/vE,GAC5DuyE,EAAOhrE,KAAKuxD,UAAUsT,SAASz4G,KAAK2V,MAAM+oG,EAAK,IAAK1+G,KAAK2V,MAAM+oG,EAAK,KAAKjgH,EACzEogH,EAAOjrE,KAAKuxD,UAAUsT,SAASz4G,KAAK2V,MAAMgpG,EAAK,IAAK3+G,KAAK2V,MAAMgpG,EAAK,KAAKlgH,EAgB/E,GAdAm1C,KAAK2oE,gBAAkBv8G,KAAKW,IAAI,GAAKX,KAAK0V,IAAIopG,EAAclrE,KAAK8/D,MAAQqL,IACrEF,EAAOD,GACPhrE,KAAK4oE,eAAe,IAAM5oE,KAAK2oE,gBAC/B3oE,KAAK6oE,eAAe/rG,MAAO,GACpBmuG,EAAOD,GACdhrE,KAAK4oE,eAAe,IAAM5oE,KAAK2oE,gBAC/B3oE,KAAK6oE,eAAe9rG,OAAQ,IAE5BijC,KAAK4oE,eAAe,IAA6B,EAAvB5oE,KAAK2oE,gBAC/B3oE,KAAK6oE,eAAeC,OAAQ,EAC5B9oE,KAAK8/D,MAAQ,GAIbmL,EAAO,KAAOD,EAAO,IACRhrE,KAAKuxD,UAAUsT,SAASz4G,KAAK2V,MAAM02B,EAAI,GAAK,GAAIrsC,KAAK2V,MAAM02B,EAAI,GAAK,IAAI5tC,EAC1E,KACPstB,QAAQC,IAAI,YAKpB4nB,KAAK8/D,OAASsL,EACdprE,KAAK8/D,OAAU,EAAIuL,GAA8B,EAAI9Z,EAAU1mG,EAAI,KACnEm1C,KAAK+mE,MAAQ,IAIbrB,EAAA/5G,UAAAi/G,aAAR,WACI,OAAOx+G,KAAK2V,MAAMi+B,KAAK8/D,MAAQ9/D,KAAK+mE,QAGhCrB,EAAA/5G,UAAAk+G,aAAR,SAAqB5yD,GACjB,IAAMwzD,EAASzqE,KAAK2lE,WAAWjoE,SAC/BsC,KAAK+mE,OAASuE,EAAer0D,EACzBjX,KAAK+mE,MAAQ,IACb/mE,KAAK+mE,MAAQ,GAIjB,IAAMnyG,EAAIxI,KAAK2V,MAAMi+B,KAAKuxD,UAAUn6F,MAAQ,EAAIqzG,EAAO,GAAKzqE,KAAKmnE,qBAC3D7xG,EAAIlJ,KAAK2V,MAAMi+B,KAAKuxD,UAAUl6F,OAAS,EAAIozG,EAAO,GAAKzqE,KAAKmnE,qBAE5DlE,EAAQjjE,KAAKuxD,UAAUsT,SAASjwG,EAAGU,GAEzB,MAAZ2tG,EAAMp4G,GAAao4G,EAAMrU,EAAI,KAAOqU,EAAMp2G,EAAI,MAE9CmzC,KAAK+mE,MAAQ/mE,KAAKsmE,cAGtBtmE,KAAKymE,SAAS,IAAMzmE,KAAK+mE,MAAQ9vD,GAG7ByuD,EAAA/5G,UAAAm+G,YAAR,WACI,IAAMW,EAASzqE,KAAK2lE,WAAWjoE,SACzBgtE,EAAU1qE,KAAK2lE,WAAWhU,YAE5B/8F,EAAIorC,KAAKwxD,UAAUp6F,MAAQ,EAAIqzG,EAAO,GAAKzqE,KAAKsnE,iBAChDhyG,EAAI0qC,KAAKwxD,UAAUn6F,OAAS,EAAIozG,EAAO,GAAKzqE,KAAKsnE,iBAC/CjwG,EAAS2oC,KAAKwxD,UAAUiU,kBAAkB7wG,EAAGU,GAAK0qC,KAAKynE,YAAcznE,KAAKunE,WAChF,GAAIlwG,EAAS,MAAO,CAChB,IAAM+yD,EAAQ/yD,EAASozG,EAAO,GAE1BzqE,KAAKymE,SAAS,IADdr8C,EAAQ,EACYA,EAEAA,EAAQpqB,KAAKwnE,WAKzC/V,EAAA/H,KAAKj8F,IAAIuyC,KAAKioE,eAAgB,EAAG,EAAG,GACpCxW,EAAA/H,KAAKnmF,cAAcy8B,KAAKioE,eAAgBjoE,KAAKioE,eAAgByC,GAC7DjZ,EAAA/H,KAAKh6F,IAAIswC,KAAKioE,eAAgBjoE,KAAKioE,eAAgBwC,GACnD71G,EAAIorC,KAAKwxD,UAAUp6F,MAAQ,EAAI4oC,KAAKioE,eAAe,GAAKjoE,KAAKsnE,iBAC7DhyG,EAAI0qC,KAAKwxD,UAAUn6F,OAAS,EAAI2oC,KAAKioE,eAAe,GAAKjoE,KAAKsnE,iBAC9D,IAAIiE,EAAUvrE,KAAKwxD,UAAUiU,kBAAkB7wG,EAAGU,GAAK0qC,KAAKynE,YAAcznE,KAAKunE,WAC3EgE,EAAU,QACVvrE,KAAK8nE,gBAAkB17G,KAAKo/G,MAAMD,EAAUl0G,EAAQ,GAAO2oC,KAAKgoE,eAIpEvW,EAAA/H,KAAKj8F,IAAIuyC,KAAKsoE,WAAY,EAAG,EAAG,GAChC7W,EAAA/H,KAAKnmF,cAAcy8B,KAAKsoE,WAAYtoE,KAAKsoE,WAAYoC,GACrDjZ,EAAA/H,KAAKh6F,IAAIswC,KAAKsoE,WAAYtoE,KAAKsoE,WAAYmC,GAC3C71G,EAAIorC,KAAKwxD,UAAUp6F,MAAQ,EAAI4oC,KAAKsoE,WAAW,GAAKtoE,KAAKsnE,iBACzDhyG,EAAI0qC,KAAKwxD,UAAUn6F,OAAS,EAAI2oC,KAAKsoE,WAAW,GAAKtoE,KAAKsnE,kBAC1DiE,EAAUvrE,KAAKwxD,UAAUiU,kBAAkB7wG,EAAGU,GAAK0qC,KAAKynE,YAAcznE,KAAKunE,aAC5D,QACX9V,EAAA/H,KAAK/5F,SAASqwC,KAAKsoE,WAAYtoE,KAAKsoE,WAAYmC,GAChDhZ,EAAA/H,KAAK15F,MAAMgwC,KAAKsoE,WAAYtoE,KAAKsoE,YAAa,GAC9C7W,EAAA/H,KAAKh6F,IAAIswC,KAAKsoE,WAAYtoE,KAAKsoE,WAAYmC,GAC3C71G,EAAIorC,KAAKwxD,UAAUp6F,MAAQ,EAAI4oC,KAAKsoE,WAAW,GAAKtoE,KAAKsnE,iBACzDhyG,EAAI0qC,KAAKwxD,UAAUn6F,OAAS,EAAI2oC,KAAKsoE,WAAW,GAAKtoE,KAAKsnE,iBAC1DiE,EAAUvrE,KAAKwxD,UAAUiU,kBAAkB7wG,EAAGU,GAAK0qC,KAAKynE,YAAcznE,KAAKunE,YAE3EgE,EAAU,QACVvrE,KAAKmoE,WAAa/7G,KAAKo/G,MAAMD,EAAUl0G,EAAQ,GAAO2oC,KAAKqoE,YAGvE3C,EA9aA,eAgcA,IAAMyE,EAAU,KACVR,EAAQlY,EAAA/H,KAAKr+F,SACbk+G,EAAY,IACZG,EAAW,GACXJ,EAAS,IACTG,EAAW,IACXpD,EAAW,EAEXiF,GADetrE,KAAKqmE,SACL,KACfgD,EAAgB,KAChBG,EAAkB,MAClB2B,EAAiB,GACjBD,EAAe,IACftB,EAAgB,GAChBwB,EAAyB,GACzBC,EAA6B,GAG7BR,EAAe,IACf7B,EAAY,IACZC,EAAe,IAEfmB,GADa3Y,EAAA/H,KAAKt8F,WAAW,GAAI,GAAI,GACtBqkG,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG,IACrCk9G,EAAW7Y,EAAA/H,KAAKt8F,WAAW,EAAG,EAAG","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","\nvar Filament = (\nfunction(Filament) {\n  Filament = Filament || {};\n\nvar Module=typeof Filament!==\"undefined\"?Filament:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",(function(reason,p){process[\"exit\"](1)}));Module[\"quit\"]=(function(status){process[\"exit\"](status)});Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WEB){if(document.currentScript){scriptDirectory=document.currentScript.src}}else{scriptDirectory=self.location.href}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.split(\"/\").slice(0,-1).join(\"/\")+\"/\"}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=(function(title){document.title=title})}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})};var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function makeBigInt(low,high,unsigned){return unsigned?+(low>>>0)+ +(high>>>0)*4294967296:+(low>>>0)+ +(high|0)*4294967296}function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var GLOBAL_BASE=1024;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}var JSfuncs={\"stackSave\":(function(){stackSave()}),\"stackRestore\":(function(){stackRestore()}),\"arrayToC\":(function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),\"stringToC\":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={\"string\":JSfuncs[\"stringToC\"],\"array\":JSfuncs[\"arrayToC\"]};function ccall(ident,returnType,argTypes,args,opts){function convertReturnValue(ret){if(returnType===\"string\")return Pointer_stringify(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}var ALLOC_NORMAL=0;var ALLOC_STATIC=2;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc===\"function\"?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function demangle(func){return func}function demangleAll(text){var regex=/__Z[\\w\\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+\" [\"+y+\"]\"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}var PAGE_SIZE=16384;var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}if(!Module[\"reallocBuffer\"])Module[\"reallocBuffer\"]=(function(size){var ret;try{if(ArrayBuffer.transfer){ret=ArrayBuffer.transfer(buffer,size)}else{var oldHEAP8=HEAP8;ret=new ArrayBuffer(size);var temp=new Int8Array(ret);temp.set(oldHEAP8)}}catch(e){return false}var success=_emscripten_replace_memory(ret);if(!success)return false;return ret});function enlargeMemory(){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module[\"reallocBuffer\"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile=\"filament.wast\";var wasmBinaryFile=\"filament.wasm\";var asmjsCodeFile=\"filament.temp.asm.js\";if(!isDataURI(wasmTextFile)){wasmTextFile=locateFile(wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=locateFile(asmjsCodeFile)}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":asm2wasmImports,\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){err(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function fixImports(imports){return imports}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){err(\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;Module[\"usingWasm\"]=true;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver).catch((function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource).catch((function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var asmjsReallocBuffer=Module[\"reallocBuffer\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;if(Module[\"usingWasm\"]){try{var result=Module[\"wasmMemory\"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}}});Module[\"reallocBuffer\"]=(function(size){if(finalMethod===\"asmjs\"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod=\"\";Module[\"asm\"]=(function(global,env,providedBuffer){env=fixImports(env);if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"memoryBase\"]){env[\"memoryBase\"]=Module[\"STATIC_BASE\"]}if(!env[\"tableBase\"]){env[\"tableBase\"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);assert(exports,\"no binaryen method succeeded.\");return exports});}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+116848;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_jsenums_cpp()})},{func:(function(){__GLOBAL__sub_I_jsbindings_cpp()})},{func:(function(){__GLOBAL__sub_I_Engine_cpp()})},{func:(function(){__GLOBAL__sub_I_gl_headers_cpp()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})});var STATIC_BUMP=116848;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;function ___atomic_compare_exchange_8(ptr,expected,desiredl,desiredh,weak,success_memmodel,failure_memmodel){var pl=HEAP32[ptr>>2];var ph=HEAP32[ptr+4>>2];var el=HEAP32[expected>>2];var eh=HEAP32[expected+4>>2];if(pl===el&&ph===eh){HEAP32[ptr>>2]=desiredl;HEAP32[ptr+4>>2]=desiredh;return 1}else{HEAP32[expected>>2]=pl;HEAP32[expected+4>>2]=ph;return 0}}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function ___cxa_pure_virtual(){ABORT=true;throw\"Pure virtual function called!\"}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\"}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module[\"___cxa_is_pointer_type\"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module[\"___cxa_can_catch\"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0}function ___gxx_personality_v0(){}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var ERRNO_MESSAGES={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}var PATH={splitPath:(function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))}),join2:(function(l,r){return PATH.normalize(l+\"/\"+r)}),resolve:(function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter((function(p){return!!p})),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!=\"win32\";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync(\"/dev/stdin\",\"r\");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf(\"EOF\")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!==\"undefined\")return indexedDB;var ret=null;if(typeof window===\"object\")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,\"IDBFS used, but indexedDB not supported\");return ret}),DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback(\"Unable to connect to IndexedDB\")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains(\"timestamp\")){fileStore.createIndex(\"timestamp\",\"timestamp\",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!==\".\"&&p!==\"..\"}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:\"local\",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readonly\");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index(\"timestamp\");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:\"remote\",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}catch(e){return callback(e)}}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error(\"node type not supported\"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error(\"node type not supported\"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type===\"remote\"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readwrite\");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type===\"local\"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type===\"local\"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process[\"binding\"](\"constants\");if(flags[\"fs\"]){flags=flags[\"fs\"]}NODEFS.flagsForNodeMap={\"1024\":flags[\"O_APPEND\"],\"64\":flags[\"O_CREAT\"],\"128\":flags[\"O_EXCL\"],\"0\":flags[\"O_RDONLY\"],\"2\":flags[\"O_RDWR\"],\"4096\":flags[\"O_SYNC\"],\"512\":flags[\"O_TRUNC\"],\"1\":flags[\"O_WRONLY\"]}}),bufferFrom:(function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,\"/\",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsForNode:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\"\",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),write:(function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,\"/\",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split(\"/\");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join(\"/\");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split(\"/\");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts[\"files\"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts[\"blobs\"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj[\"name\"]),base(obj[\"name\"]),WORKERFS.FILE_MODE,0,obj[\"data\"])}));(mount.opts[\"packages\"]||[]).forEach((function(pack){pack[\"metadata\"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack[\"blob\"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags}),flagsToPermissionString:(function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,\"x\");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,\"wx\")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,\"wx\");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\"w\");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path)}}catch(e){console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path)}catch(e){console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,\"w\");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;err(\"read file: \"+path)}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags)}}catch(e){console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message)}return stream}),close:(function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null}),isClosed:(function(stream){return stream.fd===null}),llseek:(function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path)}catch(e){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"') threw an exception: \"+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,\"x\");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")}),createDefaultDevices:(function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto!==\"undefined\"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require(\"crypto\")[\"randomBytes\"](1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")}),createSpecialDirectories:(function(){FS.mkdir(\"/proc\");FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:(function(){var node=FS.createNode(\"/proc/self\",\"fd\",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},\"/proc/self/fd\")}),createStandardStreams:(function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",\"r\");assert(stdin.fd===0,\"invalid handle for stdin (\"+stdin.fd+\")\");var stdout=FS.open(\"/dev/stdout\",\"w\");assert(stdout.fd===1,\"invalid handle for stdout (\"+stdout.fd+\")\");var stderr=FS.open(\"/dev/stderr\",\"w\");assert(stderr.fd===2,\"invalid handle for stderr (\"+stderr.fd+\")\")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)Object.defineProperty(this,\"stack\",{value:(new Error).stack,writable:true})};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS,\"IDBFS\":IDBFS,\"NODEFS\":NODEFS,\"WORKERFS\":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(Module[\"read\"]){try{obj.contents=intArrayFromString(Module[\"read\"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach((function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return\"EM_FS_\"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!==\"/\"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd};case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0};case 12:case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0};case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall3(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get(),count=SYSCALLS.get();return FS.read(stream,HEAP8,buf,count)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21524:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var tupleRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_array(rawTupleType){var reg=tupleRegistrations[rawTupleType];delete tupleRegistrations[rawTupleType];var elements=reg.elements;var elementsLength=elements.length;var elementTypes=elements.map((function(elt){return elt.getterReturnType})).concat(elements.map((function(elt){return elt.setterArgumentType})));var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;whenDependentTypesAreResolved([rawTupleType],elementTypes,(function(elementTypes){elements.forEach((function(elt,i){var getterReturnType=elementTypes[i];var getter=elt.getter;var getterContext=elt.getterContext;var setterArgumentType=elementTypes[i+elementsLength];var setter=elt.setter;var setterContext=elt.setterContext;elt.read=(function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))});elt.write=(function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)})}));return[{name:reg.name,\"fromWireType\":(function(ptr){var rv=new Array(elementsLength);for(var i=0;i<elementsLength;++i){rv[i]=elements[i].read(ptr)}rawDestructor(ptr);return rv}),\"toWireType\":(function(destructors,o){if(elementsLength!==o.length){throw new TypeError(\"Incorrect number of tuple elements for \"+reg.name+\": expected=\"+elementsLength+\", actual=\"+o.length)}var ptr=rawConstructor();for(var i=0;i<elementsLength;++i){elements[i].write(ptr,o[i])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]}))}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register((function(){clonedHandle[\"delete\"]()})));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"asm\"][\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"asm\"][\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,(function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])}));whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],(function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,(function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)}));var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]}))}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function __embind_register_class_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,fn){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.constructor;if(undefined===proto[methodName]){unboundTypesHandler.argCount=argCount-1;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-1]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));var func=craftInvokerFunction(humanName,invokerArgsArray,null,rawInvoker,fn);if(undefined===proto[methodName].overloadTable){func.argCount=argCount-1;proto[methodName]=func}else{proto[methodName].overloadTable[argCount-1]=func}return[]}));return[]}))}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]}));return[]}))}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]}));return[]}))}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:(function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])}),enumerable:true,configurable:true};if(setter){desc.set=(function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(function(v){throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],(function(types){var getterReturnType=types[0];var desc={get:(function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))}),enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=(function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]}));return[]}))}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function enumReadValueFromPointer(name,shift,signed){switch(shift){case 0:return(function(pointer){var heap=signed?HEAP8:HEAPU8;return this[\"fromWireType\"](heap[pointer])});case 1:return(function(pointer){var heap=signed?HEAP16:HEAPU16;return this[\"fromWireType\"](heap[pointer>>1])});case 2:return(function(pointer){var heap=signed?HEAP32:HEAPU32;return this[\"fromWireType\"](heap[pointer>>2])});default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_enum(rawType,name,size,isSigned){var shift=getShiftFromSize(size);name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":(function(c){return this.constructor.values[c]}),\"toWireType\":(function(destructors,c){return c.value}),\"argPackAdvance\":8,\"readValueFromPointer\":enumReadValueFromPointer(name,shift,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __embind_register_enum_value(rawEnumType,name,enumValue){var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(enumType.name+\"_\"+name,(function(){}))}});Enum.values[enumValue]=Value;Enum[name]=Value}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,(function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)}),argCount-1);whenDependentTypesAreResolved([],argTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]}))}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(function(){return lengthBytesUTF8(value)})}else{getLength=(function(){return value.length})}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_value_array(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){tupleRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),elements:[]}}function __embind_register_value_array_element(rawTupleType,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){tupleRegistrations[rawTupleType].elements.push({getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}function requireHandle(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value}function __emval_as(handle,returnType,destructorsRef){handle=requireHandle(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=__emval_register(destructors);HEAP32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function __emval_get_property(handle,key){handle=requireHandle(handle);key=requireHandle(key);return __emval_register(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}else{return symbol}}function __emval_new_cstring(v){return __emval_register(getStringOrSymbol(v))}function __emval_run_destructors(handle){var destructors=emval_handle_array[handle].value;runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){Module[\"abort\"]()}function _emscripten_get_now(){abort()}function _emscripten_get_now_is_monotonic(){return ENVIRONMENT_IS_NODE||typeof dateNow!==\"undefined\"||(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self[\"performance\"]&&self[\"performance\"][\"now\"]}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if(clk_id===1&&_emscripten_get_now_is_monotonic()){now=_emscripten_get_now()}else{___setErrNo(ERRNO_CODES.EINVAL);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick)};Browser.mainLoop.method=\"timeout\"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method=\"rAF\"}else if(mode==2){if(typeof setImmediate===\"undefined\"){var setImmediates=[];var emscriptenMainLoopMessageId=\"setimmediate\";function Browser_setImmediate_messageHandler(event){if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()()}}addEventListener(\"message\",Browser_setImmediate_messageHandler,true);setImmediate=function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module[\"setImmediates\"]===undefined)Module[\"setImmediates\"]=[];Module[\"setImmediates\"].push(func);postMessage({target:emscriptenMainLoopMessageId})}else postMessage(emscriptenMainLoopMessageId,\"*\")}}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner)};Browser.mainLoop.method=\"immediate\"}return 0}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module[\"noExitRuntime\"]=true;assert(!Browser.mainLoop.func,\"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var browserIterationFunc;if(typeof arg!==\"undefined\"){browserIterationFunc=(function(){Module[\"dynCall_vi\"](func,arg)})}else{browserIterationFunc=(function(){Module[\"dynCall_v\"](func)})}var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker \"'+blocker.name+'\" took '+(Date.now()-start)+\" ms\");Browser.mainLoop.updateStatus();if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}else if(Browser.mainLoop.timingMode==0){Browser.mainLoop.tickStartTime=_emscripten_get_now()}if(Browser.mainLoop.method===\"timeout\"&&Module.ctx){err(\"Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!\");Browser.mainLoop.method=\"\"}Browser.mainLoop.runIter(browserIterationFunc);if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL===\"object\"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw\"SimulateInfiniteLoop\"}}var Browser={mainLoop:{scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:(function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++}),resume:(function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()}),updateStatus:(function(){if(Module[\"setStatus\"]){var message=Module[\"statusMessage\"]||\"Please wait...\";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module[\"setStatus\"](message+\" (\"+(expected-remaining)+\"/\"+expected+\")\")}else{Module[\"setStatus\"](message)}}else{Module[\"setStatus\"](\"\")}}}),runIter:(function(func){if(ABORT)return;if(Module[\"preMainLoop\"]){var preRet=Module[\"preMainLoop\"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e===\"object\"&&e.stack)err(\"exception thrown: \"+[e,e.stack]);throw e}}if(Module[\"postMainLoop\"])Module[\"postMainLoop\"]()})},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module[\"preloadPlugins\"])Module[\"preloadPlugins\"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log(\"warning: no blob constructor, cannot create blobs with mimetypes\")}Browser.BlobBuilder=typeof MozBlobBuilder!=\"undefined\"?MozBlobBuilder:typeof WebKitBlobBuilder!=\"undefined\"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log(\"warning: no BlobBuilder\"):null;Browser.URLObject=typeof window!=\"undefined\"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject===\"undefined\"){console.log(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");Module.noImageDecoding=true}var imagePlugin={};imagePlugin[\"canHandle\"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin[\"handle\"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){warnOnce(\"Blob constructor present but fails: \"+e+\"; falling back to blob builder\")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,\"Image \"+name+\" could not be decoded\");var canvas=document.createElement(\"canvas\");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext(\"2d\");ctx.drawImage(img,0,0);Module[\"preloadedImages\"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log(\"Image \"+url+\" could not be decoded\");if(onerror)onerror()};img.src=url};Module[\"preloadPlugins\"].push(imagePlugin);var audioPlugin={};audioPlugin[\"canHandle\"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{\".ogg\":1,\".wav\":1,\".mp3\":1}};audioPlugin[\"handle\"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module[\"preloadedAudios\"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module[\"preloadedAudios\"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener(\"canplaythrough\",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log(\"warning: browser could not fully decode audio \"+name+\", trying slower base64 approach\");function encode64(data){var BASE=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var PAD=\"=\";var ret=\"\";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src=\"data:audio/x-\"+name.substr(-3)+\";base64,\"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module[\"preloadPlugins\"].push(audioPlugin);function pointerLockChange(){Browser.pointerLock=document[\"pointerLockElement\"]===Module[\"canvas\"]||document[\"mozPointerLockElement\"]===Module[\"canvas\"]||document[\"webkitPointerLockElement\"]===Module[\"canvas\"]||document[\"msPointerLockElement\"]===Module[\"canvas\"]}var canvas=Module[\"canvas\"];if(canvas){canvas.requestPointerLock=canvas[\"requestPointerLock\"]||canvas[\"mozRequestPointerLock\"]||canvas[\"webkitRequestPointerLock\"]||canvas[\"msRequestPointerLock\"]||(function(){});canvas.exitPointerLock=document[\"exitPointerLock\"]||document[\"mozExitPointerLock\"]||document[\"webkitExitPointerLock\"]||document[\"msExitPointerLock\"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener(\"pointerlockchange\",pointerLockChange,false);document.addEventListener(\"mozpointerlockchange\",pointerLockChange,false);document.addEventListener(\"webkitpointerlockchange\",pointerLockChange,false);document.addEventListener(\"mspointerlockchange\",pointerLockChange,false);if(Module[\"elementPointerLock\"]){canvas.addEventListener(\"click\",(function(ev){if(!Browser.pointerLock&&Module[\"canvas\"].requestPointerLock){Module[\"canvas\"].requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}}else{ctx=canvas.getContext(\"2d\")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx===\"undefined\",\"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:(function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer===\"undefined\")Browser.lockPointer=true;if(typeof Browser.resizeCanvas===\"undefined\")Browser.resizeCanvas=false;if(typeof Browser.vrDevice===\"undefined\")Browser.vrDevice=null;var canvas=Module[\"canvas\"];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document[\"fullscreenElement\"]||document[\"mozFullScreenElement\"]||document[\"msFullscreenElement\"]||document[\"webkitFullscreenElement\"]||document[\"webkitCurrentFullScreenElement\"])===canvasContainer){canvas.exitFullscreen=document[\"exitFullscreen\"]||document[\"cancelFullScreen\"]||document[\"mozCancelFullScreen\"]||document[\"msExitFullscreen\"]||document[\"webkitCancelFullScreen\"]||(function(){});canvas.exitFullscreen=canvas.exitFullscreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}if(Module[\"onFullScreen\"])Module[\"onFullScreen\"](Browser.isFullscreen);if(Module[\"onFullscreen\"])Module[\"onFullscreen\"](Browser.isFullscreen)}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener(\"fullscreenchange\",fullscreenChange,false);document.addEventListener(\"mozfullscreenchange\",fullscreenChange,false);document.addEventListener(\"webkitfullscreenchange\",fullscreenChange,false);document.addEventListener(\"MSFullscreenChange\",fullscreenChange,false)}var canvasContainer=document.createElement(\"div\");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullscreen=canvasContainer[\"requestFullscreen\"]||canvasContainer[\"mozRequestFullScreen\"]||canvasContainer[\"msRequestFullscreen\"]||(canvasContainer[\"webkitRequestFullscreen\"]?(function(){canvasContainer[\"webkitRequestFullscreen\"](Element[\"ALLOW_KEYBOARD_INPUT\"])}):null)||(canvasContainer[\"webkitRequestFullScreen\"]?(function(){canvasContainer[\"webkitRequestFullScreen\"](Element[\"ALLOW_KEYBOARD_INPUT\"])}):null);if(vrDevice){canvasContainer.requestFullscreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullscreen()}}),requestFullScreen:(function(lockPointer,resizeCanvas,vrDevice){err(\"Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.\");Browser.requestFullScreen=(function(lockPointer,resizeCanvas,vrDevice){return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)});return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window===\"undefined\"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window[\"requestAnimationFrame\"]||window[\"mozRequestAnimationFrame\"]||window[\"webkitRequestAnimationFrame\"]||window[\"msRequestAnimationFrame\"]||window[\"oRequestAnimationFrame\"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=false}),resumeAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach((function(func){func()}))}}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}))}),safeSetTimeout:(function(func,timeout){Module[\"noExitRuntime\"]=true;return setTimeout((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}),timeout)}),safeSetInterval:(function(func,timeout){Module[\"noExitRuntime\"]=true;return setInterval((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}}),timeout)}),getMimetype:(function(name){return{\"jpg\":\"image/jpeg\",\"jpeg\":\"image/jpeg\",\"png\":\"image/png\",\"bmp\":\"image/bmp\",\"ogg\":\"audio/ogg\",\"wav\":\"audio/wav\",\"mp3\":\"audio/mpeg\"}[name.substr(name.lastIndexOf(\".\")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator[\"getUserMedia\"]||navigator[\"mozGetUserMedia\"]}window.getUserMedia(func)}),getMovementX:(function(event){return event[\"movementX\"]||event[\"mozMovementX\"]||event[\"webkitMovementX\"]||0}),getMovementY:(function(event){return event[\"movementY\"]||event[\"mozMovementY\"]||event[\"webkitMovementY\"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case\"DOMMouseScroll\":delta=event.detail;break;case\"mousewheel\":delta=event.wheelDelta;break;case\"wheel\":delta=event[\"deltaY\"];break;default:throw\"unrecognized mouse wheel event: \"+event.type}return delta}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!=\"mousemove\"&&\"mozMovementX\"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!=\"undefined\"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module[\"canvas\"].getBoundingClientRect();var cw=Module[\"canvas\"].width;var ch=Module[\"canvas\"].height;var scrollX=typeof window.scrollX!==\"undefined\"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!==\"undefined\"?window.scrollY:window.pageYOffset;if(event.type===\"touchstart\"||event.type===\"touchend\"||event.type===\"touchmove\"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type===\"touchstart\"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type===\"touchend\"||event.type===\"touchmove\"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),asyncLoad:(function(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";Module[\"readAsync\"](url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)}),(function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}}));if(dep)addRunDependency(dep)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module[\"canvas\"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module[\"canvas\"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:(function(){if(typeof SDL!=\"undefined\"){var flags=HEAPU32[SDL.screen>>2];flags=flags|8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module[\"canvas\"]);Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!=\"undefined\"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module[\"canvas\"]);Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module[\"forcedAspectRatio\"]&&Module[\"forcedAspectRatio\"]>0){if(w/h<Module[\"forcedAspectRatio\"]){w=Math.round(h*Module[\"forcedAspectRatio\"])}else{h=Math.round(w/Module[\"forcedAspectRatio\"])}}if((document[\"fullscreenElement\"]||document[\"mozFullScreenElement\"]||document[\"msFullscreenElement\"]||document[\"webkitFullscreenElement\"]||document[\"webkitCurrentFullScreenElement\"])===canvas.parentNode&&typeof screen!=\"undefined\"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!=\"undefined\"){canvas.style.removeProperty(\"width\");canvas.style.removeProperty(\"height\")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!=\"undefined\"){if(w!=wNative||h!=hNative){canvas.style.setProperty(\"width\",w+\"px\",\"important\");canvas.style.setProperty(\"height\",h+\"px\",\"important\")}else{canvas.style.removeProperty(\"width\");canvas.style.removeProperty(\"height\")}}}}),wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:(function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle})};var EGL={errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,stringCache:{},setErrorCode:(function(code){EGL.errorCode=code}),chooseConfig:(function(display,attribList,config,config_size,numConfigs){if(display!=62e3){EGL.setErrorCode(12296);return 0}if((!config||!config_size)&&!numConfigs){EGL.setErrorCode(12300);return 0}if(numConfigs){HEAP32[numConfigs>>2]=1}if(config&&config_size>0){HEAP32[config>>2]=62002}EGL.setErrorCode(12288);return 1})};function _eglGetProcAddress(name_){return _emscripten_GetProcAddress(name_)}var GL={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:[],currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},stringiCache:{},tempFixedLengthArray:[],packAlignment:4,unpackAlignment:4,init:(function(){GL.miniTempBuffer=new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);for(var i=0;i<GL.MINI_TEMP_BUFFER_SIZE;i++){GL.miniTempBufferViews[i]=GL.miniTempBuffer.subarray(0,i+1)}for(var i=0;i<32;i++){GL.tempFixedLengthArray.push(new Array(i))}}),recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:(function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret}),MINI_TEMP_BUFFER_SIZE:256,miniTempBuffer:null,miniTempBufferViews:[0],getSource:(function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var frag;if(length){var len=HEAP32[length+i*4>>2];if(len<0){frag=Pointer_stringify(HEAP32[string+i*4>>2])}else{frag=Pointer_stringify(HEAP32[string+i*4>>2],len)}}else{frag=Pointer_stringify(HEAP32[string+i*4>>2])}source+=frag}return source}),createContext:(function(canvas,webGLContextAttributes){if(typeof webGLContextAttributes[\"majorVersion\"]===\"undefined\"&&typeof webGLContextAttributes[\"minorVersion\"]===\"undefined\"){if(typeof WebGL2RenderingContext!==\"undefined\")webGLContextAttributes[\"majorVersion\"]=2;else webGLContextAttributes[\"majorVersion\"]=1;webGLContextAttributes[\"minorVersion\"]=0}var ctx;var errorInfo=\"?\";function onContextCreationError(event){errorInfo=event.statusMessage||errorInfo}try{canvas.addEventListener(\"webglcontextcreationerror\",onContextCreationError,false);try{if(webGLContextAttributes[\"majorVersion\"]==1&&webGLContextAttributes[\"minorVersion\"]==0){ctx=canvas.getContext(\"webgl\",webGLContextAttributes)||canvas.getContext(\"experimental-webgl\",webGLContextAttributes)}else if(webGLContextAttributes[\"majorVersion\"]==2&&webGLContextAttributes[\"minorVersion\"]==0){ctx=canvas.getContext(\"webgl2\",webGLContextAttributes)}else{throw\"Unsupported WebGL context version \"+majorVersion+\".\"+minorVersion+\"!\"}}finally{canvas.removeEventListener(\"webglcontextcreationerror\",onContextCreationError,false)}if(!ctx)throw\":(\"}catch(e){out(\"Could not create canvas: \"+[errorInfo,e,JSON.stringify(webGLContextAttributes)]);return 0}if(!ctx)return 0;var context=GL.registerContext(ctx,webGLContextAttributes);return context}),registerContext:(function(ctx,webGLContextAttributes){var handle=GL.getNewId(GL.contexts);var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes[\"majorVersion\"],GLctx:ctx};function getChromeVersion(){var raw=navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);return raw?parseInt(raw[2],10):false}context.supportsWebGL2EntryPoints=context.version>=2&&(getChromeVersion()===false||getChromeVersion()>=58);if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes[\"enableExtensionsByDefault\"]===\"undefined\"||webGLContextAttributes[\"enableExtensionsByDefault\"]){GL.initExtensions(context)}return handle}),makeContextCurrent:(function(contextHandle){var context=GL.contexts[contextHandle];if(!context)return false;GLctx=Module.ctx=context.GLctx;GL.currentContext=context;return true}),getContext:(function(contextHandle){return GL.contexts[contextHandle]}),deleteContext:(function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;GL.contexts[contextHandle]=null}),initExtensions:(function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;context.maxVertexAttribs=GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);if(context.version<2){var instancedArraysExt=GLctx.getExtension(\"ANGLE_instanced_arrays\");if(instancedArraysExt){GLctx[\"vertexAttribDivisor\"]=(function(index,divisor){instancedArraysExt[\"vertexAttribDivisorANGLE\"](index,divisor)});GLctx[\"drawArraysInstanced\"]=(function(mode,first,count,primcount){instancedArraysExt[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)});GLctx[\"drawElementsInstanced\"]=(function(mode,count,type,indices,primcount){instancedArraysExt[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)})}var vaoExt=GLctx.getExtension(\"OES_vertex_array_object\");if(vaoExt){GLctx[\"createVertexArray\"]=(function(){return vaoExt[\"createVertexArrayOES\"]()});GLctx[\"deleteVertexArray\"]=(function(vao){vaoExt[\"deleteVertexArrayOES\"](vao)});GLctx[\"bindVertexArray\"]=(function(vao){vaoExt[\"bindVertexArrayOES\"](vao)});GLctx[\"isVertexArray\"]=(function(vao){return vaoExt[\"isVertexArrayOES\"](vao)})}var drawBuffersExt=GLctx.getExtension(\"WEBGL_draw_buffers\");if(drawBuffersExt){GLctx[\"drawBuffers\"]=(function(n,bufs){drawBuffersExt[\"drawBuffersWEBGL\"](n,bufs)})}}GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\");var automaticallyEnabledExtensions=[\"OES_texture_float\",\"OES_texture_half_float\",\"OES_standard_derivatives\",\"OES_vertex_array_object\",\"WEBGL_compressed_texture_s3tc\",\"WEBGL_depth_texture\",\"OES_element_index_uint\",\"EXT_texture_filter_anisotropic\",\"ANGLE_instanced_arrays\",\"OES_texture_float_linear\",\"OES_texture_half_float_linear\",\"WEBGL_compressed_texture_atc\",\"WEBKIT_WEBGL_compressed_texture_pvrtc\",\"WEBGL_compressed_texture_pvrtc\",\"EXT_color_buffer_half_float\",\"WEBGL_color_buffer_float\",\"EXT_frag_depth\",\"EXT_sRGB\",\"WEBGL_draw_buffers\",\"WEBGL_shared_resources\",\"EXT_shader_texture_lod\",\"EXT_color_buffer_float\"];var exts=GLctx.getSupportedExtensions();if(exts&&exts.length>0){GLctx.getSupportedExtensions().forEach((function(ext){if(automaticallyEnabledExtensions.indexOf(ext)!=-1){GLctx.getExtension(ext)}}))}}),populateUniformTable:(function(program){var p=GL.programs[program];GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var ptable=GL.programInfos[program];var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,GLctx.ACTIVE_UNIFORMS);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.indexOf(\"]\",name.length-1)!==-1){var ls=name.lastIndexOf(\"[\");name=name.slice(0,ls)}var loc=GLctx.getUniformLocation(p,name);if(loc!=null){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+\"[\"+j+\"]\";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}})};function _emscripten_glActiveTexture(x0){GLctx[\"activeTexture\"](x0)}function _emscripten_glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glBeginConditionalRender(){err(\"missing function: emscripten_glBeginConditionalRender\");abort(-1)}function _emscripten_glBeginTransformFeedback(x0){GLctx[\"beginTransformFeedback\"](x0)}function _emscripten_glBindAttribLocation(program,index,name){name=Pointer_stringify(name);GLctx.bindAttribLocation(GL.programs[program],index,name)}function _emscripten_glBindBuffer(target,buffer){var bufferObj=buffer?GL.buffers[buffer]:null;if(target==35051){GLctx.currentPixelPackBufferBinding=buffer}else if(target==35052){GLctx.currentPixelUnpackBufferBinding=buffer}GLctx.bindBuffer(target,bufferObj)}function _emscripten_glBindBufferBase(target,index,buffer){var bufferObj=buffer?GL.buffers[buffer]:null;GLctx[\"bindBufferBase\"](target,index,bufferObj)}function _emscripten_glBindBufferRange(target,index,buffer,offset,ptrsize){var bufferObj=buffer?GL.buffers[buffer]:null;GLctx[\"bindBufferRange\"](target,index,bufferObj,offset,ptrsize)}function _emscripten_glBindFragDataLocation(){err(\"missing function: emscripten_glBindFragDataLocation\");abort(-1)}function _emscripten_glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,framebuffer?GL.framebuffers[framebuffer]:null)}function _emscripten_glBindProgramARB(){err(\"missing function: emscripten_glBindProgramARB\");abort(-1)}function _emscripten_glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,renderbuffer?GL.renderbuffers[renderbuffer]:null)}function _emscripten_glBindTexture(target,texture){GLctx.bindTexture(target,texture?GL.textures[texture]:null)}function _emscripten_glBindVertexArray(vao){GLctx[\"bindVertexArray\"](GL.vaos[vao])}function _emscripten_glBlendColor(x0,x1,x2,x3){GLctx[\"blendColor\"](x0,x1,x2,x3)}function _emscripten_glBlendEquation(x0){GLctx[\"blendEquation\"](x0)}function _emscripten_glBlendEquationSeparate(x0,x1){GLctx[\"blendEquationSeparate\"](x0,x1)}function _emscripten_glBlendFunc(x0,x1){GLctx[\"blendFunc\"](x0,x1)}function _emscripten_glBlendFuncSeparate(x0,x1,x2,x3){GLctx[\"blendFuncSeparate\"](x0,x1,x2,x3)}function _emscripten_glBufferData(target,size,data,usage){if(!data){GLctx.bufferData(target,size,usage)}else{if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.bufferData(target,HEAPU8,usage,data,size);return}GLctx.bufferData(target,HEAPU8.subarray(data,data+size),usage)}}function _emscripten_glBufferSubData(target,offset,size,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.bufferSubData(target,offset,HEAPU8,data,size);return}GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _emscripten_glCheckFramebufferStatus(x0){return GLctx[\"checkFramebufferStatus\"](x0)}function _emscripten_glClampColor(){err(\"missing function: emscripten_glClampColor\");abort(-1)}function _emscripten_glClear(x0){GLctx[\"clear\"](x0)}function _emscripten_glClearBufferfi(x0,x1,x2,x3){GLctx[\"clearBufferfi\"](x0,x1,x2,x3)}function _emscripten_glClearBufferfv(buffer,drawbuffer,value){GLctx[\"clearBufferfv\"](buffer,drawbuffer,HEAPF32,value>>2)}function _emscripten_glClearBufferiv(buffer,drawbuffer,value){GLctx[\"clearBufferiv\"](buffer,drawbuffer,HEAP32,value>>2)}function _emscripten_glClearBufferuiv(buffer,drawbuffer,value){GLctx[\"clearBufferuiv\"](buffer,drawbuffer,HEAPU32,value>>2)}function _emscripten_glClearColor(x0,x1,x2,x3){GLctx[\"clearColor\"](x0,x1,x2,x3)}function _emscripten_glClearDepth(x0){GLctx[\"clearDepth\"](x0)}function _emscripten_glClearDepthf(x0){GLctx[\"clearDepth\"](x0)}function _emscripten_glClearStencil(x0){GLctx[\"clearStencil\"](x0)}function _emscripten_glClientActiveTexture(){err(\"missing function: emscripten_glClientActiveTexture\");abort(-1)}function _emscripten_glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _emscripten_glColorMaski(){err(\"missing function: emscripten_glColorMaski\");abort(-1)}function _emscripten_glColorPointer(){err(\"missing function: emscripten_glColorPointer\");abort(-1)}function _emscripten_glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _emscripten_glCompressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx[\"compressedTexImage2D\"](target,level,internalFormat,width,height,border,HEAPU8,data,imageSize);return}GLctx[\"compressedTexImage2D\"](target,level,internalFormat,width,height,border,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx[\"compressedTexSubImage2D\"](target,level,xoffset,yoffset,width,height,format,HEAPU8,data,imageSize);return}GLctx[\"compressedTexSubImage2D\"](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCopyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx[\"copyTexImage2D\"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx[\"copyTexSubImage2D\"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;GL.programs[id]=program;return id}function _emscripten_glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _emscripten_glCullFace(x0){GLctx[\"cullFace\"](x0)}function _emscripten_glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GL.currArrayBuffer)GL.currArrayBuffer=0;if(id==GL.currElementArrayBuffer)GL.currElementArrayBuffer=0}}function _emscripten_glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _emscripten_glDeleteObjectARB(){err(\"missing function: emscripten_glDeleteObjectARB\");abort(-1)}function _emscripten_glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;GL.programInfos[id]=null}function _emscripten_glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _emscripten_glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _emscripten_glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _emscripten_glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx[\"deleteVertexArray\"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDepthFunc(x0){GLctx[\"depthFunc\"](x0)}function _emscripten_glDepthMask(flag){GLctx.depthMask(!!flag)}function _emscripten_glDepthRange(x0,x1){GLctx[\"depthRange\"](x0,x1)}function _emscripten_glDepthRangef(x0,x1){GLctx[\"depthRange\"](x0,x1)}function _emscripten_glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glDisable(x0){GLctx[\"disable\"](x0)}function _emscripten_glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _emscripten_glDisablei(){err(\"missing function: emscripten_glDisablei\");abort(-1)}function _emscripten_glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _emscripten_glDrawArraysInstanced(mode,first,count,primcount){GLctx[\"drawArraysInstanced\"](mode,first,count,primcount)}function _emscripten_glDrawBuffers(n,bufs){var bufArray=GL.tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2]}GLctx[\"drawBuffers\"](bufArray)}function _emscripten_glDrawElements(mode,count,type,indices){GLctx.drawElements(mode,count,type,indices)}function _emscripten_glDrawElementsInstanced(mode,count,type,indices,primcount){GLctx[\"drawElementsInstanced\"](mode,count,type,indices,primcount)}function _emscripten_glDrawRangeElements(mode,start,end,count,type,indices){_emscripten_glDrawElements(mode,count,type,indices)}function _emscripten_glEnable(x0){GLctx[\"enable\"](x0)}function _emscripten_glEnableClientState(){err(\"missing function: emscripten_glEnableClientState\");abort(-1)}function _emscripten_glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _emscripten_glEnablei(){err(\"missing function: emscripten_glEnablei\");abort(-1)}function _emscripten_glEndConditionalRender(){err(\"missing function: emscripten_glEndConditionalRender\");abort(-1)}function _emscripten_glEndTransformFeedback(){GLctx[\"endTransformFeedback\"]()}function _emscripten_glFinish(){GLctx[\"finish\"]()}function _emscripten_glFlush(){GLctx[\"flush\"]()}function _emscripten_glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _emscripten_glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _emscripten_glFrontFace(x0){GLctx[\"frontFace\"](x0)}function _emscripten_glFrustum(){err(\"missing function: emscripten_glFrustum\");abort(-1)}function _emscripten_glGenBuffers(n,buffers){for(var i=0;i<n;i++){var buffer=GLctx.createBuffer();if(!buffer){GL.recordError(1282);while(i<n)HEAP32[buffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.buffers);buffer.name=id;GL.buffers[id]=buffer;HEAP32[buffers+i*4>>2]=id}}function _emscripten_glGenFramebuffers(n,ids){for(var i=0;i<n;++i){var framebuffer=GLctx.createFramebuffer();if(!framebuffer){GL.recordError(1282);while(i<n)HEAP32[ids+i++*4>>2]=0;return}var id=GL.getNewId(GL.framebuffers);framebuffer.name=id;GL.framebuffers[id]=framebuffer;HEAP32[ids+i*4>>2]=id}}function _emscripten_glGenRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var renderbuffer=GLctx.createRenderbuffer();if(!renderbuffer){GL.recordError(1282);while(i<n)HEAP32[renderbuffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.renderbuffers);renderbuffer.name=id;GL.renderbuffers[id]=renderbuffer;HEAP32[renderbuffers+i*4>>2]=id}}function _emscripten_glGenTextures(n,textures){for(var i=0;i<n;i++){var texture=GLctx.createTexture();if(!texture){GL.recordError(1282);while(i<n)HEAP32[textures+i++*4>>2]=0;return}var id=GL.getNewId(GL.textures);texture.name=id;GL.textures[id]=texture;HEAP32[textures+i*4>>2]=id}}function _emscripten_glGenVertexArrays(n,arrays){for(var i=0;i<n;i++){var vao=GLctx[\"createVertexArray\"]();if(!vao){GL.recordError(1282);while(i<n)HEAP32[arrays+i++*4>>2]=0;return}var id=GL.getNewId(GL.vaos);vao.name=id;GL.vaos[id]=vao;HEAP32[arrays+i*4>>2]=id}}function _emscripten_glGenerateMipmap(x0){GLctx[\"generateMipmap\"](x0)}function _emscripten_glGetActiveAttrib(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveAttrib(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniform(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveUniform(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniformBlockName(program,uniformBlockIndex,bufSize,length,uniformBlockName){program=GL.programs[program];var result=GLctx[\"getActiveUniformBlockName\"](program,uniformBlockIndex);if(!result)return;if(uniformBlockName&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(result,uniformBlockName,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetActiveUniformBlockiv(program,uniformBlockIndex,pname,params){if(!params){GL.recordError(1281);return}program=GL.programs[program];switch(pname){case 35393:var name=GLctx[\"getActiveUniformBlockName\"](program,uniformBlockIndex);HEAP32[params>>2]=name.length+1;return;default:var result=GLctx[\"getActiveUniformBlockParameter\"](program,uniformBlockIndex,pname);if(!result)return;if(typeof result==\"number\"){HEAP32[params>>2]=result}else{for(var i=0;i<result.length;i++){HEAP32[params+i*4>>2]=result[i]}}}}function _emscripten_glGetActiveUniformName(){err(\"missing function: emscripten_glGetActiveUniformName\");abort(-1)}function _emscripten_glGetActiveUniformsiv(program,uniformCount,uniformIndices,pname,params){if(!params){GL.recordError(1281);return}if(uniformCount>0&&uniformIndices==0){GL.recordError(1281);return}program=GL.programs[program];var ids=[];for(var i=0;i<uniformCount;i++){ids.push(HEAP32[uniformIndices+i*4>>2])}var result=GLctx[\"getActiveUniforms\"](program,ids,pname);if(!result)return;var len=result.length;for(var i=0;i<len;i++){HEAP32[params+i*4>>2]=result[i]}}function _emscripten_glGetAttachedShaders(program,maxCount,count,shaders){var result=GLctx.getAttachedShaders(GL.programs[program]);var len=result.length;if(len>maxCount){len=maxCount}HEAP32[count>>2]=len;for(var i=0;i<len;++i){var id=GL.shaders.indexOf(result[i]);HEAP32[shaders+i*4>>2]=id}}function _emscripten_glGetAttribLocation(program,name){program=GL.programs[program];name=Pointer_stringify(name);return GLctx.getAttribLocation(program,name)}function _emscripten_glGetBooleani_v(){err(\"missing function: emscripten_glGetBooleani_v\");abort(-1)}function emscriptenWebGLGet(name_,p,type){if(!p){GL.recordError(1281);return}var ret=undefined;switch(name_){case 36346:ret=1;break;case 36344:if(type!==\"Integer\"&&type!==\"Integer64\"){GL.recordError(1280)}return;case 34814:case 36345:ret=0;break;case 34466:var formats=GLctx.getParameter(34467);ret=formats.length;break;case 33309:if(GLctx.canvas.GLctxObject.version<2){GL.recordError(1282);return}var exts=GLctx.getSupportedExtensions();ret=2*exts.length;break;case 33307:case 33308:if(GLctx.canvas.GLctxObject.version<2){GL.recordError(1280);return}ret=name_==33307?3:0;break}if(ret===undefined){var result=GLctx.getParameter(name_);switch(typeof result){case\"number\":ret=result;break;case\"boolean\":ret=result?1:0;break;case\"string\":GL.recordError(1280);return;case\"object\":if(result===null){switch(name_){case 34964:case 35725:case 34965:case 36006:case 36007:case 32873:case 34229:case 35097:case 36389:case 34068:{ret=0;break};default:{GL.recordError(1280);return}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case\"Integer\":HEAP32[p+i*4>>2]=result[i];break;case\"Float\":HEAPF32[p+i*4>>2]=result[i];break;case\"Boolean\":HEAP8[p+i>>0]=result[i]?1:0;break;default:throw\"internal glGet error, bad type: \"+type}}return}else if(result instanceof WebGLBuffer||result instanceof WebGLProgram||result instanceof WebGLFramebuffer||result instanceof WebGLRenderbuffer||result instanceof WebGLQuery||result instanceof WebGLSampler||result instanceof WebGLSync||result instanceof WebGLTransformFeedback||result instanceof WebGLVertexArrayObject||result instanceof WebGLTexture){ret=result.name|0}else{GL.recordError(1280);return}break;default:GL.recordError(1280);return}}switch(type){case\"Integer64\":tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[p>>2]=tempI64[0],HEAP32[p+4>>2]=tempI64[1];break;case\"Integer\":HEAP32[p>>2]=ret;break;case\"Float\":HEAPF32[p>>2]=ret;break;case\"Boolean\":HEAP8[p>>0]=ret?1:0;break;default:throw\"internal glGet error, bad type: \"+type}}function _emscripten_glGetBooleanv(name_,p){emscriptenWebGLGet(name_,p,\"Boolean\")}function _emscripten_glGetBufferParameteriv(target,value,data){if(!data){GL.recordError(1281);return}HEAP32[data>>2]=GLctx.getBufferParameter(target,value)}function _emscripten_glGetError(){if(GL.lastError){var error=GL.lastError;GL.lastError=0;return error}else{return GLctx.getError()}}function _emscripten_glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,\"Float\")}function _emscripten_glGetFragDataLocation(program,name){return GLctx[\"getFragDataLocation\"](GL.programs[program],Pointer_stringify(name))}function _emscripten_glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0}HEAP32[params>>2]=result}function _emscripten_glGetInfoLogARB(){err(\"missing function: emscripten_glGetInfoLogARB\");abort(-1)}function emscriptenWebGLGetIndexed(target,index,data,type){if(!data){GL.recordError(1281);return}var result=GLctx[\"getIndexedParameter\"](target,index);var ret;switch(typeof result){case\"boolean\":ret=result?1:0;break;case\"number\":ret=result;break;case\"object\":if(result===null){switch(target){case 35983:case 35368:ret=0;break;default:{GL.recordError(1280);return}}}else if(result instanceof WebGLBuffer){ret=result.name|0}else{GL.recordError(1280);return}break;default:GL.recordError(1280);return}switch(type){case\"Integer64\":tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[data>>2]=tempI64[0],HEAP32[data+4>>2]=tempI64[1];break;case\"Integer\":HEAP32[data>>2]=ret;break;case\"Float\":HEAPF32[data>>2]=ret;break;case\"Boolean\":HEAP8[data>>0]=ret?1:0;break;default:throw\"internal emscriptenWebGLGetIndexed() error, bad type: \"+type}}function _emscripten_glGetIntegeri_v(target,index,data){emscriptenWebGLGetIndexed(target,index,data,\"Integer\")}function _emscripten_glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,\"Integer\")}function _emscripten_glGetObjectParameterivARB(){err(\"missing function: emscripten_glGetObjectParameterivARB\");abort(-1)}function _emscripten_glGetPointerv(){err(\"missing function: emscripten_glGetPointerv\");abort(-1)}function _emscripten_glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}var ptable=GL.programInfos[program];if(!ptable){GL.recordError(1282);return}if(pname==35716){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35719){HEAP32[p>>2]=ptable.maxUniformLength}else if(pname==35722){if(ptable.maxAttributeLength==-1){program=GL.programs[program];var numAttribs=GLctx.getProgramParameter(program,GLctx.ACTIVE_ATTRIBUTES);ptable.maxAttributeLength=0;for(var i=0;i<numAttribs;++i){var activeAttrib=GLctx.getActiveAttrib(program,i);ptable.maxAttributeLength=Math.max(ptable.maxAttributeLength,activeAttrib.name.length+1)}}HEAP32[p>>2]=ptable.maxAttributeLength}else if(pname==35381){if(ptable.maxUniformBlockNameLength==-1){program=GL.programs[program];var numBlocks=GLctx.getProgramParameter(program,GLctx.ACTIVE_UNIFORM_BLOCKS);ptable.maxUniformBlockNameLength=0;for(var i=0;i<numBlocks;++i){var activeBlockName=GLctx.getActiveUniformBlockName(program,i);ptable.maxUniformBlockNameLength=Math.max(ptable.maxUniformBlockNameLength,activeBlockName.length+1)}}HEAP32[p>>2]=ptable.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(GL.programs[program],pname)}}function _emscripten_glGetRenderbufferParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname)}function _emscripten_glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision}function _emscripten_glGetShaderSource(shader,bufSize,length,source){var result=GLctx.getShaderSource(GL.shaders[shader]);if(!result)return;if(bufSize>0&&source){var numBytesWrittenExclNull=stringToUTF8(result,source,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source===null||source.length==0?0:source.length+1;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function _emscripten_glGetString(name_){if(GL.stringCache[name_])return GL.stringCache[name_];var ret;switch(name_){case 7936:case 7937:case 37445:case 37446:ret=allocate(intArrayFromString(GLctx.getParameter(name_)),\"i8\",ALLOC_NORMAL);break;case 7938:var glVersion=GLctx.getParameter(GLctx.VERSION);if(GLctx.canvas.GLctxObject.version>=2)glVersion=\"OpenGL ES 3.0 (\"+glVersion+\")\";else{glVersion=\"OpenGL ES 2.0 (\"+glVersion+\")\"}ret=allocate(intArrayFromString(glVersion),\"i8\",ALLOC_NORMAL);break;case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(exts[i]);gl_exts.push(\"GL_\"+exts[i])}ret=allocate(intArrayFromString(gl_exts.join(\" \")),\"i8\",ALLOC_NORMAL);break;case 35724:var glslVersion=GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);var ver_re=/^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+\"0\";glslVersion=\"OpenGL ES GLSL ES \"+ver_num[1]+\" (\"+glslVersion+\")\"}ret=allocate(intArrayFromString(glslVersion),\"i8\",ALLOC_NORMAL);break;default:GL.recordError(1280);return 0}GL.stringCache[name_]=ret;return ret}function _emscripten_glGetStringi(name,index){if(GLctx.canvas.GLctxObject.version<2){GL.recordError(1282);return 0}var stringiCache=GL.stringiCache[name];if(stringiCache){if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index]}switch(name){case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(allocate(intArrayFromString(exts[i]),\"i8\",ALLOC_NORMAL));gl_exts.push(allocate(intArrayFromString(\"GL_\"+exts[i]),\"i8\",ALLOC_NORMAL))}stringiCache=GL.stringiCache[name]=gl_exts;if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index];default:GL.recordError(1280);return 0}}function _emscripten_glGetTexParameterIiv(){err(\"missing function: emscripten_glGetTexParameterIiv\");abort(-1)}function _emscripten_glGetTexParameterIuiv(){err(\"missing function: emscripten_glGetTexParameterIuiv\");abort(-1)}function _emscripten_glGetTexParameterfv(target,pname,params){if(!params){GL.recordError(1281);return}HEAPF32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTexParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTransformFeedbackVarying(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx[\"getTransformFeedbackVarying\"](program,index);if(!info)return;if(name&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetUniformBlockIndex(program,uniformBlockName){program=GL.programs[program];uniformBlockName=Pointer_stringify(uniformBlockName);return GLctx[\"getUniformBlockIndex\"](program,uniformBlockName)}function _emscripten_glGetUniformIndices(program,uniformCount,uniformNames,uniformIndices){if(!uniformIndices){GL.recordError(1281);return}if(uniformCount>0&&(uniformNames==0||uniformIndices==0)){GL.recordError(1281);return}program=GL.programs[program];var names=[];for(var i=0;i<uniformCount;i++)names.push(Pointer_stringify(HEAP32[uniformNames+i*4>>2]));var result=GLctx[\"getUniformIndices\"](program,names);if(!result)return;var len=result.length;for(var i=0;i<len;i++){HEAP32[uniformIndices+i*4>>2]=result[i]}}function _emscripten_glGetUniformLocation(program,name){name=Pointer_stringify(name);var arrayOffset=0;if(name.indexOf(\"]\",name.length-1)!==-1){var ls=name.lastIndexOf(\"[\");var arrayIndex=name.slice(ls+1,-1);if(arrayIndex.length>0){arrayOffset=parseInt(arrayIndex);if(arrayOffset<0){return-1}}name=name.slice(0,ls)}var ptable=GL.programInfos[program];if(!ptable){return-1}var utable=ptable.uniforms;var uniformInfo=utable[name];if(uniformInfo&&arrayOffset<uniformInfo[0]){return uniformInfo[1]+arrayOffset}else{return-1}}function emscriptenWebGLGetUniform(program,location,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getUniform(GL.programs[program],GL.uniforms[location]);if(typeof data==\"number\"||typeof data==\"boolean\"){switch(type){case\"Integer\":HEAP32[params>>2]=data;break;case\"Float\":HEAPF32[params>>2]=data;break;default:throw\"internal emscriptenWebGLGetUniform() error, bad type: \"+type}}else{for(var i=0;i<data.length;i++){switch(type){case\"Integer\":HEAP32[params+i*4>>2]=data[i];break;case\"Float\":HEAPF32[params+i*4>>2]=data[i];break;default:throw\"internal emscriptenWebGLGetUniform() error, bad type: \"+type}}}}function _emscripten_glGetUniformfv(program,location,params){emscriptenWebGLGetUniform(program,location,params,\"Float\")}function _emscripten_glGetUniformiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,\"Integer\")}function _emscripten_glGetUniformuiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,\"Integer\")}function emscriptenWebGLGetVertexAttrib(index,pname,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getVertexAttrib(index,pname);if(pname==34975){HEAP32[params>>2]=data[\"name\"]}else if(typeof data==\"number\"||typeof data==\"boolean\"){switch(type){case\"Integer\":HEAP32[params>>2]=data;break;case\"Float\":HEAPF32[params>>2]=data;break;case\"FloatToInteger\":HEAP32[params>>2]=Math.fround(data);break;default:throw\"internal emscriptenWebGLGetVertexAttrib() error, bad type: \"+type}}else{for(var i=0;i<data.length;i++){switch(type){case\"Integer\":HEAP32[params+i*4>>2]=data[i];break;case\"Float\":HEAPF32[params+i*4>>2]=data[i];break;case\"FloatToInteger\":HEAP32[params+i*4>>2]=Math.fround(data[i]);break;default:throw\"internal emscriptenWebGLGetVertexAttrib() error, bad type: \"+type}}}}function _emscripten_glGetVertexAttribIiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"Integer\")}function _emscripten_glGetVertexAttribIuiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"Integer\")}function _emscripten_glGetVertexAttribPointerv(index,pname,pointer){if(!pointer){GL.recordError(1281);return}HEAP32[pointer>>2]=GLctx.getVertexAttribOffset(index,pname)}function _emscripten_glGetVertexAttribfv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"Float\")}function _emscripten_glGetVertexAttribiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"FloatToInteger\")}function _emscripten_glHint(x0,x1){GLctx[\"hint\"](x0,x1)}function _emscripten_glIsBuffer(buffer){var b=GL.buffers[buffer];if(!b)return 0;return GLctx.isBuffer(b)}function _emscripten_glIsEnabled(x0){return GLctx[\"isEnabled\"](x0)}function _emscripten_glIsEnabledi(){err(\"missing function: emscripten_glIsEnabledi\");abort(-1)}function _emscripten_glIsFramebuffer(framebuffer){var fb=GL.framebuffers[framebuffer];if(!fb)return 0;return GLctx.isFramebuffer(fb)}function _emscripten_glIsProgram(program){program=GL.programs[program];if(!program)return 0;return GLctx.isProgram(program)}function _emscripten_glIsRenderbuffer(renderbuffer){var rb=GL.renderbuffers[renderbuffer];if(!rb)return 0;return GLctx.isRenderbuffer(rb)}function _emscripten_glIsShader(shader){var s=GL.shaders[shader];if(!s)return 0;return GLctx.isShader(s)}function _emscripten_glIsTexture(texture){var texture=GL.textures[texture];if(!texture)return 0;return GLctx.isTexture(texture)}function _emscripten_glIsVertexArray(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx[\"isVertexArray\"](vao)}function _emscripten_glLineWidth(x0){GLctx[\"lineWidth\"](x0)}function _emscripten_glLinkProgram(program){GLctx.linkProgram(GL.programs[program]);GL.programInfos[program]=null;GL.populateUniformTable(program)}function _emscripten_glLoadIdentity(){throw\"Legacy GL function (glLoadIdentity) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation.\"}function _emscripten_glLoadMatrixf(){err(\"missing function: emscripten_glLoadMatrixf\");abort(-1)}function _emscripten_glMatrixMode(){throw\"Legacy GL function (glMatrixMode) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation.\"}function _emscripten_glNormalPointer(){err(\"missing function: emscripten_glNormalPointer\");abort(-1)}function _emscripten_glPixelStorei(pname,param){if(pname==3333){GL.packAlignment=param}else if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _emscripten_glPolygonOffset(x0,x1){GLctx[\"polygonOffset\"](x0,x1)}function emscriptenWebGLComputeImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return Math.floor((x+y-1)/y)*y}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height<=0?0:(height-1)*alignedRowSize+plainRowSize}function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var sizePerPixel;var numChannels;switch(format){case 6406:case 6409:case 6402:case 6403:case 36244:numChannels=1;break;case 6410:case 33319:case 33320:numChannels=2;break;case 6407:case 35904:case 36248:numChannels=3;break;case 6408:case 35906:case 36249:numChannels=4;break;default:GL.recordError(1280);return null}switch(type){case 5121:case 5120:sizePerPixel=numChannels*1;break;case 5123:case 36193:case 5131:case 5122:sizePerPixel=numChannels*2;break;case 5125:case 5126:case 5124:sizePerPixel=numChannels*4;break;case 34042:case 35902:case 33640:case 35899:case 34042:sizePerPixel=4;break;case 33635:case 32819:case 32820:sizePerPixel=2;break;default:GL.recordError(1280);return null}var bytes=emscriptenWebGLComputeImageSize(width,height,sizePerPixel,GL.unpackAlignment);switch(type){case 5120:return HEAP8.subarray(pixels,pixels+bytes);case 5121:return HEAPU8.subarray(pixels,pixels+bytes);case 5122:return HEAP16.subarray(pixels>>1,pixels+bytes>>1);case 5124:return HEAP32.subarray(pixels>>2,pixels+bytes>>2);case 5126:return HEAPF32.subarray(pixels>>2,pixels+bytes>>2);case 5125:case 34042:case 35902:case 33640:case 35899:case 34042:return HEAPU32.subarray(pixels>>2,pixels+bytes>>2);case 5123:case 33635:case 32819:case 32820:case 36193:case 5131:return HEAPU16.subarray(pixels>>1,pixels+bytes>>1);default:GL.recordError(1280);return null}}function emscriptenWebGLGetHeapForType(type){switch(type){case 5120:return HEAP8;case 5121:return HEAPU8;case 5122:return HEAP16;case 5123:case 33635:case 32819:case 32820:case 36193:case 5131:return HEAPU16;case 5124:return HEAP32;case 5125:case 34042:case 35902:case 33640:case 35899:case 34042:return HEAPU32;case 5126:return HEAPF32;default:return null}}function emscriptenWebGLGetShiftForType(type){switch(type){case 5120:case 5121:return 0;case 5122:case 5123:case 33635:case 32819:case 32820:case 36193:case 5131:return 1;case 5124:case 5126:case 5125:case 34042:case 35902:case 33640:case 35899:case 34042:return 2;default:return 0}}function _emscripten_glReadPixels(x,y,width,height,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels)}else{GLctx.readPixels(x,y,width,height,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}return}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _emscripten_glReleaseShaderCompiler(){}function _emscripten_glRenderbufferStorage(x0,x1,x2,x3){GLctx[\"renderbufferStorage\"](x0,x1,x2,x3)}function _emscripten_glRotatef(){err(\"missing function: emscripten_glRotatef\");abort(-1)}function _emscripten_glSampleCoverage(value,invert){GLctx.sampleCoverage(value,!!invert)}function _emscripten_glScissor(x0,x1,x2,x3){GLctx[\"scissor\"](x0,x1,x2,x3)}function _emscripten_glShaderBinary(){GL.recordError(1280)}function _emscripten_glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _emscripten_glStencilFunc(x0,x1,x2){GLctx[\"stencilFunc\"](x0,x1,x2)}function _emscripten_glStencilFuncSeparate(x0,x1,x2,x3){GLctx[\"stencilFuncSeparate\"](x0,x1,x2,x3)}function _emscripten_glStencilMask(x0){GLctx[\"stencilMask\"](x0)}function _emscripten_glStencilMaskSeparate(x0,x1){GLctx[\"stencilMaskSeparate\"](x0,x1)}function _emscripten_glStencilOp(x0,x1,x2){GLctx[\"stencilOp\"](x0,x1,x2)}function _emscripten_glStencilOpSeparate(x0,x1,x2,x3){GLctx[\"stencilOpSeparate\"](x0,x1,x2,x3)}function _emscripten_glTexCoordPointer(){err(\"missing function: emscripten_glTexCoordPointer\");abort(-1)}function _emscripten_glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels)}else if(pixels!=0){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixelData)}function _emscripten_glTexImage3D(target,level,internalFormat,width,height,depth,border,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx[\"texImage3D\"](target,level,internalFormat,width,height,depth,border,format,type,pixels)}else if(pixels!=0){GLctx[\"texImage3D\"](target,level,internalFormat,width,height,depth,border,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx[\"texImage3D\"](target,level,internalFormat,width,height,depth,border,format,type,null)}}function _emscripten_glTexParameterIiv(){err(\"missing function: emscripten_glTexParameterIiv\");abort(-1)}function _emscripten_glTexParameterIuiv(){err(\"missing function: emscripten_glTexParameterIuiv\");abort(-1)}function _emscripten_glTexParameterf(x0,x1,x2){GLctx[\"texParameterf\"](x0,x1,x2)}function _emscripten_glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param)}function _emscripten_glTexParameteri(x0,x1,x2){GLctx[\"texParameteri\"](x0,x1,x2)}function _emscripten_glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param)}function _emscripten_glTexStorage2D(x0,x1,x2,x3,x4){GLctx[\"texStorage2D\"](x0,x1,x2,x3,x4)}function _emscripten_glTexStorage3D(x0,x1,x2,x3,x4,x5){GLctx[\"texStorage3D\"](x0,x1,x2,x3,x4,x5)}function _emscripten_glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels)}else if(pixels!=0){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _emscripten_glTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx[\"texSubImage3D\"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels)}else if(pixels!=0){GLctx[\"texSubImage3D\"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx[\"texSubImage3D\"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,null)}}function _emscripten_glTransformFeedbackVaryings(program,count,varyings,bufferMode){program=GL.programs[program];var vars=[];for(var i=0;i<count;i++)vars.push(Pointer_stringify(HEAP32[varyings+i*4>>2]));GLctx[\"transformFeedbackVaryings\"](program,vars,bufferMode)}function _emscripten_glUniform1f(location,v0){GLctx.uniform1f(GL.uniforms[location],v0)}function _emscripten_glUniform1fv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform1fv(GL.uniforms[location],HEAPF32,value>>2,count);return}var view;if(count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[count-1];for(var i=0;i<count;++i){view[i]=HEAPF32[value+4*i>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*4>>2)}GLctx.uniform1fv(GL.uniforms[location],view)}function _emscripten_glUniform1i(location,v0){GLctx.uniform1i(GL.uniforms[location],v0)}function _emscripten_glUniform1iv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform1iv(GL.uniforms[location],HEAP32,value>>2,count);return}GLctx.uniform1iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*4>>2))}function _emscripten_glUniform1ui(location,v0){GLctx.uniform1ui(GL.uniforms[location],v0)}function _emscripten_glUniform2f(location,v0,v1){GLctx.uniform2f(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2fv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform2fv(GL.uniforms[location],HEAPF32,value>>2,count*2);return}var view;if(2*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*8>>2)}GLctx.uniform2fv(GL.uniforms[location],view)}function _emscripten_glUniform2i(location,v0,v1){GLctx.uniform2i(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2iv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform2iv(GL.uniforms[location],HEAP32,value>>2,count*2);return}GLctx.uniform2iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*8>>2))}function _emscripten_glUniform2ui(location,v0,v1){GLctx.uniform2ui(GL.uniforms[location],v0,v1)}function _emscripten_glUniform3f(location,v0,v1,v2){GLctx.uniform3f(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3fv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform3fv(GL.uniforms[location],HEAPF32,value>>2,count*3);return}var view;if(3*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*12>>2)}GLctx.uniform3fv(GL.uniforms[location],view)}function _emscripten_glUniform3i(location,v0,v1,v2){GLctx.uniform3i(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3iv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform3iv(GL.uniforms[location],HEAP32,value>>2,count*3);return}GLctx.uniform3iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*12>>2))}function _emscripten_glUniform3ui(location,v0,v1,v2){GLctx.uniform3ui(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4fv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform4fv(GL.uniforms[location],HEAPF32,value>>2,count*4);return}var view;if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniform4fv(GL.uniforms[location],view)}function _emscripten_glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4iv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform4iv(GL.uniforms[location],HEAP32,value>>2,count*4);return}GLctx.uniform4iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*16>>2))}function _emscripten_glUniform4ui(location,v0,v1,v2,v3){GLctx.uniform4ui(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding){program=GL.programs[program];GLctx[\"uniformBlockBinding\"](program,uniformBlockIndex,uniformBlockBinding)}function _emscripten_glUniformMatrix2fv(location,count,transpose,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniformMatrix2fv(GL.uniforms[location],!!transpose,HEAPF32,value>>2,count*4);return}var view;if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniformMatrix2fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix3fv(location,count,transpose,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniformMatrix3fv(GL.uniforms[location],!!transpose,HEAPF32,value>>2,count*9);return}var view;if(9*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[9*count-1];for(var i=0;i<9*count;i+=9){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*36>>2)}GLctx.uniformMatrix3fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix4fv(location,count,transpose,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniformMatrix4fv(GL.uniforms[location],!!transpose,HEAPF32,value>>2,count*16);return}var view;if(16*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[16*count-1];for(var i=0;i<16*count;i+=16){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2];view[i+9]=HEAPF32[value+(4*i+36)>>2];view[i+10]=HEAPF32[value+(4*i+40)>>2];view[i+11]=HEAPF32[value+(4*i+44)>>2];view[i+12]=HEAPF32[value+(4*i+48)>>2];view[i+13]=HEAPF32[value+(4*i+52)>>2];view[i+14]=HEAPF32[value+(4*i+56)>>2];view[i+15]=HEAPF32[value+(4*i+60)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*64>>2)}GLctx.uniformMatrix4fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUseProgram(program){GLctx.useProgram(program?GL.programs[program]:null)}function _emscripten_glValidateProgram(program){GLctx.validateProgram(GL.programs[program])}function _emscripten_glVertexAttrib1f(x0,x1){GLctx[\"vertexAttrib1f\"](x0,x1)}function _emscripten_glVertexAttrib1fv(index,v){GLctx.vertexAttrib1f(index,HEAPF32[v>>2])}function _emscripten_glVertexAttrib2f(x0,x1,x2){GLctx[\"vertexAttrib2f\"](x0,x1,x2)}function _emscripten_glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2])}function _emscripten_glVertexAttrib3f(x0,x1,x2,x3){GLctx[\"vertexAttrib3f\"](x0,x1,x2,x3)}function _emscripten_glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2])}function _emscripten_glVertexAttrib4f(x0,x1,x2,x3,x4){GLctx[\"vertexAttrib4f\"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2])}function _emscripten_glVertexAttribDivisor(index,divisor){GLctx[\"vertexAttribDivisor\"](index,divisor)}function _emscripten_glVertexAttribI1i(){err(\"missing function: emscripten_glVertexAttribI1i\");abort(-1)}function _emscripten_glVertexAttribI1iv(){err(\"missing function: emscripten_glVertexAttribI1iv\");abort(-1)}function _emscripten_glVertexAttribI1ui(){err(\"missing function: emscripten_glVertexAttribI1ui\");abort(-1)}function _emscripten_glVertexAttribI1uiv(){err(\"missing function: emscripten_glVertexAttribI1uiv\");abort(-1)}function _emscripten_glVertexAttribI2i(){err(\"missing function: emscripten_glVertexAttribI2i\");abort(-1)}function _emscripten_glVertexAttribI2iv(){err(\"missing function: emscripten_glVertexAttribI2iv\");abort(-1)}function _emscripten_glVertexAttribI2ui(){err(\"missing function: emscripten_glVertexAttribI2ui\");abort(-1)}function _emscripten_glVertexAttribI2uiv(){err(\"missing function: emscripten_glVertexAttribI2uiv\");abort(-1)}function _emscripten_glVertexAttribI3i(){err(\"missing function: emscripten_glVertexAttribI3i\");abort(-1)}function _emscripten_glVertexAttribI3iv(){err(\"missing function: emscripten_glVertexAttribI3iv\");abort(-1)}function _emscripten_glVertexAttribI3ui(){err(\"missing function: emscripten_glVertexAttribI3ui\");abort(-1)}function _emscripten_glVertexAttribI3uiv(){err(\"missing function: emscripten_glVertexAttribI3uiv\");abort(-1)}function _emscripten_glVertexAttribI4bv(){err(\"missing function: emscripten_glVertexAttribI4bv\");abort(-1)}function _emscripten_glVertexAttribI4i(x0,x1,x2,x3,x4){GLctx[\"vertexAttribI4i\"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttribI4iv(index,v){GLctx.vertexAttribI4i(index,HEAP32[v>>2],HEAP32[v+4>>2],HEAP32[v+8>>2],HEAP32[v+12>>2])}function _emscripten_glVertexAttribI4sv(){err(\"missing function: emscripten_glVertexAttribI4sv\");abort(-1)}function _emscripten_glVertexAttribI4ubv(){err(\"missing function: emscripten_glVertexAttribI4ubv\");abort(-1)}function _emscripten_glVertexAttribI4ui(x0,x1,x2,x3,x4){GLctx[\"vertexAttribI4ui\"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttribI4uiv(index,v){GLctx.vertexAttribI4ui(index,HEAPU32[v>>2],HEAPU32[v+4>>2],HEAPU32[v+8>>2],HEAPU32[v+12>>2])}function _emscripten_glVertexAttribI4usv(){err(\"missing function: emscripten_glVertexAttribI4usv\");abort(-1)}function _emscripten_glVertexAttribIPointer(index,size,type,stride,ptr){GLctx.vertexAttribIPointer(index,size,type,stride,ptr)}function _emscripten_glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _emscripten_glVertexPointer(){throw\"Legacy GL function (glVertexPointer) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation.\"}function _emscripten_glViewport(x0,x1,x2,x3){GLctx[\"viewport\"](x0,x1,x2,x3)}function _glActiveTexture(x0){GLctx[\"activeTexture\"](x0)}function _glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _glBindBuffer(target,buffer){var bufferObj=buffer?GL.buffers[buffer]:null;if(target==35051){GLctx.currentPixelPackBufferBinding=buffer}else if(target==35052){GLctx.currentPixelUnpackBufferBinding=buffer}GLctx.bindBuffer(target,bufferObj)}function _glBindBufferRange(target,index,buffer,offset,ptrsize){var bufferObj=buffer?GL.buffers[buffer]:null;GLctx[\"bindBufferRange\"](target,index,bufferObj,offset,ptrsize)}function _glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,framebuffer?GL.framebuffers[framebuffer]:null)}function _glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,renderbuffer?GL.renderbuffers[renderbuffer]:null)}function _glBindSampler(unit,sampler){GLctx[\"bindSampler\"](unit,sampler?GL.samplers[sampler]:null)}function _glBindTexture(target,texture){GLctx.bindTexture(target,texture?GL.textures[texture]:null)}function _glBindVertexArray(vao){GLctx[\"bindVertexArray\"](GL.vaos[vao])}function _glBlendEquationSeparate(x0,x1){GLctx[\"blendEquationSeparate\"](x0,x1)}function _glBlendFuncSeparate(x0,x1,x2,x3){GLctx[\"blendFuncSeparate\"](x0,x1,x2,x3)}function _glBlitFramebuffer(x0,x1,x2,x3,x4,x5,x6,x7,x8,x9){GLctx[\"blitFramebuffer\"](x0,x1,x2,x3,x4,x5,x6,x7,x8,x9)}function _glBufferData(target,size,data,usage){if(!data){GLctx.bufferData(target,size,usage)}else{if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.bufferData(target,HEAPU8,usage,data,size);return}GLctx.bufferData(target,HEAPU8.subarray(data,data+size),usage)}}function _glBufferSubData(target,offset,size,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.bufferSubData(target,offset,HEAPU8,data,size);return}GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _glClear(x0){GLctx[\"clear\"](x0)}function _glClearColor(x0,x1,x2,x3){GLctx[\"clearColor\"](x0,x1,x2,x3)}function _glClearDepthf(x0){GLctx[\"clearDepth\"](x0)}function _glClearStencil(x0){GLctx[\"clearStencil\"](x0)}function _glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx[\"compressedTexSubImage2D\"](target,level,xoffset,yoffset,width,height,format,HEAPU8,data,imageSize);return}GLctx[\"compressedTexSubImage2D\"](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null)}function _glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;GL.programs[id]=program;return id}function _glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _glCullFace(x0){GLctx[\"cullFace\"](x0)}function _glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GL.currArrayBuffer)GL.currArrayBuffer=0;if(id==GL.currElementArrayBuffer)GL.currElementArrayBuffer=0}}function _glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;GL.programInfos[id]=null}function _glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _glDeleteSamplers(n,samplers){for(var i=0;i<n;i++){var id=HEAP32[samplers+i*4>>2];var sampler=GL.samplers[id];if(!sampler)continue;GLctx[\"deleteSampler\"](sampler);sampler.name=0;GL.samplers[id]=null}}function _glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _glDeleteSync(id){if(!id)return;var sync=GL.syncs[id];if(!sync){GL.recordError(1281);return}GLctx.deleteSync(sync);sync.name=0;GL.syncs[id]=null}function _glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx[\"deleteVertexArray\"](GL.vaos[id]);GL.vaos[id]=null}}function _glDepthFunc(x0){GLctx[\"depthFunc\"](x0)}function _glDepthMask(flag){GLctx.depthMask(!!flag)}function _glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _glDisable(x0){GLctx[\"disable\"](x0)}function _glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _glDrawRangeElements(mode,start,end,count,type,indices){_emscripten_glDrawElements(mode,count,type,indices)}function _glEnable(x0){GLctx[\"enable\"](x0)}function _glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _glFenceSync(condition,flags){var sync=GLctx.fenceSync(condition,flags);if(sync){var id=GL.getNewId(GL.syncs);sync.name=id;GL.syncs[id]=sync;return id}else{return 0}}function _glFlush(){GLctx[\"flush\"]()}function _glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _glFrontFace(x0){GLctx[\"frontFace\"](x0)}function _glGenBuffers(n,buffers){for(var i=0;i<n;i++){var buffer=GLctx.createBuffer();if(!buffer){GL.recordError(1282);while(i<n)HEAP32[buffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.buffers);buffer.name=id;GL.buffers[id]=buffer;HEAP32[buffers+i*4>>2]=id}}function _glGenFramebuffers(n,ids){for(var i=0;i<n;++i){var framebuffer=GLctx.createFramebuffer();if(!framebuffer){GL.recordError(1282);while(i<n)HEAP32[ids+i++*4>>2]=0;return}var id=GL.getNewId(GL.framebuffers);framebuffer.name=id;GL.framebuffers[id]=framebuffer;HEAP32[ids+i*4>>2]=id}}function _glGenRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var renderbuffer=GLctx.createRenderbuffer();if(!renderbuffer){GL.recordError(1282);while(i<n)HEAP32[renderbuffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.renderbuffers);renderbuffer.name=id;GL.renderbuffers[id]=renderbuffer;HEAP32[renderbuffers+i*4>>2]=id}}function _glGenSamplers(n,samplers){for(var i=0;i<n;i++){var sampler=GLctx[\"createSampler\"]();if(!sampler){GL.recordError(1282);while(i<n)HEAP32[samplers+i++*4>>2]=0;return}var id=GL.getNewId(GL.samplers);sampler.name=id;GL.samplers[id]=sampler;HEAP32[samplers+i*4>>2]=id}}function _glGenTextures(n,textures){for(var i=0;i<n;i++){var texture=GLctx.createTexture();if(!texture){GL.recordError(1282);while(i<n)HEAP32[textures+i++*4>>2]=0;return}var id=GL.getNewId(GL.textures);texture.name=id;GL.textures[id]=texture;HEAP32[textures+i*4>>2]=id}}function _glGenVertexArrays(n,arrays){for(var i=0;i<n;i++){var vao=GLctx[\"createVertexArray\"]();if(!vao){GL.recordError(1282);while(i<n)HEAP32[arrays+i++*4>>2]=0;return}var id=GL.getNewId(GL.vaos);vao.name=id;GL.vaos[id]=vao;HEAP32[arrays+i*4>>2]=id}}function _glGenerateMipmap(x0){GLctx[\"generateMipmap\"](x0)}function _glGetError(){if(GL.lastError){var error=GL.lastError;GL.lastError=0;return error}else{return GLctx.getError()}}function _glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,\"Float\")}function _glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,\"Integer\")}function _glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}var ptable=GL.programInfos[program];if(!ptable){GL.recordError(1282);return}if(pname==35716){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35719){HEAP32[p>>2]=ptable.maxUniformLength}else if(pname==35722){if(ptable.maxAttributeLength==-1){program=GL.programs[program];var numAttribs=GLctx.getProgramParameter(program,GLctx.ACTIVE_ATTRIBUTES);ptable.maxAttributeLength=0;for(var i=0;i<numAttribs;++i){var activeAttrib=GLctx.getActiveAttrib(program,i);ptable.maxAttributeLength=Math.max(ptable.maxAttributeLength,activeAttrib.name.length+1)}}HEAP32[p>>2]=ptable.maxAttributeLength}else if(pname==35381){if(ptable.maxUniformBlockNameLength==-1){program=GL.programs[program];var numBlocks=GLctx.getProgramParameter(program,GLctx.ACTIVE_UNIFORM_BLOCKS);ptable.maxUniformBlockNameLength=0;for(var i=0;i<numBlocks;++i){var activeBlockName=GLctx.getActiveUniformBlockName(program,i);ptable.maxUniformBlockNameLength=Math.max(ptable.maxUniformBlockNameLength,activeBlockName.length+1)}}HEAP32[p>>2]=ptable.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(GL.programs[program],pname)}}function _glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source===null||source.length==0?0:source.length+1;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function _glGetString(name_){if(GL.stringCache[name_])return GL.stringCache[name_];var ret;switch(name_){case 7936:case 7937:case 37445:case 37446:ret=allocate(intArrayFromString(GLctx.getParameter(name_)),\"i8\",ALLOC_NORMAL);break;case 7938:var glVersion=GLctx.getParameter(GLctx.VERSION);if(GLctx.canvas.GLctxObject.version>=2)glVersion=\"OpenGL ES 3.0 (\"+glVersion+\")\";else{glVersion=\"OpenGL ES 2.0 (\"+glVersion+\")\"}ret=allocate(intArrayFromString(glVersion),\"i8\",ALLOC_NORMAL);break;case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(exts[i]);gl_exts.push(\"GL_\"+exts[i])}ret=allocate(intArrayFromString(gl_exts.join(\" \")),\"i8\",ALLOC_NORMAL);break;case 35724:var glslVersion=GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);var ver_re=/^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+\"0\";glslVersion=\"OpenGL ES GLSL ES \"+ver_num[1]+\" (\"+glslVersion+\")\"}ret=allocate(intArrayFromString(glslVersion),\"i8\",ALLOC_NORMAL);break;default:GL.recordError(1280);return 0}GL.stringCache[name_]=ret;return ret}function _glGetStringi(name,index){if(GLctx.canvas.GLctxObject.version<2){GL.recordError(1282);return 0}var stringiCache=GL.stringiCache[name];if(stringiCache){if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index]}switch(name){case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(allocate(intArrayFromString(exts[i]),\"i8\",ALLOC_NORMAL));gl_exts.push(allocate(intArrayFromString(\"GL_\"+exts[i]),\"i8\",ALLOC_NORMAL))}stringiCache=GL.stringiCache[name]=gl_exts;if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index];default:GL.recordError(1280);return 0}}function _glGetUniformBlockIndex(program,uniformBlockName){program=GL.programs[program];uniformBlockName=Pointer_stringify(uniformBlockName);return GLctx[\"getUniformBlockIndex\"](program,uniformBlockName)}function _glGetUniformLocation(program,name){name=Pointer_stringify(name);var arrayOffset=0;if(name.indexOf(\"]\",name.length-1)!==-1){var ls=name.lastIndexOf(\"[\");var arrayIndex=name.slice(ls+1,-1);if(arrayIndex.length>0){arrayOffset=parseInt(arrayIndex);if(arrayOffset<0){return-1}}name=name.slice(0,ls)}var ptable=GL.programInfos[program];if(!ptable){return-1}var utable=ptable.uniforms;var uniformInfo=utable[name];if(uniformInfo&&arrayOffset<uniformInfo[0]){return uniformInfo[1]+arrayOffset}else{return-1}}function _glGetVertexAttribiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"FloatToInteger\")}function _glHint(x0,x1){GLctx[\"hint\"](x0,x1)}function _glInvalidateFramebuffer(target,numAttachments,attachments){var list=GL.tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2]}GLctx[\"invalidateFramebuffer\"](target,list)}function _glInvalidateSubFramebuffer(target,numAttachments,attachments,x,y,width,height){var list=GL.tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2]}GLctx[\"invalidateSubFramebuffer\"](target,list,x,y,width,height)}function _glIsEnabled(x0){return GLctx[\"isEnabled\"](x0)}function _glLinkProgram(program){GLctx.linkProgram(GL.programs[program]);GL.programInfos[program]=null;GL.populateUniformTable(program)}function _glPixelStorei(pname,param){if(pname==3333){GL.packAlignment=param}else if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _glPolygonOffset(x0,x1){GLctx[\"polygonOffset\"](x0,x1)}function _glReadPixels(x,y,width,height,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels)}else{GLctx.readPixels(x,y,width,height,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}return}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _glRenderbufferStorage(x0,x1,x2,x3){GLctx[\"renderbufferStorage\"](x0,x1,x2,x3)}function _glRenderbufferStorageMultisample(x0,x1,x2,x3,x4){GLctx[\"renderbufferStorageMultisample\"](x0,x1,x2,x3,x4)}function _glSamplerParameteri(sampler,pname,param){GLctx[\"samplerParameteri\"](sampler?GL.samplers[sampler]:null,pname,param)}function _glScissor(x0,x1,x2,x3){GLctx[\"scissor\"](x0,x1,x2,x3)}function _glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _glTexParameteri(x0,x1,x2){GLctx[\"texParameteri\"](x0,x1,x2)}function _glTexStorage2D(x0,x1,x2,x3,x4){GLctx[\"texStorage2D\"](x0,x1,x2,x3,x4)}function _glTexStorage2DMultisample(){err(\"missing function: glTexStorage2DMultisample\");abort(-1)}function _glTexStorage3D(x0,x1,x2,x3,x4,x5){GLctx[\"texStorage3D\"](x0,x1,x2,x3,x4,x5)}function _glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels)}else if(pixels!=0){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _glUniform1f(location,v0){GLctx.uniform1f(GL.uniforms[location],v0)}function _glUniform1i(location,v0){GLctx.uniform1i(GL.uniforms[location],v0)}function _glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(GL.uniforms[location],v0,v1,v2,v3)}function _glUniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding){program=GL.programs[program];GLctx[\"uniformBlockBinding\"](program,uniformBlockIndex,uniformBlockBinding)}function _glUseProgram(program){GLctx.useProgram(program?GL.programs[program]:null)}function _glVertexAttribIPointer(index,size,type,stride,ptr){GLctx.vertexAttribIPointer(index,size,type,stride,ptr)}function _glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _glViewport(x0,x1,x2,x3){GLctx[\"viewport\"](x0,x1,x2,x3)}function _glWaitSync(sync,flags,timeoutLo,timeoutHi){timeoutLo=timeoutLo>>>0;timeoutHi=timeoutHi>>>0;var timeout=timeoutLo==4294967295&&timeoutHi==4294967295?-1:makeBigInt(timeoutLo,timeoutHi,true);GLctx.waitSync(GL.syncs[sync],flags,timeout)}var _llvm_ceil_f32=Math_ceil;function _llvm_cttz_i32(x){x=x|0;return(x?31-(Math_clz32(x^x-1)|0)|0:32)|0}function _llvm_cttz_i64(l,h){var ret=_llvm_cttz_i32(l);if(ret==32)ret+=_llvm_cttz_i32(h);return(setTempRet0(0),ret)|0}function _llvm_exp2_f32(x){return Math.pow(2,x)}function _llvm_exp2_f64(){return _llvm_exp2_f32.apply(null,arguments)}var _llvm_fabs_f32=Math_abs;var _llvm_floor_f32=Math_floor;function _llvm_log2_f32(x){return Math.log(x)/Math.LN2}function _llvm_trap(){abort(\"trap!\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function _pthread_cond_destroy(){return 0}function _pthread_cond_signal(){return 0}function _pthread_cond_timedwait(){return 0}function _pthread_cond_wait(){return 0}function _pthread_create(){return 11}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}function _pthread_join(){}var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_mutex_destroy(){}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:var maxHeapSize=2*1024*1024*1024-65536;return maxHeapSize/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}FS.staticInit();__ATINIT__.unshift((function(){if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var NODEJS_PATH=require(\"path\");NODEFS.staticInit()}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function _emscripten_get_now_actual(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now=dateNow}else if(typeof self===\"object\"&&self[\"performance\"]&&typeof self[\"performance\"][\"now\"]===\"function\"){_emscripten_get_now=(function(){return self[\"performance\"][\"now\"]()})}else if(typeof performance===\"object\"&&typeof performance[\"now\"]===\"function\"){_emscripten_get_now=(function(){return performance[\"now\"]()})}else{_emscripten_get_now=Date.now}Module[\"requestFullScreen\"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){err(\"Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.\");Module[\"requestFullScreen\"]=Module[\"requestFullscreen\"];Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module[\"requestFullscreen\"]=function Module_requestFullscreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)};Module[\"requestAnimationFrame\"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module[\"setCanvasSize\"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module[\"pauseMainLoop\"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module[\"resumeMainLoop\"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module[\"getUserMedia\"]=function Module_getUserMedia(){Browser.getUserMedia()};Module[\"createContext\"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};var GLctx;GL.init();DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module[\"wasmTableSize\"]=1252;Module[\"wasmMaxTableSize\"]=1252;function invoke_fi(index,a1){var sp=stackSave();try{return Module[\"dynCall_fi\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_fii(index,a1,a2){var sp=stackSave();try{return Module[\"dynCall_fii\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_i(index){var sp=stackSave();try{return Module[\"dynCall_i\"](index)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_ii(index,a1){var sp=stackSave();try{return Module[\"dynCall_ii\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iif(index,a1,a2){var sp=stackSave();try{return Module[\"dynCall_iif\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiff(index,a1,a2,a3){var sp=stackSave();try{return Module[\"dynCall_iiff\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iii(index,a1,a2){var sp=stackSave();try{return Module[\"dynCall_iii\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiif(index,a1,a2,a3){var sp=stackSave();try{return Module[\"dynCall_iiif\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiff(index,a1,a2,a3,a4){var sp=stackSave();try{return Module[\"dynCall_iiiff\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return Module[\"dynCall_iiii\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return Module[\"dynCall_iiiii\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return Module[\"dynCall_iiiiii\"](index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return Module[\"dynCall_iiiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return Module[\"dynCall_iiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiij(index,a1,a2,a3,a4){var sp=stackSave();try{return Module[\"dynCall_iiij\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_jii(index,a1,a2){var sp=stackSave();try{return Module[\"dynCall_jii\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_v(index){var sp=stackSave();try{Module[\"dynCall_v\"](index)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vd(index,a1){var sp=stackSave();try{Module[\"dynCall_vd\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vdd(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vdd\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vdddddd(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{Module[\"dynCall_vdddddd\"](index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vf(index,a1){var sp=stackSave();try{Module[\"dynCall_vf\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vff(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vff\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vffff(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_vffff\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vfi(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vfi\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{Module[\"dynCall_vi\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viddddi(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{Module[\"dynCall_viddddi\"](index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vif(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vif\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viff(index,a1,a2,a3){var sp=stackSave();try{Module[\"dynCall_viff\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vifff(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_vifff\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viffff(index,a1,a2,a3,a4,a5){var sp=stackSave();try{Module[\"dynCall_viffff\"](index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vii\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viidddddd(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{Module[\"dynCall_viidddddd\"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiddddi(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{Module[\"dynCall_viiddddi\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viif(index,a1,a2,a3){var sp=stackSave();try{Module[\"dynCall_viif\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiff(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_viiff\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viifff(index,a1,a2,a3,a4,a5){var sp=stackSave();try{Module[\"dynCall_viifff\"](index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viifi(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_viifi\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{Module[\"dynCall_viii\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiidddddd(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{Module[\"dynCall_viiidddddd\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiif(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_viiif\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_viiii\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{Module[\"dynCall_viiiii\"](index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{Module[\"dynCall_viiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{Module[\"dynCall_viiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{Module[\"dynCall_viiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{Module[\"dynCall_viiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{Module[\"dynCall_viiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{Module[\"dynCall_viiiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vij(index,a1,a2,a3){var sp=stackSave();try{Module[\"dynCall_vij\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}Module.asmGlobalArg={};Module.asmLibraryArg={\"abort\":abort,\"assert\":assert,\"enlargeMemory\":enlargeMemory,\"getTotalMemory\":getTotalMemory,\"abortOnCannotGrowMemory\":abortOnCannotGrowMemory,\"invoke_fi\":invoke_fi,\"invoke_fii\":invoke_fii,\"invoke_i\":invoke_i,\"invoke_ii\":invoke_ii,\"invoke_iif\":invoke_iif,\"invoke_iiff\":invoke_iiff,\"invoke_iii\":invoke_iii,\"invoke_iiif\":invoke_iiif,\"invoke_iiiff\":invoke_iiiff,\"invoke_iiii\":invoke_iiii,\"invoke_iiiii\":invoke_iiiii,\"invoke_iiiiii\":invoke_iiiiii,\"invoke_iiiiiii\":invoke_iiiiiii,\"invoke_iiiiiiii\":invoke_iiiiiiii,\"invoke_iiij\":invoke_iiij,\"invoke_jii\":invoke_jii,\"invoke_v\":invoke_v,\"invoke_vd\":invoke_vd,\"invoke_vdd\":invoke_vdd,\"invoke_vdddddd\":invoke_vdddddd,\"invoke_vf\":invoke_vf,\"invoke_vff\":invoke_vff,\"invoke_vffff\":invoke_vffff,\"invoke_vfi\":invoke_vfi,\"invoke_vi\":invoke_vi,\"invoke_viddddi\":invoke_viddddi,\"invoke_vif\":invoke_vif,\"invoke_viff\":invoke_viff,\"invoke_vifff\":invoke_vifff,\"invoke_viffff\":invoke_viffff,\"invoke_vii\":invoke_vii,\"invoke_viidddddd\":invoke_viidddddd,\"invoke_viiddddi\":invoke_viiddddi,\"invoke_viif\":invoke_viif,\"invoke_viiff\":invoke_viiff,\"invoke_viifff\":invoke_viifff,\"invoke_viifi\":invoke_viifi,\"invoke_viii\":invoke_viii,\"invoke_viiidddddd\":invoke_viiidddddd,\"invoke_viiif\":invoke_viiif,\"invoke_viiii\":invoke_viiii,\"invoke_viiiii\":invoke_viiiii,\"invoke_viiiiii\":invoke_viiiiii,\"invoke_viiiiiii\":invoke_viiiiiii,\"invoke_viiiiiiii\":invoke_viiiiiiii,\"invoke_viiiiiiiii\":invoke_viiiiiiiii,\"invoke_viiiiiiiiii\":invoke_viiiiiiiiii,\"invoke_viiiiiiiiiii\":invoke_viiiiiiiiiii,\"invoke_vij\":invoke_vij,\"ClassHandle\":ClassHandle,\"ClassHandle_clone\":ClassHandle_clone,\"ClassHandle_delete\":ClassHandle_delete,\"ClassHandle_deleteLater\":ClassHandle_deleteLater,\"ClassHandle_isAliasOf\":ClassHandle_isAliasOf,\"ClassHandle_isDeleted\":ClassHandle_isDeleted,\"RegisteredClass\":RegisteredClass,\"RegisteredPointer\":RegisteredPointer,\"RegisteredPointer_deleteObject\":RegisteredPointer_deleteObject,\"RegisteredPointer_destructor\":RegisteredPointer_destructor,\"RegisteredPointer_fromWireType\":RegisteredPointer_fromWireType,\"RegisteredPointer_getPointee\":RegisteredPointer_getPointee,\"__ZSt18uncaught_exceptionv\":__ZSt18uncaught_exceptionv,\"___atomic_compare_exchange_8\":___atomic_compare_exchange_8,\"___cxa_begin_catch\":___cxa_begin_catch,\"___cxa_find_matching_catch\":___cxa_find_matching_catch,\"___cxa_pure_virtual\":___cxa_pure_virtual,\"___gxx_personality_v0\":___gxx_personality_v0,\"___resumeException\":___resumeException,\"___setErrNo\":___setErrNo,\"___syscall140\":___syscall140,\"___syscall146\":___syscall146,\"___syscall221\":___syscall221,\"___syscall3\":___syscall3,\"___syscall5\":___syscall5,\"___syscall54\":___syscall54,\"___syscall6\":___syscall6,\"__embind_finalize_value_array\":__embind_finalize_value_array,\"__embind_register_bool\":__embind_register_bool,\"__embind_register_class\":__embind_register_class,\"__embind_register_class_class_function\":__embind_register_class_class_function,\"__embind_register_class_constructor\":__embind_register_class_constructor,\"__embind_register_class_function\":__embind_register_class_function,\"__embind_register_class_property\":__embind_register_class_property,\"__embind_register_emval\":__embind_register_emval,\"__embind_register_enum\":__embind_register_enum,\"__embind_register_enum_value\":__embind_register_enum_value,\"__embind_register_float\":__embind_register_float,\"__embind_register_function\":__embind_register_function,\"__embind_register_integer\":__embind_register_integer,\"__embind_register_memory_view\":__embind_register_memory_view,\"__embind_register_std_string\":__embind_register_std_string,\"__embind_register_std_wstring\":__embind_register_std_wstring,\"__embind_register_value_array\":__embind_register_value_array,\"__embind_register_value_array_element\":__embind_register_value_array_element,\"__embind_register_void\":__embind_register_void,\"__emval_as\":__emval_as,\"__emval_decref\":__emval_decref,\"__emval_get_property\":__emval_get_property,\"__emval_incref\":__emval_incref,\"__emval_new_cstring\":__emval_new_cstring,\"__emval_register\":__emval_register,\"__emval_run_destructors\":__emval_run_destructors,\"__emval_take_value\":__emval_take_value,\"_abort\":_abort,\"_clock_gettime\":_clock_gettime,\"_eglGetProcAddress\":_eglGetProcAddress,\"_embind_repr\":_embind_repr,\"_emscripten_get_now\":_emscripten_get_now,\"_emscripten_get_now_is_monotonic\":_emscripten_get_now_is_monotonic,\"_emscripten_glActiveTexture\":_emscripten_glActiveTexture,\"_emscripten_glAttachShader\":_emscripten_glAttachShader,\"_emscripten_glBeginConditionalRender\":_emscripten_glBeginConditionalRender,\"_emscripten_glBeginTransformFeedback\":_emscripten_glBeginTransformFeedback,\"_emscripten_glBindAttribLocation\":_emscripten_glBindAttribLocation,\"_emscripten_glBindBuffer\":_emscripten_glBindBuffer,\"_emscripten_glBindBufferBase\":_emscripten_glBindBufferBase,\"_emscripten_glBindBufferRange\":_emscripten_glBindBufferRange,\"_emscripten_glBindFragDataLocation\":_emscripten_glBindFragDataLocation,\"_emscripten_glBindFramebuffer\":_emscripten_glBindFramebuffer,\"_emscripten_glBindProgramARB\":_emscripten_glBindProgramARB,\"_emscripten_glBindRenderbuffer\":_emscripten_glBindRenderbuffer,\"_emscripten_glBindTexture\":_emscripten_glBindTexture,\"_emscripten_glBindVertexArray\":_emscripten_glBindVertexArray,\"_emscripten_glBlendColor\":_emscripten_glBlendColor,\"_emscripten_glBlendEquation\":_emscripten_glBlendEquation,\"_emscripten_glBlendEquationSeparate\":_emscripten_glBlendEquationSeparate,\"_emscripten_glBlendFunc\":_emscripten_glBlendFunc,\"_emscripten_glBlendFuncSeparate\":_emscripten_glBlendFuncSeparate,\"_emscripten_glBufferData\":_emscripten_glBufferData,\"_emscripten_glBufferSubData\":_emscripten_glBufferSubData,\"_emscripten_glCheckFramebufferStatus\":_emscripten_glCheckFramebufferStatus,\"_emscripten_glClampColor\":_emscripten_glClampColor,\"_emscripten_glClear\":_emscripten_glClear,\"_emscripten_glClearBufferfi\":_emscripten_glClearBufferfi,\"_emscripten_glClearBufferfv\":_emscripten_glClearBufferfv,\"_emscripten_glClearBufferiv\":_emscripten_glClearBufferiv,\"_emscripten_glClearBufferuiv\":_emscripten_glClearBufferuiv,\"_emscripten_glClearColor\":_emscripten_glClearColor,\"_emscripten_glClearDepth\":_emscripten_glClearDepth,\"_emscripten_glClearDepthf\":_emscripten_glClearDepthf,\"_emscripten_glClearStencil\":_emscripten_glClearStencil,\"_emscripten_glClientActiveTexture\":_emscripten_glClientActiveTexture,\"_emscripten_glColorMask\":_emscripten_glColorMask,\"_emscripten_glColorMaski\":_emscripten_glColorMaski,\"_emscripten_glColorPointer\":_emscripten_glColorPointer,\"_emscripten_glCompileShader\":_emscripten_glCompileShader,\"_emscripten_glCompressedTexImage2D\":_emscripten_glCompressedTexImage2D,\"_emscripten_glCompressedTexSubImage2D\":_emscripten_glCompressedTexSubImage2D,\"_emscripten_glCopyTexImage2D\":_emscripten_glCopyTexImage2D,\"_emscripten_glCopyTexSubImage2D\":_emscripten_glCopyTexSubImage2D,\"_emscripten_glCreateProgram\":_emscripten_glCreateProgram,\"_emscripten_glCreateShader\":_emscripten_glCreateShader,\"_emscripten_glCullFace\":_emscripten_glCullFace,\"_emscripten_glDeleteBuffers\":_emscripten_glDeleteBuffers,\"_emscripten_glDeleteFramebuffers\":_emscripten_glDeleteFramebuffers,\"_emscripten_glDeleteObjectARB\":_emscripten_glDeleteObjectARB,\"_emscripten_glDeleteProgram\":_emscripten_glDeleteProgram,\"_emscripten_glDeleteRenderbuffers\":_emscripten_glDeleteRenderbuffers,\"_emscripten_glDeleteShader\":_emscripten_glDeleteShader,\"_emscripten_glDeleteTextures\":_emscripten_glDeleteTextures,\"_emscripten_glDeleteVertexArrays\":_emscripten_glDeleteVertexArrays,\"_emscripten_glDepthFunc\":_emscripten_glDepthFunc,\"_emscripten_glDepthMask\":_emscripten_glDepthMask,\"_emscripten_glDepthRange\":_emscripten_glDepthRange,\"_emscripten_glDepthRangef\":_emscripten_glDepthRangef,\"_emscripten_glDetachShader\":_emscripten_glDetachShader,\"_emscripten_glDisable\":_emscripten_glDisable,\"_emscripten_glDisableVertexAttribArray\":_emscripten_glDisableVertexAttribArray,\"_emscripten_glDisablei\":_emscripten_glDisablei,\"_emscripten_glDrawArrays\":_emscripten_glDrawArrays,\"_emscripten_glDrawArraysInstanced\":_emscripten_glDrawArraysInstanced,\"_emscripten_glDrawBuffers\":_emscripten_glDrawBuffers,\"_emscripten_glDrawElements\":_emscripten_glDrawElements,\"_emscripten_glDrawElementsInstanced\":_emscripten_glDrawElementsInstanced,\"_emscripten_glDrawRangeElements\":_emscripten_glDrawRangeElements,\"_emscripten_glEnable\":_emscripten_glEnable,\"_emscripten_glEnableClientState\":_emscripten_glEnableClientState,\"_emscripten_glEnableVertexAttribArray\":_emscripten_glEnableVertexAttribArray,\"_emscripten_glEnablei\":_emscripten_glEnablei,\"_emscripten_glEndConditionalRender\":_emscripten_glEndConditionalRender,\"_emscripten_glEndTransformFeedback\":_emscripten_glEndTransformFeedback,\"_emscripten_glFinish\":_emscripten_glFinish,\"_emscripten_glFlush\":_emscripten_glFlush,\"_emscripten_glFramebufferRenderbuffer\":_emscripten_glFramebufferRenderbuffer,\"_emscripten_glFramebufferTexture2D\":_emscripten_glFramebufferTexture2D,\"_emscripten_glFrontFace\":_emscripten_glFrontFace,\"_emscripten_glFrustum\":_emscripten_glFrustum,\"_emscripten_glGenBuffers\":_emscripten_glGenBuffers,\"_emscripten_glGenFramebuffers\":_emscripten_glGenFramebuffers,\"_emscripten_glGenRenderbuffers\":_emscripten_glGenRenderbuffers,\"_emscripten_glGenTextures\":_emscripten_glGenTextures,\"_emscripten_glGenVertexArrays\":_emscripten_glGenVertexArrays,\"_emscripten_glGenerateMipmap\":_emscripten_glGenerateMipmap,\"_emscripten_glGetActiveAttrib\":_emscripten_glGetActiveAttrib,\"_emscripten_glGetActiveUniform\":_emscripten_glGetActiveUniform,\"_emscripten_glGetActiveUniformBlockName\":_emscripten_glGetActiveUniformBlockName,\"_emscripten_glGetActiveUniformBlockiv\":_emscripten_glGetActiveUniformBlockiv,\"_emscripten_glGetActiveUniformName\":_emscripten_glGetActiveUniformName,\"_emscripten_glGetActiveUniformsiv\":_emscripten_glGetActiveUniformsiv,\"_emscripten_glGetAttachedShaders\":_emscripten_glGetAttachedShaders,\"_emscripten_glGetAttribLocation\":_emscripten_glGetAttribLocation,\"_emscripten_glGetBooleani_v\":_emscripten_glGetBooleani_v,\"_emscripten_glGetBooleanv\":_emscripten_glGetBooleanv,\"_emscripten_glGetBufferParameteriv\":_emscripten_glGetBufferParameteriv,\"_emscripten_glGetError\":_emscripten_glGetError,\"_emscripten_glGetFloatv\":_emscripten_glGetFloatv,\"_emscripten_glGetFragDataLocation\":_emscripten_glGetFragDataLocation,\"_emscripten_glGetFramebufferAttachmentParameteriv\":_emscripten_glGetFramebufferAttachmentParameteriv,\"_emscripten_glGetInfoLogARB\":_emscripten_glGetInfoLogARB,\"_emscripten_glGetIntegeri_v\":_emscripten_glGetIntegeri_v,\"_emscripten_glGetIntegerv\":_emscripten_glGetIntegerv,\"_emscripten_glGetObjectParameterivARB\":_emscripten_glGetObjectParameterivARB,\"_emscripten_glGetPointerv\":_emscripten_glGetPointerv,\"_emscripten_glGetProgramInfoLog\":_emscripten_glGetProgramInfoLog,\"_emscripten_glGetProgramiv\":_emscripten_glGetProgramiv,\"_emscripten_glGetRenderbufferParameteriv\":_emscripten_glGetRenderbufferParameteriv,\"_emscripten_glGetShaderInfoLog\":_emscripten_glGetShaderInfoLog,\"_emscripten_glGetShaderPrecisionFormat\":_emscripten_glGetShaderPrecisionFormat,\"_emscripten_glGetShaderSource\":_emscripten_glGetShaderSource,\"_emscripten_glGetShaderiv\":_emscripten_glGetShaderiv,\"_emscripten_glGetString\":_emscripten_glGetString,\"_emscripten_glGetStringi\":_emscripten_glGetStringi,\"_emscripten_glGetTexParameterIiv\":_emscripten_glGetTexParameterIiv,\"_emscripten_glGetTexParameterIuiv\":_emscripten_glGetTexParameterIuiv,\"_emscripten_glGetTexParameterfv\":_emscripten_glGetTexParameterfv,\"_emscripten_glGetTexParameteriv\":_emscripten_glGetTexParameteriv,\"_emscripten_glGetTransformFeedbackVarying\":_emscripten_glGetTransformFeedbackVarying,\"_emscripten_glGetUniformBlockIndex\":_emscripten_glGetUniformBlockIndex,\"_emscripten_glGetUniformIndices\":_emscripten_glGetUniformIndices,\"_emscripten_glGetUniformLocation\":_emscripten_glGetUniformLocation,\"_emscripten_glGetUniformfv\":_emscripten_glGetUniformfv,\"_emscripten_glGetUniformiv\":_emscripten_glGetUniformiv,\"_emscripten_glGetUniformuiv\":_emscripten_glGetUniformuiv,\"_emscripten_glGetVertexAttribIiv\":_emscripten_glGetVertexAttribIiv,\"_emscripten_glGetVertexAttribIuiv\":_emscripten_glGetVertexAttribIuiv,\"_emscripten_glGetVertexAttribPointerv\":_emscripten_glGetVertexAttribPointerv,\"_emscripten_glGetVertexAttribfv\":_emscripten_glGetVertexAttribfv,\"_emscripten_glGetVertexAttribiv\":_emscripten_glGetVertexAttribiv,\"_emscripten_glHint\":_emscripten_glHint,\"_emscripten_glIsBuffer\":_emscripten_glIsBuffer,\"_emscripten_glIsEnabled\":_emscripten_glIsEnabled,\"_emscripten_glIsEnabledi\":_emscripten_glIsEnabledi,\"_emscripten_glIsFramebuffer\":_emscripten_glIsFramebuffer,\"_emscripten_glIsProgram\":_emscripten_glIsProgram,\"_emscripten_glIsRenderbuffer\":_emscripten_glIsRenderbuffer,\"_emscripten_glIsShader\":_emscripten_glIsShader,\"_emscripten_glIsTexture\":_emscripten_glIsTexture,\"_emscripten_glIsVertexArray\":_emscripten_glIsVertexArray,\"_emscripten_glLineWidth\":_emscripten_glLineWidth,\"_emscripten_glLinkProgram\":_emscripten_glLinkProgram,\"_emscripten_glLoadIdentity\":_emscripten_glLoadIdentity,\"_emscripten_glLoadMatrixf\":_emscripten_glLoadMatrixf,\"_emscripten_glMatrixMode\":_emscripten_glMatrixMode,\"_emscripten_glNormalPointer\":_emscripten_glNormalPointer,\"_emscripten_glPixelStorei\":_emscripten_glPixelStorei,\"_emscripten_glPolygonOffset\":_emscripten_glPolygonOffset,\"_emscripten_glReadPixels\":_emscripten_glReadPixels,\"_emscripten_glReleaseShaderCompiler\":_emscripten_glReleaseShaderCompiler,\"_emscripten_glRenderbufferStorage\":_emscripten_glRenderbufferStorage,\"_emscripten_glRotatef\":_emscripten_glRotatef,\"_emscripten_glSampleCoverage\":_emscripten_glSampleCoverage,\"_emscripten_glScissor\":_emscripten_glScissor,\"_emscripten_glShaderBinary\":_emscripten_glShaderBinary,\"_emscripten_glShaderSource\":_emscripten_glShaderSource,\"_emscripten_glStencilFunc\":_emscripten_glStencilFunc,\"_emscripten_glStencilFuncSeparate\":_emscripten_glStencilFuncSeparate,\"_emscripten_glStencilMask\":_emscripten_glStencilMask,\"_emscripten_glStencilMaskSeparate\":_emscripten_glStencilMaskSeparate,\"_emscripten_glStencilOp\":_emscripten_glStencilOp,\"_emscripten_glStencilOpSeparate\":_emscripten_glStencilOpSeparate,\"_emscripten_glTexCoordPointer\":_emscripten_glTexCoordPointer,\"_emscripten_glTexImage2D\":_emscripten_glTexImage2D,\"_emscripten_glTexImage3D\":_emscripten_glTexImage3D,\"_emscripten_glTexParameterIiv\":_emscripten_glTexParameterIiv,\"_emscripten_glTexParameterIuiv\":_emscripten_glTexParameterIuiv,\"_emscripten_glTexParameterf\":_emscripten_glTexParameterf,\"_emscripten_glTexParameterfv\":_emscripten_glTexParameterfv,\"_emscripten_glTexParameteri\":_emscripten_glTexParameteri,\"_emscripten_glTexParameteriv\":_emscripten_glTexParameteriv,\"_emscripten_glTexStorage2D\":_emscripten_glTexStorage2D,\"_emscripten_glTexStorage3D\":_emscripten_glTexStorage3D,\"_emscripten_glTexSubImage2D\":_emscripten_glTexSubImage2D,\"_emscripten_glTexSubImage3D\":_emscripten_glTexSubImage3D,\"_emscripten_glTransformFeedbackVaryings\":_emscripten_glTransformFeedbackVaryings,\"_emscripten_glUniform1f\":_emscripten_glUniform1f,\"_emscripten_glUniform1fv\":_emscripten_glUniform1fv,\"_emscripten_glUniform1i\":_emscripten_glUniform1i,\"_emscripten_glUniform1iv\":_emscripten_glUniform1iv,\"_emscripten_glUniform1ui\":_emscripten_glUniform1ui,\"_emscripten_glUniform2f\":_emscripten_glUniform2f,\"_emscripten_glUniform2fv\":_emscripten_glUniform2fv,\"_emscripten_glUniform2i\":_emscripten_glUniform2i,\"_emscripten_glUniform2iv\":_emscripten_glUniform2iv,\"_emscripten_glUniform2ui\":_emscripten_glUniform2ui,\"_emscripten_glUniform3f\":_emscripten_glUniform3f,\"_emscripten_glUniform3fv\":_emscripten_glUniform3fv,\"_emscripten_glUniform3i\":_emscripten_glUniform3i,\"_emscripten_glUniform3iv\":_emscripten_glUniform3iv,\"_emscripten_glUniform3ui\":_emscripten_glUniform3ui,\"_emscripten_glUniform4f\":_emscripten_glUniform4f,\"_emscripten_glUniform4fv\":_emscripten_glUniform4fv,\"_emscripten_glUniform4i\":_emscripten_glUniform4i,\"_emscripten_glUniform4iv\":_emscripten_glUniform4iv,\"_emscripten_glUniform4ui\":_emscripten_glUniform4ui,\"_emscripten_glUniformBlockBinding\":_emscripten_glUniformBlockBinding,\"_emscripten_glUniformMatrix2fv\":_emscripten_glUniformMatrix2fv,\"_emscripten_glUniformMatrix3fv\":_emscripten_glUniformMatrix3fv,\"_emscripten_glUniformMatrix4fv\":_emscripten_glUniformMatrix4fv,\"_emscripten_glUseProgram\":_emscripten_glUseProgram,\"_emscripten_glValidateProgram\":_emscripten_glValidateProgram,\"_emscripten_glVertexAttrib1f\":_emscripten_glVertexAttrib1f,\"_emscripten_glVertexAttrib1fv\":_emscripten_glVertexAttrib1fv,\"_emscripten_glVertexAttrib2f\":_emscripten_glVertexAttrib2f,\"_emscripten_glVertexAttrib2fv\":_emscripten_glVertexAttrib2fv,\"_emscripten_glVertexAttrib3f\":_emscripten_glVertexAttrib3f,\"_emscripten_glVertexAttrib3fv\":_emscripten_glVertexAttrib3fv,\"_emscripten_glVertexAttrib4f\":_emscripten_glVertexAttrib4f,\"_emscripten_glVertexAttrib4fv\":_emscripten_glVertexAttrib4fv,\"_emscripten_glVertexAttribDivisor\":_emscripten_glVertexAttribDivisor,\"_emscripten_glVertexAttribI1i\":_emscripten_glVertexAttribI1i,\"_emscripten_glVertexAttribI1iv\":_emscripten_glVertexAttribI1iv,\"_emscripten_glVertexAttribI1ui\":_emscripten_glVertexAttribI1ui,\"_emscripten_glVertexAttribI1uiv\":_emscripten_glVertexAttribI1uiv,\"_emscripten_glVertexAttribI2i\":_emscripten_glVertexAttribI2i,\"_emscripten_glVertexAttribI2iv\":_emscripten_glVertexAttribI2iv,\"_emscripten_glVertexAttribI2ui\":_emscripten_glVertexAttribI2ui,\"_emscripten_glVertexAttribI2uiv\":_emscripten_glVertexAttribI2uiv,\"_emscripten_glVertexAttribI3i\":_emscripten_glVertexAttribI3i,\"_emscripten_glVertexAttribI3iv\":_emscripten_glVertexAttribI3iv,\"_emscripten_glVertexAttribI3ui\":_emscripten_glVertexAttribI3ui,\"_emscripten_glVertexAttribI3uiv\":_emscripten_glVertexAttribI3uiv,\"_emscripten_glVertexAttribI4bv\":_emscripten_glVertexAttribI4bv,\"_emscripten_glVertexAttribI4i\":_emscripten_glVertexAttribI4i,\"_emscripten_glVertexAttribI4iv\":_emscripten_glVertexAttribI4iv,\"_emscripten_glVertexAttribI4sv\":_emscripten_glVertexAttribI4sv,\"_emscripten_glVertexAttribI4ubv\":_emscripten_glVertexAttribI4ubv,\"_emscripten_glVertexAttribI4ui\":_emscripten_glVertexAttribI4ui,\"_emscripten_glVertexAttribI4uiv\":_emscripten_glVertexAttribI4uiv,\"_emscripten_glVertexAttribI4usv\":_emscripten_glVertexAttribI4usv,\"_emscripten_glVertexAttribIPointer\":_emscripten_glVertexAttribIPointer,\"_emscripten_glVertexAttribPointer\":_emscripten_glVertexAttribPointer,\"_emscripten_glVertexPointer\":_emscripten_glVertexPointer,\"_emscripten_glViewport\":_emscripten_glViewport,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"_emscripten_set_main_loop\":_emscripten_set_main_loop,\"_emscripten_set_main_loop_timing\":_emscripten_set_main_loop_timing,\"_glActiveTexture\":_glActiveTexture,\"_glAttachShader\":_glAttachShader,\"_glBindBuffer\":_glBindBuffer,\"_glBindBufferRange\":_glBindBufferRange,\"_glBindFramebuffer\":_glBindFramebuffer,\"_glBindRenderbuffer\":_glBindRenderbuffer,\"_glBindSampler\":_glBindSampler,\"_glBindTexture\":_glBindTexture,\"_glBindVertexArray\":_glBindVertexArray,\"_glBlendEquationSeparate\":_glBlendEquationSeparate,\"_glBlendFuncSeparate\":_glBlendFuncSeparate,\"_glBlitFramebuffer\":_glBlitFramebuffer,\"_glBufferData\":_glBufferData,\"_glBufferSubData\":_glBufferSubData,\"_glClear\":_glClear,\"_glClearColor\":_glClearColor,\"_glClearDepthf\":_glClearDepthf,\"_glClearStencil\":_glClearStencil,\"_glColorMask\":_glColorMask,\"_glCompileShader\":_glCompileShader,\"_glCompressedTexSubImage2D\":_glCompressedTexSubImage2D,\"_glCreateProgram\":_glCreateProgram,\"_glCreateShader\":_glCreateShader,\"_glCullFace\":_glCullFace,\"_glDeleteBuffers\":_glDeleteBuffers,\"_glDeleteFramebuffers\":_glDeleteFramebuffers,\"_glDeleteProgram\":_glDeleteProgram,\"_glDeleteRenderbuffers\":_glDeleteRenderbuffers,\"_glDeleteSamplers\":_glDeleteSamplers,\"_glDeleteShader\":_glDeleteShader,\"_glDeleteSync\":_glDeleteSync,\"_glDeleteTextures\":_glDeleteTextures,\"_glDeleteVertexArrays\":_glDeleteVertexArrays,\"_glDepthFunc\":_glDepthFunc,\"_glDepthMask\":_glDepthMask,\"_glDetachShader\":_glDetachShader,\"_glDisable\":_glDisable,\"_glDisableVertexAttribArray\":_glDisableVertexAttribArray,\"_glDrawArrays\":_glDrawArrays,\"_glDrawRangeElements\":_glDrawRangeElements,\"_glEnable\":_glEnable,\"_glEnableVertexAttribArray\":_glEnableVertexAttribArray,\"_glFenceSync\":_glFenceSync,\"_glFlush\":_glFlush,\"_glFramebufferRenderbuffer\":_glFramebufferRenderbuffer,\"_glFramebufferTexture2D\":_glFramebufferTexture2D,\"_glFrontFace\":_glFrontFace,\"_glGenBuffers\":_glGenBuffers,\"_glGenFramebuffers\":_glGenFramebuffers,\"_glGenRenderbuffers\":_glGenRenderbuffers,\"_glGenSamplers\":_glGenSamplers,\"_glGenTextures\":_glGenTextures,\"_glGenVertexArrays\":_glGenVertexArrays,\"_glGenerateMipmap\":_glGenerateMipmap,\"_glGetError\":_glGetError,\"_glGetFloatv\":_glGetFloatv,\"_glGetIntegerv\":_glGetIntegerv,\"_glGetProgramInfoLog\":_glGetProgramInfoLog,\"_glGetProgramiv\":_glGetProgramiv,\"_glGetShaderInfoLog\":_glGetShaderInfoLog,\"_glGetShaderiv\":_glGetShaderiv,\"_glGetString\":_glGetString,\"_glGetStringi\":_glGetStringi,\"_glGetUniformBlockIndex\":_glGetUniformBlockIndex,\"_glGetUniformLocation\":_glGetUniformLocation,\"_glGetVertexAttribiv\":_glGetVertexAttribiv,\"_glHint\":_glHint,\"_glInvalidateFramebuffer\":_glInvalidateFramebuffer,\"_glInvalidateSubFramebuffer\":_glInvalidateSubFramebuffer,\"_glIsEnabled\":_glIsEnabled,\"_glLinkProgram\":_glLinkProgram,\"_glPixelStorei\":_glPixelStorei,\"_glPolygonOffset\":_glPolygonOffset,\"_glReadPixels\":_glReadPixels,\"_glRenderbufferStorage\":_glRenderbufferStorage,\"_glRenderbufferStorageMultisample\":_glRenderbufferStorageMultisample,\"_glSamplerParameteri\":_glSamplerParameteri,\"_glScissor\":_glScissor,\"_glShaderSource\":_glShaderSource,\"_glTexParameteri\":_glTexParameteri,\"_glTexStorage2D\":_glTexStorage2D,\"_glTexStorage2DMultisample\":_glTexStorage2DMultisample,\"_glTexStorage3D\":_glTexStorage3D,\"_glTexSubImage2D\":_glTexSubImage2D,\"_glUniform1f\":_glUniform1f,\"_glUniform1i\":_glUniform1i,\"_glUniform4f\":_glUniform4f,\"_glUniformBlockBinding\":_glUniformBlockBinding,\"_glUseProgram\":_glUseProgram,\"_glVertexAttribIPointer\":_glVertexAttribIPointer,\"_glVertexAttribPointer\":_glVertexAttribPointer,\"_glViewport\":_glViewport,\"_glWaitSync\":_glWaitSync,\"_llvm_ceil_f32\":_llvm_ceil_f32,\"_llvm_cttz_i32\":_llvm_cttz_i32,\"_llvm_cttz_i64\":_llvm_cttz_i64,\"_llvm_exp2_f32\":_llvm_exp2_f32,\"_llvm_exp2_f64\":_llvm_exp2_f64,\"_llvm_fabs_f32\":_llvm_fabs_f32,\"_llvm_floor_f32\":_llvm_floor_f32,\"_llvm_log2_f32\":_llvm_log2_f32,\"_llvm_trap\":_llvm_trap,\"_pthread_cond_destroy\":_pthread_cond_destroy,\"_pthread_cond_signal\":_pthread_cond_signal,\"_pthread_cond_timedwait\":_pthread_cond_timedwait,\"_pthread_cond_wait\":_pthread_cond_wait,\"_pthread_create\":_pthread_create,\"_pthread_getspecific\":_pthread_getspecific,\"_pthread_join\":_pthread_join,\"_pthread_key_create\":_pthread_key_create,\"_pthread_mutex_destroy\":_pthread_mutex_destroy,\"_pthread_once\":_pthread_once,\"_pthread_setspecific\":_pthread_setspecific,\"_sysconf\":_sysconf,\"constNoSmartPtrRawPointerToWireType\":constNoSmartPtrRawPointerToWireType,\"count_emval_handles\":count_emval_handles,\"craftInvokerFunction\":craftInvokerFunction,\"createNamedFunction\":createNamedFunction,\"downcastPointer\":downcastPointer,\"embind__requireFunction\":embind__requireFunction,\"embind_init_charCodes\":embind_init_charCodes,\"emscriptenWebGLComputeImageSize\":emscriptenWebGLComputeImageSize,\"emscriptenWebGLGet\":emscriptenWebGLGet,\"emscriptenWebGLGetHeapForType\":emscriptenWebGLGetHeapForType,\"emscriptenWebGLGetIndexed\":emscriptenWebGLGetIndexed,\"emscriptenWebGLGetShiftForType\":emscriptenWebGLGetShiftForType,\"emscriptenWebGLGetTexPixelData\":emscriptenWebGLGetTexPixelData,\"emscriptenWebGLGetUniform\":emscriptenWebGLGetUniform,\"emscriptenWebGLGetVertexAttrib\":emscriptenWebGLGetVertexAttrib,\"ensureOverloadTable\":ensureOverloadTable,\"enumReadValueFromPointer\":enumReadValueFromPointer,\"exposePublicSymbol\":exposePublicSymbol,\"extendError\":extendError,\"floatReadValueFromPointer\":floatReadValueFromPointer,\"flushPendingDeletes\":flushPendingDeletes,\"genericPointerToWireType\":genericPointerToWireType,\"getBasestPointer\":getBasestPointer,\"getInheritedInstance\":getInheritedInstance,\"getInheritedInstanceCount\":getInheritedInstanceCount,\"getLiveInheritedInstances\":getLiveInheritedInstances,\"getShiftFromSize\":getShiftFromSize,\"getStringOrSymbol\":getStringOrSymbol,\"getTypeName\":getTypeName,\"get_first_emval\":get_first_emval,\"heap32VectorToArray\":heap32VectorToArray,\"init_ClassHandle\":init_ClassHandle,\"init_RegisteredPointer\":init_RegisteredPointer,\"init_embind\":init_embind,\"init_emval\":init_emval,\"integerReadValueFromPointer\":integerReadValueFromPointer,\"makeClassHandle\":makeClassHandle,\"makeLegalFunctionName\":makeLegalFunctionName,\"new_\":new_,\"nonConstNoSmartPtrRawPointerToWireType\":nonConstNoSmartPtrRawPointerToWireType,\"readLatin1String\":readLatin1String,\"registerType\":registerType,\"replacePublicSymbol\":replacePublicSymbol,\"requireHandle\":requireHandle,\"requireRegisteredType\":requireRegisteredType,\"runDestructor\":runDestructor,\"runDestructors\":runDestructors,\"setDelayFunction\":setDelayFunction,\"shallowCopyInternalPointer\":shallowCopyInternalPointer,\"simpleReadValueFromPointer\":simpleReadValueFromPointer,\"throwBindingError\":throwBindingError,\"throwInstanceAlreadyDeleted\":throwInstanceAlreadyDeleted,\"throwInternalError\":throwInternalError,\"throwUnboundTypeError\":throwUnboundTypeError,\"upcastPointer\":upcastPointer,\"validateThis\":validateThis,\"whenDependentTypesAreResolved\":whenDependentTypesAreResolved,\"DYNAMICTOP_PTR\":DYNAMICTOP_PTR,\"tempDoublePtr\":tempDoublePtr,\"ABORT\":ABORT,\"STACKTOP\":STACKTOP,\"STACK_MAX\":STACK_MAX};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var __GLOBAL__sub_I_Engine_cpp=Module[\"__GLOBAL__sub_I_Engine_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_Engine_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_bind_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_gl_headers_cpp=Module[\"__GLOBAL__sub_I_gl_headers_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_gl_headers_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_jsbindings_cpp=Module[\"__GLOBAL__sub_I_jsbindings_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_jsbindings_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_jsenums_cpp=Module[\"__GLOBAL__sub_I_jsenums_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_jsenums_cpp\"].apply(null,arguments)});var ___errno_location=Module[\"___errno_location\"]=(function(){return Module[\"asm\"][\"___errno_location\"].apply(null,arguments)});var ___getTypeName=Module[\"___getTypeName\"]=(function(){return Module[\"asm\"][\"___getTypeName\"].apply(null,arguments)});var _emscripten_GetProcAddress=Module[\"_emscripten_GetProcAddress\"]=(function(){return Module[\"asm\"][\"_emscripten_GetProcAddress\"].apply(null,arguments)});var _emscripten_replace_memory=Module[\"_emscripten_replace_memory\"]=(function(){return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null,arguments)});var _free=Module[\"_free\"]=(function(){return Module[\"asm\"][\"_free\"].apply(null,arguments)});var _llvm_bswap_i32=Module[\"_llvm_bswap_i32\"]=(function(){return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null,arguments)});var _llvm_ctpop_i32=Module[\"_llvm_ctpop_i32\"]=(function(){return Module[\"asm\"][\"_llvm_ctpop_i32\"].apply(null,arguments)});var _llvm_ctpop_i64=Module[\"_llvm_ctpop_i64\"]=(function(){return Module[\"asm\"][\"_llvm_ctpop_i64\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"_malloc\"].apply(null,arguments)});var _memcpy=Module[\"_memcpy\"]=(function(){return Module[\"asm\"][\"_memcpy\"].apply(null,arguments)});var _memmove=Module[\"_memmove\"]=(function(){return Module[\"asm\"][\"_memmove\"].apply(null,arguments)});var _memset=Module[\"_memset\"]=(function(){return Module[\"asm\"][\"_memset\"].apply(null,arguments)});var _pthread_cond_broadcast=Module[\"_pthread_cond_broadcast\"]=(function(){return Module[\"asm\"][\"_pthread_cond_broadcast\"].apply(null,arguments)});var _pthread_mutex_lock=Module[\"_pthread_mutex_lock\"]=(function(){return Module[\"asm\"][\"_pthread_mutex_lock\"].apply(null,arguments)});var _pthread_mutex_unlock=Module[\"_pthread_mutex_unlock\"]=(function(){return Module[\"asm\"][\"_pthread_mutex_unlock\"].apply(null,arguments)});var _sbrk=Module[\"_sbrk\"]=(function(){return Module[\"asm\"][\"_sbrk\"].apply(null,arguments)});var _strstr=Module[\"_strstr\"]=(function(){return Module[\"asm\"][\"_strstr\"].apply(null,arguments)});var establishStackSpace=Module[\"establishStackSpace\"]=(function(){return Module[\"asm\"][\"establishStackSpace\"].apply(null,arguments)});var getTempRet0=Module[\"getTempRet0\"]=(function(){return Module[\"asm\"][\"getTempRet0\"].apply(null,arguments)});var runPostSets=Module[\"runPostSets\"]=(function(){return Module[\"asm\"][\"runPostSets\"].apply(null,arguments)});var setTempRet0=Module[\"setTempRet0\"]=(function(){return Module[\"asm\"][\"setTempRet0\"].apply(null,arguments)});var setThrew=Module[\"setThrew\"]=(function(){return Module[\"asm\"][\"setThrew\"].apply(null,arguments)});var stackAlloc=Module[\"stackAlloc\"]=(function(){return Module[\"asm\"][\"stackAlloc\"].apply(null,arguments)});var stackRestore=Module[\"stackRestore\"]=(function(){return Module[\"asm\"][\"stackRestore\"].apply(null,arguments)});var stackSave=Module[\"stackSave\"]=(function(){return Module[\"asm\"][\"stackSave\"].apply(null,arguments)});var dynCall_fi=Module[\"dynCall_fi\"]=(function(){return Module[\"asm\"][\"dynCall_fi\"].apply(null,arguments)});var dynCall_fii=Module[\"dynCall_fii\"]=(function(){return Module[\"asm\"][\"dynCall_fii\"].apply(null,arguments)});var dynCall_i=Module[\"dynCall_i\"]=(function(){return Module[\"asm\"][\"dynCall_i\"].apply(null,arguments)});var dynCall_ii=Module[\"dynCall_ii\"]=(function(){return Module[\"asm\"][\"dynCall_ii\"].apply(null,arguments)});var dynCall_iif=Module[\"dynCall_iif\"]=(function(){return Module[\"asm\"][\"dynCall_iif\"].apply(null,arguments)});var dynCall_iiff=Module[\"dynCall_iiff\"]=(function(){return Module[\"asm\"][\"dynCall_iiff\"].apply(null,arguments)});var dynCall_iii=Module[\"dynCall_iii\"]=(function(){return Module[\"asm\"][\"dynCall_iii\"].apply(null,arguments)});var dynCall_iiif=Module[\"dynCall_iiif\"]=(function(){return Module[\"asm\"][\"dynCall_iiif\"].apply(null,arguments)});var dynCall_iiiff=Module[\"dynCall_iiiff\"]=(function(){return Module[\"asm\"][\"dynCall_iiiff\"].apply(null,arguments)});var dynCall_iiii=Module[\"dynCall_iiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiii\"].apply(null,arguments)});var dynCall_iiiii=Module[\"dynCall_iiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiii\"].apply(null,arguments)});var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiiii\"].apply(null,arguments)});var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiiiii\"].apply(null,arguments)});var dynCall_iiiiiiii=Module[\"dynCall_iiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiiiiii\"].apply(null,arguments)});var dynCall_iiij=Module[\"dynCall_iiij\"]=(function(){return Module[\"asm\"][\"dynCall_iiij\"].apply(null,arguments)});var dynCall_jii=Module[\"dynCall_jii\"]=(function(){return Module[\"asm\"][\"dynCall_jii\"].apply(null,arguments)});var dynCall_v=Module[\"dynCall_v\"]=(function(){return Module[\"asm\"][\"dynCall_v\"].apply(null,arguments)});var dynCall_vd=Module[\"dynCall_vd\"]=(function(){return Module[\"asm\"][\"dynCall_vd\"].apply(null,arguments)});var dynCall_vdd=Module[\"dynCall_vdd\"]=(function(){return Module[\"asm\"][\"dynCall_vdd\"].apply(null,arguments)});var dynCall_vdddddd=Module[\"dynCall_vdddddd\"]=(function(){return Module[\"asm\"][\"dynCall_vdddddd\"].apply(null,arguments)});var dynCall_vf=Module[\"dynCall_vf\"]=(function(){return Module[\"asm\"][\"dynCall_vf\"].apply(null,arguments)});var dynCall_vff=Module[\"dynCall_vff\"]=(function(){return Module[\"asm\"][\"dynCall_vff\"].apply(null,arguments)});var dynCall_vffff=Module[\"dynCall_vffff\"]=(function(){return Module[\"asm\"][\"dynCall_vffff\"].apply(null,arguments)});var dynCall_vfi=Module[\"dynCall_vfi\"]=(function(){return Module[\"asm\"][\"dynCall_vfi\"].apply(null,arguments)});var dynCall_vi=Module[\"dynCall_vi\"]=(function(){return Module[\"asm\"][\"dynCall_vi\"].apply(null,arguments)});var dynCall_viddddi=Module[\"dynCall_viddddi\"]=(function(){return Module[\"asm\"][\"dynCall_viddddi\"].apply(null,arguments)});var dynCall_vif=Module[\"dynCall_vif\"]=(function(){return Module[\"asm\"][\"dynCall_vif\"].apply(null,arguments)});var dynCall_viff=Module[\"dynCall_viff\"]=(function(){return Module[\"asm\"][\"dynCall_viff\"].apply(null,arguments)});var dynCall_vifff=Module[\"dynCall_vifff\"]=(function(){return Module[\"asm\"][\"dynCall_vifff\"].apply(null,arguments)});var dynCall_viffff=Module[\"dynCall_viffff\"]=(function(){return Module[\"asm\"][\"dynCall_viffff\"].apply(null,arguments)});var dynCall_vii=Module[\"dynCall_vii\"]=(function(){return Module[\"asm\"][\"dynCall_vii\"].apply(null,arguments)});var dynCall_viidddddd=Module[\"dynCall_viidddddd\"]=(function(){return Module[\"asm\"][\"dynCall_viidddddd\"].apply(null,arguments)});var dynCall_viiddddi=Module[\"dynCall_viiddddi\"]=(function(){return Module[\"asm\"][\"dynCall_viiddddi\"].apply(null,arguments)});var dynCall_viif=Module[\"dynCall_viif\"]=(function(){return Module[\"asm\"][\"dynCall_viif\"].apply(null,arguments)});var dynCall_viiff=Module[\"dynCall_viiff\"]=(function(){return Module[\"asm\"][\"dynCall_viiff\"].apply(null,arguments)});var dynCall_viifff=Module[\"dynCall_viifff\"]=(function(){return Module[\"asm\"][\"dynCall_viifff\"].apply(null,arguments)});var dynCall_viifi=Module[\"dynCall_viifi\"]=(function(){return Module[\"asm\"][\"dynCall_viifi\"].apply(null,arguments)});var dynCall_viii=Module[\"dynCall_viii\"]=(function(){return Module[\"asm\"][\"dynCall_viii\"].apply(null,arguments)});var dynCall_viiidddddd=Module[\"dynCall_viiidddddd\"]=(function(){return Module[\"asm\"][\"dynCall_viiidddddd\"].apply(null,arguments)});var dynCall_viiif=Module[\"dynCall_viiif\"]=(function(){return Module[\"asm\"][\"dynCall_viiif\"].apply(null,arguments)});var dynCall_viiii=Module[\"dynCall_viiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiii\"].apply(null,arguments)});var dynCall_viiiii=Module[\"dynCall_viiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiii\"].apply(null,arguments)});var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null,arguments)});var dynCall_viiiiiii=Module[\"dynCall_viiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiii=Module[\"dynCall_viiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiiii=Module[\"dynCall_viiiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiiiii=Module[\"dynCall_viiiiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiiiiii=Module[\"dynCall_viiiiiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiiiiii\"].apply(null,arguments)});var dynCall_vij=Module[\"dynCall_vij\"]=(function(){return Module[\"asm\"][\"dynCall_vij\"].apply(null,arguments)});Module[\"asm\"]=asm;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();Filament.remainingInitializationTasks=1;Filament.init=(function(assets,onready){Filament.onReady=onready;Filament.remainingInitializationTasks+=assets.length;Filament.assets={};if(typeof glMatrix!==\"undefined\"){Filament.loadMathExtensions()}Filament.fetch(assets,null,(function(name){if(--Filament.remainingInitializationTasks==0&&Filament.onReady){Filament.onReady()}}))});Filament.postRun=(function(){Filament.loadClassExtensions();if(--Filament.remainingInitializationTasks==0&&Filament.onReady){Filament.onReady()}});Filament.fetch=(function(assets,onDone,onFetched){var remainingAssets=assets.length;assets.forEach((function(name){const lower=name.toLowerCase();if(lower.endsWith(\".jpeg\")||lower.endsWith(\".jpg\")){var img=new Image;img.src=name;img.decoding=\"async\";img.onload=(function(){Filament.assets[name]=img;if(onFetched){onFetched(name)}if(--remainingAssets===0&&onDone){onDone()}});return}fetch(name).then((function(response){if(!response.ok){throw new Error(name)}return response.arrayBuffer()})).then((function(arrayBuffer){Filament.assets[name]=new Uint8Array(arrayBuffer);if(onFetched){onFetched(name)}if(--remainingAssets===0&&onDone){onDone()}}))}))});function getBufferDescriptor(buffer){if(\"string\"==typeof buffer||buffer instanceof String){buffer=Filament.assets[buffer]}if(buffer.buffer instanceof ArrayBuffer){buffer=Filament.Buffer(buffer)}return buffer}Filament.loadClassExtensions=(function(){Filament.Engine.create=(function(canvas,options){const defaults={majorVersion:2,minorVersion:0,antialias:false,depth:false,alpha:false};options=Object.assign(defaults,options);Filament.createContext(canvas,true,true,options);Filament.ctx.getExtension(\"WEBGL_compressed_texture_s3tc\");Filament.ctx.getExtension(\"WEBGL_compressed_texture_astc\");Filament.ctx.getExtension(\"WEBGL_compressed_texture_etc\");return Filament.Engine._create()});Filament.Engine.prototype.createMaterial=(function(buffer){buffer=getBufferDescriptor(buffer);const result=this._createMaterial(buffer);buffer.delete();return result});Filament.Engine.prototype.createTextureFromKtx=(function(buffer,options){buffer=getBufferDescriptor(buffer);const result=Filament._createTextureFromKtx(buffer,this,options);buffer.delete();return result});Filament.Engine.prototype.createIblFromKtx=(function(buffer,options){buffer=getBufferDescriptor(buffer);const result=Filament._createIblFromKtx(buffer,this,options);buffer.delete();return result});Filament.Engine.prototype.createSkyFromKtx=(function(buffer,options){options=options||{\"rgbm\":true};const skytex=this.createTextureFromKtx(buffer,options);return Filament.Skybox.Builder().environment(skytex).build(this)});Filament.Engine.prototype.createTextureFromPng=(function(buffer,options){buffer=getBufferDescriptor(buffer);const result=Filament._createTextureFromPng(buffer,this,options);buffer.delete();return result});Filament.Engine.prototype.createTextureFromJpeg=(function(image,options){if(\"string\"==typeof image||image instanceof String){image=Filament.assets[image]}return Filament._createTextureFromJpeg(image,this,options)});Filament.Engine.prototype.loadFilamesh=(function(buffer,definstance,matinstances){buffer=getBufferDescriptor(buffer);const result=Filament._loadFilamesh(this,buffer,definstance,matinstances);buffer.delete();return result});Filament.VertexBuffer.prototype.setBufferAt=(function(engine,bufferIndex,buffer){buffer=getBufferDescriptor(buffer);this._setBufferAt(engine,bufferIndex,buffer);buffer.delete()});Filament.IndexBuffer.prototype.setBuffer=(function(engine,buffer){buffer=getBufferDescriptor(buffer);this._setBuffer(engine,buffer);buffer.delete()});Filament.RenderableManager$Builder.prototype.build=Filament.LightManager$Builder.prototype.build=(function(engine,entity){const result=this._build(engine,entity);this.delete();return result});Filament.VertexBuffer$Builder.prototype.build=Filament.IndexBuffer$Builder.prototype.build=Filament.Texture$Builder.prototype.build=Filament.IndirectLight$Builder.prototype.build=Filament.Skybox$Builder.prototype.build=(function(engine){const result=this._build(engine);this.delete();return result});Filament.KtxBundle.prototype.getBlob=(function(index){const blob=this._getBlob(index);const result=blob.getBytes();blob.delete();return result});Filament.KtxBundle.prototype.getCubeBlob=(function(miplevel){const blob=this._getCubeBlob(miplevel);const result=blob.getBytes();blob.delete();return result});Filament.Texture.prototype.setImage=(function(engine,level,pbd){this._setImage(engine,level,pbd);pbd.delete()});Filament.Texture.prototype.setImageCube=(function(engine,level,pbd){this._setImageCube(engine,level,pbd);pbd.delete()})});Filament.Buffer=(function(typedarray){console.assert(typedarray.buffer instanceof ArrayBuffer);console.assert(typedarray.byteLength>0);if(Filament.HEAPU32.buffer==typedarray.buffer){typedarray=new Uint8Array(typedarray)}const ta=typedarray;const bd=new Filament.driver$BufferDescriptor(ta);const uint8array=new Uint8Array(ta.buffer,ta.byteOffset,ta.byteLength);bd.getBytes().set(uint8array);return bd});Filament.PixelBuffer=(function(typedarray,format,datatype){console.assert(typedarray.buffer instanceof ArrayBuffer);console.assert(typedarray.byteLength>0);if(Filament.HEAPU32.buffer==typedarray.buffer){typedarray=new Uint8Array(typedarray)}const ta=typedarray;const bd=new Filament.driver$PixelBufferDescriptor(ta,format,datatype);const uint8array=new Uint8Array(ta.buffer,ta.byteOffset,ta.byteLength);bd.getBytes().set(uint8array);return bd});Filament.CompressedPixelBuffer=(function(typedarray,cdatatype,faceSize){console.assert(typedarray.buffer instanceof ArrayBuffer);console.assert(typedarray.byteLength>0);faceSize=faceSize||typedarray.byteLength;if(Filament.HEAPU32.buffer==typedarray.buffer){typedarray=new Uint8Array(typedarray)}const ta=typedarray;const bd=new Filament.driver$PixelBufferDescriptor(ta,cdatatype,faceSize,true);const uint8array=new Uint8Array(ta.buffer,ta.byteOffset,ta.byteLength);bd.getBytes().set(uint8array);return bd});Filament._loadFilamesh=(function(engine,buffer,definstance,matinstances){matinstances=matinstances||{};const registry=new Filament.MeshReader$MaterialRegistry;for(var key in matinstances){registry.set(key,matinstances[key])}if(definstance){registry.set(\"DefaultMaterial\",definstance)}const mesh=Filament.MeshReader.loadMeshFromBuffer(engine,buffer,registry);const keys=registry.keys();for(var i=0;i<keys.size();i++){const key=keys.get(i);const minstance=registry.get(key);matinstances[key]=minstance}return{\"renderable\":mesh.renderable(),\"vertexBuffer\":mesh.vertexBuffer(),\"indexBuffer\":mesh.indexBuffer()}});Filament.IcoSphere=(function(nsubdivs){const X=.5257311121191336;const Z=.8506508083520399;const N=0;this.vertices=new Float32Array([-X,+N,+Z,+X,+N,+Z,-X,+N,-Z,+X,+N,-Z,+N,+Z,+X,+N,+Z,-X,+N,-Z,+X,+N,-Z,-X,+Z,+X,+N,-Z,+X,+N,+Z,-X,+N,-Z,-X,+N]);this.triangles=new Uint16Array([1,4,0,4,9,0,4,5,9,8,5,4,1,8,4,1,10,8,10,3,8,8,3,5,3,2,5,3,7,2,3,10,7,10,6,7,6,11,7,6,0,11,6,1,0,10,1,6,11,0,9,2,11,9,5,2,9,11,2,7]);if(nsubdivs){while(nsubdivs-->0){this.subdivide()}}const nverts=this.vertices.length/3;this.tangents=new Uint16Array(4*nverts);for(var i=0;i<nverts;++i){const src=this.vertices.subarray(i*3,i*3+3);const dst=this.tangents.subarray(i*4,i*4+4);const n=vec3.normalize(vec3.create(),src);const b=vec3.cross(vec3.create(),n,[0,1,0]);vec3.normalize(b,b);const t=vec3.cross(vec3.create(),b,n);const q=quat.fromMat3(quat.create(),[t[0],t[1],t[2],b[0],b[1],b[2],n[0],n[1],n[2]]);vec4.packSnorm16(dst,q)}});Filament.IcoSphere.prototype.subdivide=(function(){const srctris=this.triangles;const srcverts=this.vertices;const nsrctris=srctris.length/3;const ndsttris=nsrctris*4;const nsrcverts=srcverts.length/3;const ndstverts=nsrcverts+nsrctris*3;const dsttris=new Uint16Array(ndsttris*3);const dstverts=new Float32Array(ndstverts*3);dstverts.set(srcverts);var srcind=0,dstind=0,i3=nsrcverts*3,i4=i3+3,i5=i4+3;for(var tri=0;tri<nsrctris;tri++,i3+=9,i4+=9,i5+=9){const i0=srctris[srcind++]*3;const i1=srctris[srcind++]*3;const i2=srctris[srcind++]*3;const v0=srcverts.subarray(i0,i0+3);const v1=srcverts.subarray(i1,i1+3);const v2=srcverts.subarray(i2,i2+3);const v3=dstverts.subarray(i3,i3+3);const v4=dstverts.subarray(i4,i4+3);const v5=dstverts.subarray(i5,i5+3);vec3.normalize(v3,vec3.add(v3,v0,v1));vec3.normalize(v4,vec3.add(v4,v1,v2));vec3.normalize(v5,vec3.add(v5,v2,v0));dsttris[dstind++]=i0/3;dsttris[dstind++]=i3/3;dsttris[dstind++]=i5/3;dsttris[dstind++]=i3/3;dsttris[dstind++]=i1/3;dsttris[dstind++]=i4/3;dsttris[dstind++]=i5/3;dsttris[dstind++]=i3/3;dsttris[dstind++]=i4/3;dsttris[dstind++]=i2/3;dsttris[dstind++]=i5/3;dsttris[dstind++]=i4/3}this.triangles=dsttris;this.vertices=dstverts});function clamp(v,least,most){return Math.max(Math.min(most,v),least)}Filament.packSnorm16=(function(value){return Math.round(clamp(value,-1,1)*32767)});Filament.loadMathExtensions=(function(){vec4.packSnorm16=(function(out,src){out[0]=Filament.packSnorm16(src[0]);out[1]=Filament.packSnorm16(src[1]);out[2]=Filament.packSnorm16(src[2]);out[3]=Filament.packSnorm16(src[3]);return out});const fromRotationZ=mat3.fromRotation;mat3.fromRotation=(function(out,radians,axis){if(axis){return mat3.fromMat4(out,mat4.fromRotation(mat4.create(),radians,axis))}return fromRotationZ(out,radians)})});Filament._createTextureFromKtx=(function(ktxdata,engine,options){options=options||{};const ktx=options[\"ktx\"]||new Filament.KtxBundle(ktxdata);const rgbm=!!options[\"rgbm\"];const srgb=!!options[\"srgb\"];return Filament.KtxUtility$createTexture(engine,ktx,srgb,rgbm)});Filament._createIblFromKtx=(function(ktxdata,engine,options){options=options||{\"rgbm\":true};const iblktx=options[\"ktx\"]=new Filament.KtxBundle(ktxdata);const ibltex=Filament._createTextureFromKtx(ktxdata,engine,options);const shstring=iblktx.getMetadata(\"sh\");const shfloats=shstring.split(/\\s/,9*3).map(parseFloat);return Filament.IndirectLight.Builder().reflections(ibltex).irradianceSh(3,shfloats).build(engine)});Filament._createTextureFromPng=(function(pngdata,engine,options){const Sampler=Filament.Texture$Sampler;const TextureFormat=Filament.Texture$InternalFormat;const PixelDataFormat=Filament.PixelDataFormat;options=options||{};const srgb=!!options[\"srgb\"];const rgbm=!!options[\"rgbm\"];const noalpha=!!options[\"noalpha\"];const nomips=!!options[\"nomips\"];const decodedpng=Filament.decodePng(pngdata,noalpha?3:4);var texformat,pbformat,pbtype;if(noalpha){texformat=srgb?TextureFormat.SRGB8:TextureFormat.RGB8;pbformat=PixelDataFormat.RGB;pbtype=Filament.PixelDataType.UBYTE}else{texformat=srgb?TextureFormat.SRGB8_A8:TextureFormat.RGBA8;pbformat=rgbm?PixelDataFormat.RGBM:PixelDataFormat.RGBA;pbtype=Filament.PixelDataType.UBYTE}const tex=Filament.Texture.Builder().width(decodedpng.width).height(decodedpng.height).levels(nomips?1:255).sampler(Sampler.SAMPLER_2D).format(texformat).rgbm(rgbm).build(engine);const pixelbuffer=Filament.PixelBuffer(decodedpng.data.getBytes(),pbformat,pbtype);tex.setImage(engine,0,pixelbuffer);if(!nomips){tex.generateMipmaps(engine)}return tex});Filament._createTextureFromJpeg=(function(image,engine,options){options=options||{};const srgb=!!options[\"srgb\"];const nomips=!!options[\"nomips\"];var context2d=document.createElement(\"canvas\").getContext(\"2d\");context2d.canvas.width=image.width;context2d.canvas.height=image.height;context2d.width=image.width;context2d.height=image.height;context2d.globalCompositeOperation=\"copy\";context2d.drawImage(image,0,0);var imgdata=context2d.getImageData(0,0,image.width,image.height).data.buffer;var decodedjpeg=new Uint8Array(imgdata);const TF=Filament.Texture$InternalFormat;const texformat=srgb?TF.SRGB8_A8:TF.RGBA8;const pbformat=Filament.PixelDataFormat.RGBA;const pbtype=Filament.PixelDataType.UBYTE;const tex=Filament.Texture.Builder().width(image.width).height(image.height).levels(nomips?1:255).sampler(Filament.Texture$Sampler.SAMPLER_2D).format(texformat).build(engine);const pixelbuffer=Filament.PixelBuffer(decodedjpeg,pbformat,pbtype);tex.setImage(engine,0,pixelbuffer);if(!nomips){tex.generateMipmaps(engine)}return tex});Filament.getSupportedFormats=(function(){if(Filament.supportedFormats){return Filament.supportedFormats}const options={majorVersion:2,minorVersion:0};var ctx=document.createElement(\"canvas\").getContext(\"webgl2\",options);const result={s3tc:false,astc:false,etc:false};var exts=ctx.getSupportedExtensions(),nexts=exts.length,i;for(i=0;i<nexts;i++){var ext=exts[i];if(ext==\"WEBGL_compressed_texture_s3tc\"){result.s3tc=true}else if(ext==\"WEBGL_compressed_texture_astc\"){result.astc=true}else if(ext==\"WEBGL_compressed_texture_etc\"){result.etc=true}}return Filament.supportedFormats=result});Filament.getSupportedFormatSuffix=(function(desiredFormats){desiredFormats=desiredFormats.split(\" \");var exts=Filament.getSupportedFormats();for(var key in exts){if(exts[key]&&desiredFormats.includes(key)){return\"_\"+key}}return\"\"})\n\n\n\n\n\n  return Filament;\n}\n)();\nif (typeof exports === 'object' && typeof module === 'object')\n    module.exports = Filament;\n  else if (typeof define === 'function' && define['amd'])\n    define([], function() { return Filament; });\n  else if (typeof exports === 'object')\n    exports[\"Filament\"] = Filament;\n  ","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = fs;","module.exports = path;","import * as Filament from \"./filament\";\n\nconst iblSuffix = Filament.getSupportedFormatSuffix(\"etc s3tc\");\nconst environ = \"env/syferfontein_18d_clear_2k\";\n\nexport const ibl = `${environ}_ibl${iblSuffix}.ktx.bmp`;\nexport const skySmall = `${environ}_skybox_tiny.ktx.bmp`;\nexport const skyLarge = `${environ}_skybox.ktx.bmp`;\n\nexport const nonlitMaterial = \"materials/nonlit.filamat\";\nexport const pbrMaterial = \"materials/pbr.filamat\";\nexport const texMaterial = \"materials/tex.filamat\";\n\nexport const diffuse = \"diffuse.jpg\";\nexport const specular = \"specular.jpg\";\nexport const normal = \"normal.jpg\";\nexport const mesh = \"filamesh\";\n\nexport const collision = \"tracks/collision.png\";\nexport const elevation = \"tracks/height.png\";\n","// -------------------------------------------------------------------------------------------------\n// Vehicle represents the position and orientation of the racing vehicle.\n//\n// For convenience, this class can compute a 4x4 matrix that transforms the vehicle from its rest\n// pose at the origin to its designated position and orientation within the world.\n// -------------------------------------------------------------------------------------------------\n\nimport { mat4, quat, vec3 } from \"gl-matrix\";\n\nexport default class Vehicle {\n    public readonly position: vec3;\n    public readonly orientation: quat;\n    private readonly matrix: mat4;\n    private readonly temp: vec3;\n    constructor(pos: vec3) {\n        this.position = vec3.copy(vec3.create(), pos);\n        this.orientation = quat.create();\n        this.matrix = mat4.create();\n        this.temp = vec3.create();\n    }\n    public getMatrix(): mat4 {\n        return mat4.fromRotationTranslation(this.matrix, this.orientation, this.position);\n    }\n    public translate(v: vec3) {\n        vec3.transformQuat(this.temp, v, this.orientation);\n        vec3.add(this.position, this.position, this.temp);\n    }\n}\n","// -------------------------------------------------------------------------------------------------\n// The App owns the Display and Simulation.\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport * as Filament from \"./filament\";\nimport * as urls from \"./urls\";\n\nimport { glMatrix, vec3 } from \"gl-matrix\";\n\nimport ChaseCamera from \"./chasecam\";\nimport Display from \"./display\";\nimport Sampler from \"./sampler\";\nimport Simulation from \"./simulation\";\nimport Vehicle from \"./vehicle\";\n\nconst initialVehiclePosition = vec3.fromValues(-2268, 400, -886);\n\nconst initialAssets = [\n    urls.skySmall,\n    urls.ibl,\n    urls.pbrMaterial,\n    urls.nonlitMaterial,\n    urls.texMaterial,\n];\n\nFilament.init(initialAssets, () => {\n    // HexGL requires 64-bit precision and fast instantiation of vectors.\n    glMatrix.setMatrixArrayType(Array);\n\n    // The global app instance can be accessed for debugging purposes only.\n    window[\"app\"] = new App();\n});\n\nclass App {\n    private readonly display: Display;\n    private readonly chasecam: ChaseCamera;\n    private simulation: Simulation;\n    private time: number;\n\n    constructor() {\n        const canvas = document.getElementsByTagName(\"canvas\")[0];\n        const collision = new Sampler(urls.collision);\n        const elevation = new Sampler(urls.elevation);\n        const vehicle = new Vehicle(initialVehiclePosition);\n        this.simulation = new Simulation(vehicle, collision, elevation);\n        this.display = new Display(canvas, vehicle);\n        this.chasecam = new ChaseCamera(this.display.camera, vehicle);\n        this.tick = this.tick.bind(this);\n        this.time = Date.now();\n        window.requestAnimationFrame(this.tick);\n    }\n\n    private tick() {\n        // Determine the time step.\n        const time = Date.now();\n        const dt = (time - this.time) * 0.1;\n        this.time = time;\n\n        // Update the vehicle orientation and position.\n        this.simulation.tick(dt);\n\n        // Update the camera position.\n        this.chasecam.tick(dt, this.simulation.getNormalizedSpeed());\n\n        // Render the 3D scene.\n        this.display.render();\n\n        // Request the next frame.\n        window.requestAnimationFrame(this.tick);\n    }\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","module.exports = crypto;","// -------------------------------------------------------------------------------------------------\n// The ChaseCamera continuously updates a camera to make it follow a target vehicle.\n//\n//   - constructor(camera: Filament.Camera, vehicle: Vehicle)\n//   - tick(dt: number, speed: number)\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport * as Filament from \"./filament\";\n\nimport { vec3 } from \"gl-matrix\";\n\nimport Vehicle from \"./vehicle\";\n\nexport default class ChaseCamera {\n    private readonly camera: Filament.Camera;\n    private readonly vehicle: Vehicle;\n    private readonly speedOffsetMax: number;\n    private readonly yoffset: number;\n    private readonly targetYoffset: number;\n    private readonly zoffset: number;\n\n    private speedOffset: number;\n\n    constructor(camera: Filament.Camera, vehicle: Vehicle) {\n        this.camera = camera;\n        this.vehicle = vehicle;\n        this.yoffset = 10.0; // how far above the ship the camera flies\n        this.zoffset = 23.0; // how far behind the ship the camera flies\n        this.speedOffset = 0; // adds to zoffset after sudden acceleration\n        this.speedOffsetMax = 10;\n\n        this.targetYoffset = 6.0; // how far above the ship the camera looks\n    }\n\n    public tick(dt: number, speed: number) {\n        this.speedOffset += (this.speedOffsetMax * speed - this.speedOffset) *\n                Math.min(1.0, 0.3 * dt);\n\n        const up = vec3.fromValues(0, 1, 0);\n        vec3.transformQuat(up, up, this.vehicle.orientation);\n\n        const dir = vec3.fromValues(0, 0, 1);\n        vec3.transformQuat(dir, dir, this.vehicle.orientation);\n\n        const cameraPos = vec3.copy(vec3.create(), this.vehicle.position);\n        vec3.scale(dir, dir, this.zoffset + this.speedOffset);\n        vec3.subtract(cameraPos, cameraPos, dir);\n        vec3.scale(up, up, this.yoffset);\n        vec3.add(cameraPos, cameraPos, up);\n\n        const targetPos = vec3.copy(vec3.create(), this.vehicle.position);\n        vec3.set(up, 0, 1, 0);\n        vec3.transformQuat(up, up, this.vehicle.orientation);\n        vec3.scale(up, up, this.targetYoffset);\n        vec3.add(targetPos, targetPos, up);\n\n        this.camera.lookAt(\n                cameraPos as unknown as number[],\n                targetPos as unknown as number[],\n                [0, 1, 0]);\n    }\n}\n","// -------------------------------------------------------------------------------------------------\n// The Display draws to the main canvas and manages all Filament entities.\n//\n//   - constructor(canvas: HTMLCanvasElement, vehicle: Vehicle)\n//   - readonly camera: Filament.Camera;\n//   - render()\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport * as Filament from \"./filament\";\nimport * as urls from \"./urls\";\nimport Vehicle from \"./vehicle\";\n\nexport default class Display {\n    public readonly camera: Filament.Camera;\n\n    private readonly canvas: HTMLCanvasElement;\n    private readonly engine: Filament.Engine;\n    private readonly indirectLight: Filament.IndirectLight;\n    private readonly renderer: Filament.Renderer;\n    private readonly sampler: Filament.TextureSampler;\n    private readonly scene: Filament.Scene;\n    private readonly swapChain: Filament.SwapChain;\n    private readonly view: Filament.View;\n\n    private readonly nonlitMaterial: Filament.Material;\n    private readonly pbrMaterial: Filament.Material;\n    private readonly texMaterial: Filament.Material;\n\n    private readonly vehicle: Vehicle;\n\n    private ship: Filament.Entity;\n    private skybox: Filament.Skybox;\n\n    constructor(canvas, vehicle) {\n        this.canvas = canvas;\n        this.vehicle = vehicle;\n        this.engine = Filament.Engine.create(canvas);\n        this.scene = this.engine.createScene();\n        this.skybox = this.engine.createSkyFromKtx(urls.skySmall);\n        this.scene.setSkybox(this.skybox);\n        this.indirectLight = this.engine.createIblFromKtx(urls.ibl);\n        this.indirectLight.setIntensity(100000);\n        this.scene.setIndirectLight(this.indirectLight);\n        this.swapChain = this.engine.createSwapChain();\n        this.renderer = this.engine.createRenderer();\n        this.camera = this.engine.createCamera();\n        this.view = this.engine.createView();\n        this.view.setCamera(this.camera);\n        this.view.setScene(this.scene);\n\n        this.sampler = new Filament.TextureSampler(\n            Filament.MinFilter.LINEAR_MIPMAP_LINEAR, Filament.MagFilter.LINEAR,\n            Filament.WrapMode.REPEAT);\n\n        this.pbrMaterial = this.engine.createMaterial(urls.pbrMaterial);\n        this.nonlitMaterial = this.engine.createMaterial(urls.nonlitMaterial);\n        this.texMaterial = this.engine.createMaterial(urls.texMaterial);\n\n        // Load the high-res skybox only after every other asset has been loaded.\n        const addEntity = (entity) => {\n            this.scene.addEntity(entity);\n            if (8 === this.scene.getRenderableCount()) {\n                Filament.fetch([urls.skyLarge], () => {\n                    this.engine.destroySkybox(this.skybox);\n                    this.skybox = this.engine.createSkyFromKtx(urls.skyLarge);\n                    this.scene.setSkybox(this.skybox);\n                });\n            }\n        };\n\n        // Load the ship first since it determines camera, then all other assets.\n        const filenames = [urls.diffuse, urls.specular, urls.normal, urls.mesh];\n        const shipUrls = filenames.map((path) => `ship/${path}`);\n        Filament.fetch(shipUrls, () => {\n\n            // Add the vehicle to scene.\n            const shipmi = this.pbrMaterial.createInstance();\n            this.ship = this.createRenderable(\"ship\", shipmi, 1.0);\n            addEntity(this.ship);\n\n            // Add buildings to scene.\n            for (const bgasset of [\"scrapers1\", \"scrapers2\"]) {\n                const bgurls = filenames.map((path) => `${bgasset}/${path}`);\n                Filament.fetch(bgurls, () => {\n                    const bgmi = this.pbrMaterial.createInstance();\n                    addEntity(this.createRenderable(bgasset, bgmi, 0.1));\n                });\n            }\n\n            // Add race track to scene.\n            for (const bgasset of [\"tracks\"]) {\n                const bgurls = filenames.map((path) => `${bgasset}/${path}`);\n                Filament.fetch(bgurls, () => {\n                    const bgmi = this.pbrMaterial.createInstance();\n                    addEntity(this.createRenderable(bgasset, bgmi, 0.0));\n                });\n            }\n\n            // Add blue boosters to scene.\n            const boosterUrl = \"bonusspeed/filamesh\";\n            Filament.fetch([boosterUrl], () => {\n                const mi = this.nonlitMaterial.createInstance();\n                mi.setFloat4Parameter(\"color\", [0.0, 0.8, 1.0, 1.0]);\n                const mesh = this.engine.loadFilamesh(boosterUrl, mi, {});\n                addEntity(mesh.renderable);\n            });\n\n            // Add start banner and solar panels.\n            const bannerTexUrl = \"startbanner/albedo.jpg\";\n            const bannerGeoUrl = \"startbanner/filamesh\";\n            Filament.fetch([bannerGeoUrl, bannerTexUrl], () => {\n                const mi = this.texMaterial.createInstance();\n                const albedo = this.engine.createTextureFromJpeg(bannerTexUrl);\n                mi.setTextureParameter(\"albedo\", albedo, this.sampler);\n                const mesh = this.engine.loadFilamesh(bannerGeoUrl, mi, {});\n                addEntity(mesh.renderable);\n            });\n\n            const panelsTexUrl = \"startpanels/albedo.jpg\";\n            const panelsGeoUrl = \"startpanels/filamesh\";\n            Filament.fetch([panelsGeoUrl, panelsTexUrl], () => {\n                const mi = this.texMaterial.createInstance();\n                const albedo = this.engine.createTextureFromJpeg(panelsTexUrl);\n                mi.setTextureParameter(\"albedo\", albedo, this.sampler);\n                const mesh = this.engine.loadFilamesh(panelsGeoUrl, mi, {});\n                addEntity(mesh.renderable);\n            });\n        });\n\n        const sunlight = Filament.EntityManager.get().create();\n        Filament.LightManager.Builder(Filament.LightManager$Type.SUN)\n            .color([0.98, 0.92, 0.89])\n            .castShadows(true)\n            .intensity(110000.0)\n            .direction([0.5, -1, 0])\n            .build(this.engine, sunlight);\n        addEntity(sunlight);\n\n        this.resize = this.resize.bind(this);\n        window.addEventListener(\"resize\", this.resize);\n        this.resize();\n    }\n\n    public render() {\n        if (this.ship) {\n            const tcm = this.engine.getTransformManager();\n            const inst = tcm.getInstance(this.ship);\n            tcm.setTransform(inst, this.vehicle.getMatrix() as unknown as number[]);\n            inst.delete();\n        }\n        this.renderer.render(this.swapChain, this.view);\n    }\n\n    private resize() {\n        const dpr = window.devicePixelRatio;\n        const width = this.canvas.width = window.innerWidth * dpr;\n        const height = this.canvas.height = window.innerHeight * dpr;\n        this.view.setViewport([0, 0, width, height]);\n\n        const aspect = width / height;\n        const Fov = Filament.Camera$Fov;\n        const fov = aspect < 1 ? Fov.HORIZONTAL : Fov.VERTICAL;\n        this.camera.setProjectionFov(45, aspect, 1.0, 20000.0, fov);\n    }\n\n    private createRenderable(name, matinstance, clearCoat) {\n        const diffuse = this.engine.createTextureFromJpeg(`${name}/${urls.diffuse}`);\n        const specular = this.engine.createTextureFromJpeg(`${name}/${urls.specular}`);\n        const normal = this.engine.createTextureFromJpeg(`${name}/${urls.normal}`);\n        matinstance.setTextureParameter(\"diffuse\", diffuse, this.sampler);\n        matinstance.setTextureParameter(\"specular\", specular, this.sampler);\n        matinstance.setTextureParameter(\"normal\", normal, this.sampler);\n\n        matinstance.setFloatParameter(\"metallic\", 1.0);\n        matinstance.setFloatParameter(\"reflectance\", 1.0);\n        matinstance.setFloatParameter(\"clearCoat\", clearCoat);\n        matinstance.setFloatParameter(\"clearCoatRoughness\", 0.0);\n\n        const entity = this.engine.loadFilamesh(`${name}/${urls.mesh}`, matinstance, {}).renderable;\n\n        const rm = this.engine.getRenderableManager();\n        const inst = rm.getInstance(entity);\n        rm.setCastShadows(inst, true);\n        rm.setReceiveShadows(inst, true);\n        inst.delete();\n\n        return entity;\n    }\n}\n","// -------------------------------------------------------------------------------------------------\n// Sampler allows the CPU to read from an image using bilinear interpolation.\n//\n//   - constructor(url: string)\n//   - getPixel(x: number, y: number): Color\n//   - getPixelBilinear(fx: number, fy: number): Color\n//   - getPixelF(x: number, y: number): Color\n//   - getPixelBilinearF(fx: number, fy: number): Color\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\ninterface Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n}\n\nexport default class Sampler {\n    public width: number;\n    public height: number;\n    private image: HTMLImageElement;\n    private pixels: ImageData;\n    private canvas: HTMLCanvasElement;\n\n    constructor(url: string) {\n        this.image = new Image();\n        this.pixels = null;\n        this.canvas = null;\n        this.image.onload = () => {\n            const canvas = this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = this.image.width;\n            this.canvas.height = this.image.height;\n            const context = this.canvas.getContext(\"2d\");\n            context.drawImage(this.image, 0, 0);\n            this.pixels = context.getImageData(0, 0, canvas.width, canvas.height);\n            this.width = this.pixels.width;\n            this.height = this.pixels.height;\n            this.canvas = null;\n            this.image = null;\n        };\n        this.image.src = url;\n    }\n\n    public ready(): boolean {\n        return this.image === null;\n    }\n\n    public getPixel(x: number, y: number): Color {\n        if (!this.pixels || x < 0 || y < 0 || x >= this.pixels.width || y >= this.pixels.height) {\n            return {r: 0, g: 0, b: 0, a: 0};\n        }\n        const i = (y * this.pixels.width + x) * 4;\n        return {\n            r: this.pixels.data[i],\n            g: this.pixels.data[i + 1],\n            b: this.pixels.data[i + 2],\n            a: this.pixels.data[i + 3],\n        };\n    }\n\n    public getPixelBilinear(fx: number, fy: number): Color {\n        const x = Math.floor(fx);\n        const y = Math.floor(fy);\n        const rx = fx - x - .5;\n        const ry = fy - y - .5;\n        const ax = Math.abs(rx);\n        const ay = Math.abs(ry);\n        const dx = rx < 0 ? -1 : 1;\n        const dy = ry < 0 ? -1 : 1;\n        const c = this.getPixel(x, y);\n        const cx = this.getPixel(x + dx, y);\n        const cy = this.getPixel(x, y + dy);\n        const cxy = this.getPixel(x + dx, y + dy);\n        const cf1 = [\n            (1 - ax) * c.r + ax * cx.r,\n            (1 - ax) * c.g + ax * cx.g,\n            (1 - ax) * c.b + ax * cx.b,\n            (1 - ax) * c.a + ax * cx.a,\n        ];\n        const cf2 = [\n            (1 - ax) * cy.r + ax * cxy.r,\n            (1 - ax) * cy.g + ax * cxy.g,\n            (1 - ax) * cy.b + ax * cxy.b,\n            (1 - ax) * cy.a + ax * cxy.a,\n        ];\n        return {\n            r: (1 - ay) * cf1[0] + ay * cf2[0],\n            g: (1 - ay) * cf1[1] + ay * cf2[1],\n            b: (1 - ay) * cf1[2] + ay * cf2[2],\n            a: (1 - ay) * cf1[3] + ay * cf2[3],\n        };\n    }\n\n    public getPixelF(x: number, y: number): number {\n        const c = this.getPixel(x, y);\n        return c.r + c.g * 255 + c.b * 255 * 255;\n    }\n\n    public getPixelFBilinear(x: number, y: number): number {\n        const c = this.getPixelBilinear(x, y);\n        return c.r + c.g * 255 + c.b * 255 * 255;\n    }\n}\n","// -------------------------------------------------------------------------------------------------\n// The Simulation listens to input events and periodically updates a matrix representing the\n// vehicle's position and orientation. Looks at two images (collision / elevation) to glean\n// information about the race track.\n//\n//   - constructor(vehicle: Vehicle, collision: Sampler, elevation: Sampler)\n//   - tick(dt: number)\n//   - getNormalizedSpeed(): number\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport Sampler from \"./sampler\";\nimport Vehicle from \"./vehicle\";\n\nimport { mat4, quat, vec3 } from \"gl-matrix\";\n\nexport default class Simulation {\n    private readonly boosterSpeed: number;\n    private readonly collision: Sampler;\n    private readonly elevation: Sampler;\n    private readonly gfxvehicle: Vehicle;\n    private readonly keyState: KeyState;\n    private readonly maxSpeed: number;\n    private readonly simvehicle: Vehicle;\n\n    private active: boolean;\n    private destroyed: boolean;\n    private falling: boolean;\n    private movement: vec3;\n    private roll: number;\n    private rollAxis: vec3;\n    private drift: number;\n    private speed: number;\n    private speedRatio: number;\n    private boost: number;\n    private shield: number;\n    private yawAngle: number;\n    private quaternion: quat;\n    private collisionPixelRatio: number;\n    private collisionDetection: boolean;\n    private collisionPreviousPosition: vec3;\n    private heightPixelRatio: number;\n    private heightBias: number;\n    private heightLerp: number;\n    private heightScale: number;\n    private shieldDelay: number;\n\n    private readonly rollAngle: number;\n    private readonly rollLerp: number;\n    private readonly rollDirection: vec3;\n\n    private gradient: number;\n    private gradientTarget: number;\n    private gradientLerp: number;\n    private gradientScale: number;\n    private gradientVector: vec3;\n    private tilt: number;\n    private tiltTarget: number;\n    private tiltLerp: number;\n    private tiltScale: number;\n    private tiltVector: vec3;\n    private repulsionVLeft: vec3;\n    private repulsionVRight: vec3;\n    private repulsionVFront: vec3;\n    private repulsionVScale: number;\n    private repulsionAmount: number;\n    private repulsionForce: vec3;\n    private fallVector: vec3;\n\n    // The sole purpose of this struct is to allow the \"visual effects\" (particles etc)\n    // to check if the vehicle has been banged up.\n    private collisionState: CollisionState;\n\n    constructor(vehicle: Vehicle, collision: Sampler, elevation: Sampler) {\n        // The orientation of the simulation vehicle only includes yaw.\n        this.simvehicle = new Vehicle(vehicle.position);\n\n        // The graphics vehicle includes roll and pitch as well, but for visual appeal only.\n        this.gfxvehicle = vehicle;\n\n        this.collision = collision;\n        this.elevation = elevation;\n        this.keyState = {\n            backward: false,\n            forward: false,\n            left: false,\n            ltrigger: false,\n            right: false,\n            rtrigger: false,\n            use: false,\n        };\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n        document.addEventListener(\"keyup\", this.onKeyUp.bind(this));\n\n        this.maxSpeed = 7.0;\n        this.boosterSpeed = this.maxSpeed * 0.2;\n        this.active = true;\n        this.destroyed = false;\n        this.falling = false;\n        this.movement = vec3.fromValues(0, 0, 0);\n        this.roll = 0.0;\n        this.rollAxis = vec3.create();\n        this.drift = 0.0;\n        this.shieldDelay = 60;\n        this.speed = 0.0;\n        this.speedRatio = 0.0;\n        this.boost = 0.0;\n        this.shield = 1.0;\n        this.yawAngle = 0.0;\n        this.quaternion = quat.create();\n        this.collisionPixelRatio = 2048.0 / 6000.0;\n        this.collisionDetection = true;\n        this.collisionPreviousPosition = vec3.create();\n        this.heightPixelRatio = 2048.0 / 6000.0;\n        this.heightBias = 4.0;\n        this.heightLerp = 0.4;\n        this.heightScale = 10.0;\n        this.rollAngle = 0.6;\n        this.rollLerp = 0.08;\n        this.rollDirection = vec3.fromValues(0, 0, 1);\n        this.gradient = 0.0;\n        this.gradientTarget = 0.0;\n        this.gradientLerp = 0.05;\n        this.gradientScale = 1; // 4.0;\n        this.gradientVector = vec3.fromValues(0, 0, 5);\n        this.tilt = 0.0;\n        this.tiltTarget = 0.0;\n        this.tiltLerp = 0.05;\n        this.tiltScale = 1; // 4.0;\n        this.tiltVector = vec3.fromValues(5, 0, 0);\n        this.repulsionVLeft = vec3.fromValues(1, 0, 0);\n        this.repulsionVRight = vec3.fromValues(-1, 0, 0);\n        this.repulsionVFront = vec3.fromValues(0, 0, 1);\n        this.repulsionVScale = 1; // 4.0;\n        this.repulsionAmount = 0.0;\n        this.repulsionForce = vec3.create();\n\n        // this.resetPos = null;\n        // this.resetRot = null;\n\n        this.collisionState = {\n            front: false,\n            left: false,\n            right: false,\n        };\n    }\n\n    public tick(dt: number) {\n        if (!this.collision.ready() || !this.elevation.ready()) {\n            return;\n        }\n        if (this.falling) {\n            vec3.add(this.gfxvehicle.position, this.gfxvehicle.position, this.fallVector);\n            return;\n        }\n        vec3.copy(this.simvehicle.position, this.gfxvehicle.position);\n        vec3.set(this.movement, 0, 0, 0);\n        this.drift = -this.drift * driftLerp;\n        this.yawAngle = -this.yawAngle * yawAngleLerp * .5;\n\n        let rollAmount = 0;\n        let yawAngleAmount = 0;\n        const yawLeap = 0;\n\n        if (this.active) {\n            if (this.keyState.left) {\n                yawAngleAmount += yawAngleSpeed * dt;\n                rollAmount -= this.rollAngle;\n            }\n            if (this.keyState.right) {\n                yawAngleAmount -= yawAngleSpeed * dt;\n                rollAmount += this.rollAngle;\n            }\n\n            if (this.keyState.forward) {\n                this.speed += thrust * dt;\n            } else {\n                this.speed -= airResist * dt;\n            }\n\n            if (this.keyState.ltrigger) {\n                if (this.keyState.left) {\n                    yawAngleAmount += airAngularSpeed * dt;\n                } else {\n                    yawAngleAmount += airAngularSpeed * .5 * dt;\n                }\n                this.speed -= airBrake * dt;\n                this.drift += (airDrift - this.drift) * driftLerp;\n                this.movement[0] += this.speed * this.drift * dt;\n                if (this.drift > 0) {\n                    this.movement[2] -= this.speed * this.drift * dt;\n                }\n                rollAmount -= this.rollAngle * .7;\n            }\n\n            if (this.keyState.rtrigger) {\n                if (this.keyState.right) {\n                    yawAngleAmount -= airAngularSpeed * dt;\n                } else {\n                    yawAngleAmount -= airAngularSpeed * .5 * dt;\n                }\n                this.speed -= airBrake * dt;\n                this.drift += (-airDrift - this.drift) * driftLerp;\n                this.movement[0] += this.speed * this.drift * dt;\n                if (this.drift < 0) {\n                    this.movement[2] += this.speed * this.drift * dt;\n                }\n                rollAmount += this.rollAngle * .7;\n            }\n        }\n\n        this.yawAngle += (yawAngleAmount - this.yawAngle) * yawAngleLerp;\n\n        this.speed = Math.max(0, Math.min(this.speed, maxSpeed));\n        this.speedRatio = this.speed / maxSpeed;\n        this.movement[2] += this.speed * dt;\n\n        if (vec3AlmostEquals(this.repulsionForce, zero3, 0.0001)) {\n            vec3.copy(this.repulsionForce, zero3);\n        } else {\n            if (this.repulsionForce[2] !== 0) {\n                this.movement[2] = 0;\n            }\n            vec3.add(this.movement, this.movement, this.repulsionForce);\n            const t = dt > 1.5 ? repulsionLerp * 2 : repulsionLerp;\n            vec3.lerp(this.repulsionForce, this.repulsionForce, zero3, t);\n        }\n\n        vec3.copy(this.collisionPreviousPosition, this.simvehicle.position);\n        this.boosterCheck(dt);\n\n        this.simvehicle.translate(vec3.fromValues(this.movement[0], 0, this.movement[2]));\n        this.heightCheck();\n\n        this.simvehicle.translate(vec3.fromValues(0, this.movement[1], 0));\n        this.collisionCheck(dt);\n\n        // The original HexGL app directly manipulated the Y component of this quat value, but I\n        // feel it is more sensical to build the quat from from Euler anglers.\n        const degrees = this.yawAngle * 150.0;\n        quat.identity(this.quaternion);\n        quat.fromEuler(this.quaternion, 0, degrees, 0);\n        quat.multiply(this.simvehicle.orientation, this.simvehicle.orientation, this.quaternion);\n\n        // The remaining rotations affect the graphics vehicle but not the simulation vehicle.\n        const xform = mat4.identity(mat4.create());\n\n        // Gradient\n        const gradientDelta = (this.gradientTarget - (yawLeap + this.gradient)) * this.gradientLerp;\n        if (Math.abs(gradientDelta) > epsilon) {\n            this.gradient += gradientDelta;\n        }\n        if (Math.abs(this.gradient) > epsilon) {\n            mat4.rotate(xform, xform, this.gradient, gradientAxis);\n        }\n\n        // Tilting\n        const tiltDelta = (this.tiltTarget - this.tilt) * this.tiltLerp;\n        if (Math.abs(tiltDelta) > epsilon) {\n            this.tilt += tiltDelta;\n        }\n        if (Math.abs(this.tilt) > epsilon) {\n            mat4.rotate(xform, xform, this.tilt, tiltAxis);\n        }\n\n        // Rolling\n        const rollDelta = (rollAmount - this.roll) * this.rollLerp;\n        if (Math.abs(rollDelta) > epsilon) {\n            this.roll += rollDelta;\n        }\n        if (Math.abs(this.roll) > epsilon) {\n            vec3.copy(this.rollAxis, this.rollDirection);\n            mat4.rotate(xform, xform, this.roll, this.rollAxis);\n        }\n\n        mat4.multiply(xform, this.simvehicle.getMatrix(), xform);\n        mat4.getTranslation(this.gfxvehicle.position, xform);\n        mat4.getRotation(this.gfxvehicle.orientation, xform);\n    }\n\n    public getNormalizedSpeed(): number {\n        return (this.speed + this.boost) / this.maxSpeed;\n    }\n\n    private onKeyDown(event) {\n        const key = this.keyState;\n        switch (event.keyCode) {\n            case 38: /*up*/ key.forward = true; break;\n            case 40: /*down*/ key.backward = true; break;\n            case 37: /*left*/ key.left = true; break;\n            case 39: /*right*/ key.right = true; break;\n            case 81: /*Q*/ key.ltrigger = true; break;\n            case 65: /*A*/ key.ltrigger = true; break;\n            case 68: /*D*/ key.rtrigger = true; break;\n            case 69: /*E*/ key.rtrigger = true; break;\n        }\n    }\n\n    private onKeyUp(event) {\n        const key = this.keyState;\n        switch (event.keyCode) {\n            case 38: /*up*/ key.forward = false; break;\n            case 40: /*down*/ key.backward = false; break;\n            case 37: /*left*/ key.left = false; break;\n            case 39: /*right*/ key.right = false; break;\n            case 81: /*Q*/ key.ltrigger = false; break;\n            case 65: /*A*/ key.ltrigger = false; break;\n            case 68: /*D*/ key.rtrigger = false; break;\n            case 69: /*E*/ key.rtrigger = false; break;\n        }\n    }\n\n    private collisionCheck(dt: number): void {\n        if (this.shieldDelay > 0) {\n            this.shieldDelay -= dt;\n        }\n        this.collisionState.left = false;\n        this.collisionState.right = false;\n        this.collisionState.front = false;\n\n        const simpos = this.simvehicle.position;\n        const simquat = this.simvehicle.orientation;\n\n        const x = this.collision.width / 2 + simpos[0] * this.collisionPixelRatio;\n        const z = this.collision.height / 2 + simpos[2] * this.collisionPixelRatio;\n        const pos = vec3.fromValues(x, 0, z);\n\n        const collision = this.collision.getPixelBilinear(x, z);\n        if (collision.r < 255) {\n\n            // shield\n            const sr = (this.getRealSpeed() / maxSpeed);\n            this.shield -= sr * sr * 0.8 * shieldDamage;\n\n            // repulsion\n            vec3.set(this.repulsionVLeft, 1, 0, 0);\n            vec3.set(this.repulsionVRight, -1, 0, 0);\n            vec3.transformQuat(this.repulsionVLeft, this.repulsionVLeft, simquat);\n            vec3.transformQuat(this.repulsionVRight, this.repulsionVRight, simquat);\n            vec3.scale(this.repulsionVLeft, this.repulsionVLeft, this.repulsionVScale);\n            vec3.scale(this.repulsionVRight, this.repulsionVRight, this.repulsionVScale);\n\n            const lPos = vec3.add(this.repulsionVLeft, this.repulsionVLeft, pos);\n            const rPos = vec3.add(this.repulsionVRight, this.repulsionVRight, pos);\n            const lCol = this.collision.getPixel(Math.round(lPos[0]), Math.round(lPos[2])).r;\n            const rCol = this.collision.getPixel(Math.round(rPos[0]), Math.round(rPos[2])).r;\n\n            this.repulsionAmount = Math.max(0.8, Math.min(repulsionCap, this.speed * repulsionRatio));\n            if (rCol > lCol) {\n                this.repulsionForce[0] -= this.repulsionAmount;\n                this.collisionState.left = true;\n            } else if (rCol < lCol) {\n                this.repulsionForce[0] += this.repulsionAmount;\n                this.collisionState.right = true;\n            } else {\n                this.repulsionForce[2] -= this.repulsionAmount * 4;\n                this.collisionState.front = true;\n                this.speed = 0;\n            }\n\n            // game over\n            if (rCol < 128 && lCol < 128) {\n                const fCol = this.collision.getPixel(Math.round(pos[0] + 2), Math.round(pos[2] + 2)).r;\n                if (fCol < 128) {\n                    console.log(\"GAMEOVER\");\n                    // this.fall();\n                }\n            }\n\n            this.speed *= collisionSpeedDecrease;\n            this.speed *= (1 - collisionSpeedDecreaseCoef * (1 - collision.r / 255));\n            this.boost = 0;\n        }\n    }\n\n    private getRealSpeed(): number {\n        return Math.round(this.speed + this.boost);\n    }\n\n    private boosterCheck(dt: number): void {\n        const simpos = this.simvehicle.position;\n        this.boost -= boosterDecay * dt;\n        if (this.boost < 0) {\n            this.boost = 0.0;\n            // bkcore.Audio.stop('boost');\n        }\n\n        const x = Math.round(this.collision.width / 2 + simpos[0] * this.collisionPixelRatio);\n        const z = Math.round(this.collision.height / 2 + simpos[2] * this.collisionPixelRatio);\n\n        const color = this.collision.getPixel(x, z);\n\n        if (color.r === 255 && color.g < 127 && color.b < 127) {\n            // bkcore.Audio.play('boost');\n            this.boost = this.boosterSpeed;\n        }\n\n        this.movement[2] += this.boost * dt;\n    }\n\n    private heightCheck(): void {\n        const simpos = this.simvehicle.position;\n        const simquat = this.simvehicle.orientation;\n\n        let x = this.elevation.width / 2 + simpos[0] * this.heightPixelRatio;\n        let z = this.elevation.height / 2 + simpos[2] * this.heightPixelRatio;\n        const height = this.elevation.getPixelFBilinear(x, z) / this.heightScale + this.heightBias;\n        if (height < 16777) {\n            const delta = height - simpos[1];\n            if (delta > 0) {\n                this.movement[1] += delta;\n            } else {\n                this.movement[1] += delta * this.heightLerp;\n            }\n        }\n\n        // gradient\n        vec3.set(this.gradientVector, 0, 0, 5);\n        vec3.transformQuat(this.gradientVector, this.gradientVector, simquat);\n        vec3.add(this.gradientVector, this.gradientVector, simpos);\n        x = this.elevation.width / 2 + this.gradientVector[0] * this.heightPixelRatio;\n        z = this.elevation.height / 2 + this.gradientVector[2] * this.heightPixelRatio;\n        let nheight = this.elevation.getPixelFBilinear(x, z) / this.heightScale + this.heightBias;\n        if (nheight < 16777) {\n            this.gradientTarget = -Math.atan2(nheight - height, 5.0) * this.gradientScale;\n        }\n\n        // tilt\n        vec3.set(this.tiltVector, 5, 0, 0);\n        vec3.transformQuat(this.tiltVector, this.tiltVector, simquat);\n        vec3.add(this.tiltVector, this.tiltVector, simpos);\n        x = this.elevation.width / 2 + this.tiltVector[0] * this.heightPixelRatio;\n        z = this.elevation.height / 2 + this.tiltVector[2] * this.heightPixelRatio;\n        nheight = this.elevation.getPixelFBilinear(x, z) / this.heightScale + this.heightBias;\n        if (nheight >= 16777) {\n            vec3.subtract(this.tiltVector, this.tiltVector, simpos);\n            vec3.scale(this.tiltVector, this.tiltVector, -1);\n            vec3.add(this.tiltVector, this.tiltVector, simpos);\n            x = this.elevation.width / 2 + this.tiltVector[0] * this.heightPixelRatio;\n            z = this.elevation.height / 2 + this.tiltVector[2] * this.heightPixelRatio;\n            nheight = this.elevation.getPixelFBilinear(x, z) / this.heightScale + this.heightBias;\n        }\n        if (nheight < 16777) {\n            this.tiltTarget = Math.atan2(nheight - height, 5.0) * this.tiltScale;\n        }\n    }\n}\n\ninterface KeyState {\n    forward: boolean;\n    backward: boolean;\n    left: boolean;\n    right: boolean;\n    ltrigger: boolean;\n    rtrigger: boolean;\n    use: boolean;\n}\n\ninterface CollisionState {\n    front: boolean;\n    left: boolean;\n    right: boolean;\n}\n\nconst epsilon = 0.00000001;\nconst zero3 = vec3.create();\nconst airResist = 0.02;\nconst airDrift = 0.1;\nconst thrust = 0.02;\nconst airBrake = 0.02;\nconst maxSpeed = 7.0;\nconst boosterSpeed = this.maxSpeed * 0.2;\nconst boosterDecay = 0.01;\nconst yawAngleSpeed = 0.005;\nconst airAngularSpeed = 0.0065;\nconst repulsionRatio = 0.5;\nconst repulsionCap = 2.5;\nconst repulsionLerp = 0.1;\nconst collisionSpeedDecrease = 0.8;\nconst collisionSpeedDecreaseCoef = 0.8;\nconst maxShield = 1.0;\nconst shieldTiming = 0;\nconst shieldDamage = 0.25;\nconst driftLerp = 0.35;\nconst yawAngleLerp = 0.35;\nconst fallVector = vec3.fromValues(0, -20, 0);\nconst gradientAxis = vec3.fromValues(1, 0, 0);\nconst tiltAxis = vec3.fromValues(0, 0, 1);\n\nfunction vec3AlmostEquals(a: vec3, b: vec3, vepsilon: number): boolean {\n    const a0 = a[0], a1 = a[1], a2 = a[2];\n    const b0 = b[0], b1 = b[1], b2 = b[2];\n    return (Math.abs(a0 - b0) <= vepsilon * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= vepsilon * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= vepsilon * Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n"],"sourceRoot":""}