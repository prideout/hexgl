{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./filament/filament.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/urls.ts","webpack:///./node_modules/process/browser.js","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///./src/vehicle.ts","webpack:///./src/app.ts","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///external \"crypto\"","webpack:///./src/audio.ts","webpack:///./src/chasecam.ts","webpack:///./src/display.ts","webpack:///./src/simulation.ts","webpack:///./src/sampler.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Filament","Module","moduleOverrides","status","toThrow","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","window","importScripts","process","nodeFS","nodePath","scriptDirectory","locateFile","path","__dirname","filename","binary","ret","toString","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","reason","read","f","data","readbuffer","scriptArgs","arguments","quit","document","currentScript","src","self","location","href","indexOf","split","join","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","title","out","console","log","print","err","printErr","warn","undefined","STACK_ALIGN","staticAlloc","size","STATICTOP","dynamicAlloc","HEAP32","DYNAMICTOP_PTR","end","TOTAL_MEMORY","enlargeMemory","alignMemory","factor","Math","ceil","getNativeTypeSize","type","bits","parseInt","substr","asm2wasmImports","f64-rem","x","y","debugger","Array","ABORT","condition","text","abort","setValue","ptr","noSafe","charAt","HEAP8","HEAP16","tempI64","tempDouble","Math_abs","Math_min","Math_floor","Math_ceil","HEAPF32","HEAPF64","ALLOC_NORMAL","ALLOC_STATIC","ALLOC_NONE","allocate","slab","types","allocator","zeroinit","singleType","_malloc","stackAlloc","max","stop","subarray","HEAPU8","set","typeSize","previousType","curr","Pointer_stringify","hasUtf","String","fromCharCode","apply","min","UTF8ToString","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","endPtr","decode","u0","u1","u2","u3","u4","str","ch","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","endIdx","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","stackTrace","js","Error","stack","e","jsStackTrace","HEAPU16","HEAPU32","STACK_BASE","STACKTOP","STACK_MAX","DYNAMIC_BASE","PAGE_SIZE","WASM_PAGE_SIZE","ASMJS_PAGE_SIZE","MIN_TOTAL_MEMORY","alignUp","multiple","updateGlobalBuffer","buf","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","PAGE_MULTIPLE","LIMIT","OLD_TOTAL_MEMORY","replacement","byteLength","ArrayBuffer","transfer","oldHEAP8","_emscripten_replace_memory","Function","getOwnPropertyDescriptor","TOTAL_STACK","callRuntimeCallbacks","callbacks","callback","shift","func","arg","WebAssembly","Memory","initial","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATEXIT__","__ATPOSTRUN__","runtimeInitialized","abs","floor","Math_clz32","clz32","runDependencies","runDependencyWatcher","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","clearInterval","dataURIPrefix","isDataURI","startsWith","wasmTextFile","wasmBinaryFile","asmjsCodeFile","info","global","env","asm2wasm","parent","getBinary","doNativeWasm","providedBuffer","receiveInstance","instance","memory","newBuffer","oldBuffer","oldView","mergeMemory","NaN","Infinity","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","Promise","resolve","reject","credentials","then","catch","instantiate","instantiateStreaming","asmjsReallocBuffer","finalMethod","oldSize","grow","wasmReallocBuffer","TABLE_SIZE","MAX_TABLE_SIZE","Table","maximum","element","integrateWasmJS","STATIC_BASE","push","__GLOBAL__sub_I_jsenums_cpp","__GLOBAL__sub_I_jsbindings_cpp","__GLOBAL__sub_I_Engine_cpp","__GLOBAL__sub_I_gl_headers_cpp","__GLOBAL__sub_I_bind_cpp","tempDoublePtr","__ZSt18uncaught_exceptionv","uncaught_exception","EXCEPTIONS","last","caught","infos","deAdjust","adjusted","addRef","refcount","decRef","rethrown","destructor","___cxa_free_exception","clearRef","ERRNO_CODES","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","EWOULDBLOCK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EDEADLK","ENOLCK","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EDEADLOCK","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","ENOSYS","ENOTEMPTY","ENAMETOOLONG","ELOOP","EOPNOTSUPP","EPFNOSUPPORT","ECONNRESET","ENOBUFS","EAFNOSUPPORT","EPROTOTYPE","ENOTSOCK","ENOPROTOOPT","ESHUTDOWN","ECONNREFUSED","EADDRINUSE","ECONNABORTED","ENETUNREACH","ENETDOWN","ETIMEDOUT","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EALREADY","EDESTADDRREQ","EMSGSIZE","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EADDRNOTAVAIL","ENETRESET","EISCONN","ENOTCONN","ETOOMANYREFS","EUSERS","EDQUOT","ESTALE","ENOTSUP","ENOMEDIUM","EILSEQ","EOVERFLOW","ECANCELED","ENOTRECOVERABLE","EOWNERDEAD","ESTRPIPE","ERRNO_MESSAGES","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","122","123","125","130","131","___setErrNo","PATH","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","splice","unshift","normalize","isAbsolute","trailingSlash","filter","dirname","result","root","dir","basename","lastSlash","lastIndexOf","extname","paths","join2","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","fromParts","toParts","samePartsLength","outputParts","concat","TTY","ttys","init","shutdown","register","dev","ops","input","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","flush","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","Buffer","isPosixPlatform","platform","fd","stdin","usingDevice","fs","openSync","readSync","closeSync","prompt","readline","intArrayFromString","val","default_tty1_ops","MEMFS","ops_table","mount","createNode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","IDBFS","dbs","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_VERSION","DB_STORE_NAME","syncfs","populate","getLocalSet","local","getRemoteSet","remote","dst","reconcile","getDB","req","db","onupgradeneeded","fileStore","target","transaction","objectStoreNames","contains","objectStore","createObjectStore","indexNames","createIndex","unique","onsuccess","this","error","preventDefault","isRealDir","toAbsolute","check","mountpoint","map","stat","pop","index","openKeyCursor","event","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","mkdir","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","put","removeRemoteEntry","delete","total","keys","forEach","e2","remove","completed","done","errored","sort","reverse","NODEFS","isWindows","staticInit","match","flagsForNodeMap","1024","128","4096","512","bufferFrom","arrayBuffer","alloc","getMode","opts","lstatSync","code","realPath","flagsForNode","newFlags","k","chmodSync","date","utimesSync","truncateSync","mkdirSync","writeFileSync","oldNode","newDir","newName","oldPath","newPath","renameSync","unlinkSync","rmdirSync","readdirSync","symlinkSync","readlinkSync","NODEJS_PATH","nfd","writeSync","fstatSync","WORKERFS","DIR_MODE","FILE_MODE","reader","FileReaderSync","createdParents","ensureParent","base","lastModifiedDate","obj","pack","files","getTime","chunk","ab","readAsArrayBuffer","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","handleFSError","errno","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","mayLookup","nodeName","FSNode","defineProperties","isFolder","isDevice","destroyNode","isSocket","flagModes","rs","r+","w","wx","xw","w+","wx+","xw+","a","ax","xa","a+","ax+","xa+","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","pseudo","mountRoot","unmount","next","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","message","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","random","createDevice","createSpecialDirectories","createStandardStreams","stdout","stderr","ensureErrnoError","setErrno","writable","constructor","fflush","canRead","canWrite","joinPath","forceRelative","absolutePath","standardizePath","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createFolder","createPath","part","createFile","properties","createDataFile","createLink","forceLoadFile","success","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","fn","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","handled","plugin","asyncLoad","DB_NAME","pathname","saveFilesToDB","openRequest","ok","fail","putRequest","loadFilesFromDB","getRequest","SYSCALLS","DEFAULT_POLLMASK","mappings","umask","calculateAt","dirfd","dirstream","doStat","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","doWritev","varargs","getStr","getStreamFromFD","getSocketFromFD","socket","SOCKFS","getSocket","getSocketAddress","allowNull","addrp","addrlen","__read_sockaddr","DNS","lookup_addr","get64","low","high","getZero","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","shallowCopyInternalPointer","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","ClassHandle_clone","clone","getPrototypeOf","runDestructor","handle","rawDestructor","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","destructorFunction","replacePublicSymbol","embind__requireFunction","signature","rawFunction","fp","FUNCTION_TABLE","dc","dynCall","args","makeDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","unboundTypes","seen","visit","new_","argumentList","dummy","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","heap32VectorToArray","firstElement","array","validateThis","this_","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","enumReadValueFromPointer","signed","heap","requireRegisteredType","impl","v","floatReadValueFromPointer","integerReadValueFromPointer","requireHandle","emval_symbols","getStringOrSymbol","address","symbol","_emscripten_get_now","_emscripten_get_now_is_monotonic","dateNow","_emscripten_set_main_loop_timing","mainLoop","timingMode","timingValue","scheduler","timeUntilNextTick","tickStartTime","setTimeout","runner","method","requestAnimationFrame","setImmediate","setImmediates","emscriptenMainLoopMessageId","addEventListener","stopPropagation","postMessage","_emscripten_set_main_loop","fps","simulateInfiniteLoop","noSetTiming","browserIterationFunc","thisMainLoopId","currentlyRunningMainloop","queue","blocker","remainingBlockers","remaining","counted","updateStatus","currentFrameNumber","ctx","runIter","SDL","audio","queueNewAudioData","pause","resume","expected","expectedBlockers","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","canHandle","test","b","getMimetype","warnOnce","shown","bb","append","getBlob","createObjectURL","img","Image","complete","canvas","createElement","width","height","getContext","drawImage","revokeObjectURL","audioPlugin","noAudioDecoding",".ogg",".wav",".mp3","Audio","BASE","leftchar","leftbits","PAD","encode64","safeSetTimeout","requestPointerLock","exitPointerLock","pointerLockChange","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","attribute","GL","GLctx","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","vrDevice","fullscreenChange","canvasContainer","parentNode","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","insertBefore","removeChild","setWindowedCanvasSize","appendChild","Element","vrDisplay","requestFullScreen","nextRAF","fakeRequestAnimationFrame","delay","safeCallback","allowAsyncCallbacks","queuedAsyncCallbacks","pauseAsyncCallbacks","resumeAsyncCallbacks","safeRequestAnimationFrame","timeout","safeSetInterval","setInterval","jpg","jpeg","png","bmp","ogg","wav","mp3","getUserMedia","navigator","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseEvent","rect","getBoundingClientRect","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","pageX","adjustedY","pageY","top","coords","identifier","noRunDep","dep","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","screen","wNative","hNative","widthNative","heightNative","h","round","style","removeProperty","setProperty","wgetRequests","nextWgetRequestHandle","getNextWgetRequestHandle","counter","lastError","buffers","mappedBuffers","programs","framebuffers","renderbuffers","textures","uniforms","shaders","vaos","contexts","currentContext","offscreenCanvases","timerQueriesEXT","queries","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","programInfos","stringCache","stringiCache","tempFixedLengthArray","packAlignment","unpackAlignment","miniTempBuffer","MINI_TEMP_BUFFER_SIZE","miniTempBufferViews","recordError","errorCode","getNewId","table","getSource","shader","string","source","frag","WebGL2RenderingContext","errorInfo","onContextCreationError","statusMessage","majorVersion","minorVersion","removeEventListener","JSON","stringify","registerContext","context","attributes","version","getChromeVersion","raw","userAgent","supportsWebGL2EntryPoints","GLctxObject","initExtensions","deleteContext","JSEvents","removeAllHandlersOnTarget","initExtensionsDone","maxVertexAttribs","getParameter","MAX_VERTEX_ATTRIBS","instancedArraysExt","getExtension","divisor","first","primcount","indices","vaoExt","vao","drawBuffersExt","bufs","disjointTimerQueryExt","automaticallyEnabledExtensions","exts","getSupportedExtensions","ext","populateUniformTable","program","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","ptable","utable","numUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","ls","loc","getUniformLocation","j","_emscripten_glDrawElements","drawElements","emscriptenWebGLGet","name_","WebGLBuffer","WebGLProgram","WebGLFramebuffer","WebGLRenderbuffer","WebGLQuery","WebGLSampler","WebGLSync","WebGLTransformFeedback","WebGLVertexArrayObject","WebGLTexture","emscriptenWebGLGetIndexed","emscriptenWebGLGetUniform","params","getUniform","emscriptenWebGLGetVertexAttrib","pname","getVertexAttrib","fround","emscriptenWebGLComputeImageSize","sizePerPixel","alignment","plainRowSize","alignedRowSize","emscriptenWebGLGetTexPixelData","format","pixels","internalFormat","numChannels","bytes","emscriptenWebGLGetHeapForType","emscriptenWebGLGetShiftForType","_llvm_ceil_f32","_llvm_cttz_i32","_llvm_exp2_f32","pow","_llvm_fabs_f32","_llvm_floor_f32","PTHREAD_SPECIFIC","PTHREAD_SPECIFIC_NEXT_KEY","performance","stringy","dontAddNull","u8array","numBytesWritten","asmGlobalArg","asmLibraryArg","getTotalMemory","abortOnCannotGrowMemory","invoke_fi","a1","sp","stackSave","stackRestore","invoke_fii","a2","invoke_i","invoke_ii","invoke_iif","invoke_iiff","a3","invoke_iii","invoke_iiif","invoke_iiiff","a4","invoke_iiii","invoke_iiiii","invoke_iiiiii","a5","invoke_iiiiiii","a6","invoke_iiiiiiii","a7","invoke_iiij","invoke_jii","invoke_v","invoke_vd","invoke_vdd","invoke_vdddddd","invoke_vf","invoke_vff","invoke_vffff","invoke_vfi","invoke_vi","invoke_viddddi","invoke_vif","invoke_viff","invoke_vifff","invoke_viffff","invoke_vii","invoke_viidddddd","a8","invoke_viiddddi","invoke_viif","invoke_viiff","invoke_viifff","invoke_viifi","invoke_viii","invoke_viiidddddd","a9","invoke_viiif","invoke_viiii","invoke_viiiii","invoke_viiiiii","invoke_viiiiiii","invoke_viiiiiiii","invoke_viiiiiiiii","invoke_viiiiiiiiii","a10","invoke_viiiiiiiiiii","a11","invoke_vij","___atomic_compare_exchange_8","desiredl","desiredh","weak","success_memmodel","failure_memmodel","pl","ph","el","eh","___cxa_begin_catch","___cxa_find_matching_catch","thrown","setTempRet0","throwntype","typeArray","___cxa_pure_virtual","___gxx_personality_v0","___resumeException","___syscall140","which","offset_low","___syscall146","___syscall221","___syscall3","___syscall5","___syscall54","op","argp","___syscall6","__embind_finalize_value_array","rawTupleType","reg","elements","elementsLength","elementTypes","elt","getterReturnType","setterArgumentType","getterContext","setter","setterContext","fromWireType","toWireType","argPackAdvance","readValueFromPointer","__embind_register_bool","trueValue","falseValue","wt","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","__embind_register_class_class_function","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","rawArgTypes","unboundTypesHandler","invokerArgsArray","__embind_register_class_constructor","invoker","__embind_register_class_function","isPureVirtual","className","memberFunction","__embind_register_class_property","fieldName","getterSignature","setterSignature","desc","configurable","__embind_register_emval","__embind_register_enum","isSigned","ctor","values","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","__embind_register_float","__embind_register_function","__embind_register_integer","primitiveType","minRange","maxRange","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","getHeap","HEAP","__embind_register_value_array","constructorSignature","__embind_register_value_array_element","__embind_register_void","isVoid","__emval_as","returnType","destructorsRef","rd","__emval_get_property","__emval_incref","__emval_new_cstring","__emval_run_destructors","__emval_take_value","argv","_abort","_clock_gettime","clk_id","tp","_eglGetProcAddress","_emscripten_GetProcAddress","_emscripten_glActiveTexture","x0","_emscripten_glAttachShader","attachShader","_emscripten_glBeginConditionalRender","_emscripten_glBeginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","bufferObj","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","bindBuffer","_emscripten_glBindBufferBase","_emscripten_glBindBufferRange","ptrsize","_emscripten_glBindFragDataLocation","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindProgramARB","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindVertexArray","_emscripten_glBlendColor","x1","x2","x3","_emscripten_glBlendEquation","_emscripten_glBlendEquationSeparate","_emscripten_glBlendFunc","_emscripten_glBlendFuncSeparate","_emscripten_glBufferData","usage","bufferData","_emscripten_glBufferSubData","bufferSubData","_emscripten_glCheckFramebufferStatus","_emscripten_glClampColor","_emscripten_glClear","_emscripten_glClearBufferfi","_emscripten_glClearBufferfv","drawbuffer","_emscripten_glClearBufferiv","_emscripten_glClearBufferuiv","_emscripten_glClearColor","_emscripten_glClearDepth","_emscripten_glClearDepthf","_emscripten_glClearStencil","_emscripten_glClientActiveTexture","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glColorMaski","_emscripten_glColorPointer","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","border","imageSize","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","_emscripten_glCopyTexImage2D","x4","x5","x6","x7","_emscripten_glCopyTexSubImage2D","_emscripten_glCreateProgram","createProgram","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","_emscripten_glDeleteBuffers","deleteBuffer","currArrayBuffer","currElementArrayBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteObjectARB","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteVertexArrays","_emscripten_glDepthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRange","_emscripten_glDepthRangef","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDisablei","_emscripten_glDrawArrays","drawArrays","_emscripten_glDrawArraysInstanced","_emscripten_glDrawBuffers","bufArray","_emscripten_glDrawElementsInstanced","_emscripten_glDrawRangeElements","_emscripten_glEnable","_emscripten_glEnableClientState","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEnablei","_emscripten_glEndConditionalRender","_emscripten_glEndTransformFeedback","_emscripten_glFinish","_emscripten_glFlush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFrontFace","_emscripten_glFrustum","_emscripten_glGenBuffers","createBuffer","_emscripten_glGenFramebuffers","ids","createFramebuffer","_emscripten_glGenRenderbuffers","createRenderbuffer","_emscripten_glGenTextures","createTexture","_emscripten_glGenVertexArrays","arrays","_emscripten_glGenerateMipmap","_emscripten_glGetActiveAttrib","bufSize","getActiveAttrib","numBytesWrittenExclNull","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","_emscripten_glGetActiveUniformBlockiv","_emscripten_glGetActiveUniformName","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","_emscripten_glGetBooleani_v","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteriv","getBufferParameter","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","_emscripten_glGetInfoLogARB","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetObjectParameterivARB","_emscripten_glGetPointerv","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","numAttribs","ACTIVE_ATTRIBUTES","activeAttrib","numBlocks","ACTIVE_UNIFORM_BLOCKS","activeBlockName","getActiveUniformBlockName","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","sourceLength","getShaderParameter","_emscripten_glGetString","glVersion","VERSION","gl_exts","glslVersion","SHADING_LANGUAGE_VERSION","ver_num","_emscripten_glGetStringi","_emscripten_glGetTexParameterIiv","_emscripten_glGetTexParameterIuiv","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","_emscripten_glGetUniformLocation","arrayOffset","arrayIndex","uniformInfo","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","_emscripten_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","_emscripten_glIsEnabledi","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsShader","isShader","_emscripten_glIsTexture","isTexture","_emscripten_glIsVertexArray","_emscripten_glLineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glLoadIdentity","_emscripten_glLoadMatrixf","_emscripten_glMatrixMode","_emscripten_glNormalPointer","_emscripten_glPixelStorei","param","pixelStorei","_emscripten_glPolygonOffset","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","_emscripten_glRotatef","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glScissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","_emscripten_glStencilFuncSeparate","_emscripten_glStencilMask","_emscripten_glStencilMaskSeparate","_emscripten_glStencilOp","_emscripten_glStencilOpSeparate","_emscripten_glTexCoordPointer","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","depth","_emscripten_glTexParameterIiv","_emscripten_glTexParameterIuiv","_emscripten_glTexParameterf","_emscripten_glTexParameterfv","texParameterf","_emscripten_glTexParameteri","_emscripten_glTexParameteriv","texParameteri","_emscripten_glTexStorage2D","_emscripten_glTexStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","zoffset","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","_emscripten_glUniform1f","v0","uniform1f","_emscripten_glUniform1fv","uniform1fv","view","_emscripten_glUniform1i","uniform1i","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","_emscripten_glVertexAttrib1fv","vertexAttrib1f","_emscripten_glVertexAttrib2f","_emscripten_glVertexAttrib2fv","vertexAttrib2f","_emscripten_glVertexAttrib3f","_emscripten_glVertexAttrib3fv","vertexAttrib3f","_emscripten_glVertexAttrib4f","_emscripten_glVertexAttrib4fv","vertexAttrib4f","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribI1i","_emscripten_glVertexAttribI1iv","_emscripten_glVertexAttribI1ui","_emscripten_glVertexAttribI1uiv","_emscripten_glVertexAttribI2i","_emscripten_glVertexAttribI2iv","_emscripten_glVertexAttribI2ui","_emscripten_glVertexAttribI2uiv","_emscripten_glVertexAttribI3i","_emscripten_glVertexAttribI3iv","_emscripten_glVertexAttribI3ui","_emscripten_glVertexAttribI3uiv","_emscripten_glVertexAttribI4bv","_emscripten_glVertexAttribI4i","_emscripten_glVertexAttribI4iv","vertexAttribI4i","_emscripten_glVertexAttribI4sv","_emscripten_glVertexAttribI4ubv","_emscripten_glVertexAttribI4ui","_emscripten_glVertexAttribI4uiv","vertexAttribI4ui","_emscripten_glVertexAttribI4usv","_emscripten_glVertexAttribIPointer","stride","vertexAttribIPointer","_emscripten_glVertexAttribPointer","normalized","vertexAttribPointer","_emscripten_glVertexPointer","_emscripten_glViewport","_emscripten_memcpy_big","dest","num","_glActiveTexture","_glAttachShader","_glBindBuffer","_glBindBufferRange","_glBindFramebuffer","_glBindRenderbuffer","_glBindSampler","unit","sampler","_glBindTexture","_glBindVertexArray","_glBlendEquationSeparate","_glBlendFuncSeparate","_glBlitFramebuffer","x8","x9","_glBufferData","_glBufferSubData","_glClear","_glClearColor","_glClearDepthf","_glClearStencil","_glColorMask","_glCompileShader","_glCompressedTexSubImage2D","_glCreateProgram","_glCreateShader","_glCullFace","_glDeleteBuffers","_glDeleteFramebuffers","_glDeleteProgram","_glDeleteRenderbuffers","_glDeleteSamplers","_glDeleteShader","_glDeleteSync","sync","deleteSync","_glDeleteTextures","_glDeleteVertexArrays","_glDepthFunc","_glDepthMask","_glDetachShader","_glDisable","_glDisableVertexAttribArray","_glDrawArrays","_glDrawRangeElements","_glEnable","_glEnableVertexAttribArray","_glFenceSync","fenceSync","_glFlush","_glFramebufferRenderbuffer","_glFramebufferTexture2D","_glFrontFace","_glGenBuffers","_glGenFramebuffers","_glGenRenderbuffers","_glGenSamplers","_glGenTextures","_glGenVertexArrays","_glGenerateMipmap","_glGetError","_glGetFloatv","_glGetIntegerv","_glGetProgramInfoLog","_glGetProgramiv","_glGetShaderInfoLog","_glGetShaderiv","_glGetString","_glGetStringi","_glGetUniformBlockIndex","_glGetUniformLocation","_glGetVertexAttribiv","_glHint","_glInvalidateFramebuffer","numAttachments","attachments","list","_glInvalidateSubFramebuffer","_glIsEnabled","_glLinkProgram","_glPixelStorei","_glPolygonOffset","_glReadPixels","_glRenderbufferStorage","_glRenderbufferStorageMultisample","_glSamplerParameteri","_glScissor","_glShaderSource","_glTexParameteri","_glTexStorage2D","_glTexStorage2DMultisample","_glTexStorage3D","_glTexSubImage2D","_glUniform1f","_glUniform1i","_glUniform4f","_glUniformBlockBinding","_glUseProgram","_glVertexAttribIPointer","_glVertexAttribPointer","_glViewport","_glWaitSync","timeoutLo","timeoutHi","waitSync","_llvm_cttz_i64","_llvm_exp2_f64","_llvm_log2_f32","LN2","_llvm_trap","_pthread_cond_destroy","_pthread_cond_signal","_pthread_cond_timedwait","_pthread_cond_wait","_pthread_create","_pthread_getspecific","_pthread_join","_pthread_key_create","_pthread_mutex_destroy","_pthread_once","_pthread_setspecific","_sysconf","asm","run","doRun","postRun","preRun","what","runCaller","getBufferDescriptor","assets","remainingInitializationTasks","onready","onReady","glMatrix","loadMathExtensions","loadClassExtensions","onDone","onFetched","remainingAssets","lower","toLowerCase","endsWith","decoding","Engine","assign","_create","createMaterial","_createMaterial","createTextureFromKtx","_createTextureFromKtx","createIblFromKtx","_createIblFromKtx","createSkyFromKtx","rgbm","skytex","Skybox","Builder","environment","build","createTextureFromPng","_createTextureFromPng","createTextureFromJpeg","image","_createTextureFromJpeg","loadFilamesh","definstance","matinstances","_loadFilamesh","VertexBuffer","setBufferAt","engine","bufferIndex","_setBufferAt","IndexBuffer","setBuffer","_setBuffer","RenderableManager$Builder","LightManager$Builder","entity","_build","VertexBuffer$Builder","IndexBuffer$Builder","Texture$Builder","IndirectLight$Builder","Skybox$Builder","KtxBundle","blob","_getBlob","getBytes","getCubeBlob","miplevel","_getCubeBlob","Texture","setImage","pbd","_setImage","setImageCube","_setImageCube","typedarray","ta","bd","driver$BufferDescriptor","uint8array","PixelBuffer","datatype","driver$PixelBufferDescriptor","CompressedPixelBuffer","cdatatype","faceSize","registry","MeshReader$MaterialRegistry","mesh","MeshReader","loadMeshFromBuffer","minstance","renderable","vertexBuffer","indexBuffer","IcoSphere","nsubdivs","X","Z","vertices","triangles","subdivide","nverts","tangents","vec3","cross","q","quat","fromMat3","vec4","packSnorm16","srctris","srcverts","nsrctris","ndsttris","nsrcverts","ndstverts","dsttris","dstverts","srcind","dstind","i3","i4","i5","tri","i0","i1","i2","v4","v5","add","least","most","fromRotationZ","mat3","fromRotation","radians","axis","fromMat4","mat4","ktxdata","ktx","srgb","KtxUtility$createTexture","iblktx","ibltex","shfloats","getMetadata","parseFloat","IndirectLight","reflections","irradianceSh","pngdata","Sampler","Texture$Sampler","TextureFormat","Texture$InternalFormat","PixelDataFormat","noalpha","nomips","decodedpng","decodePng","texformat","pbformat","pbtype","SRGB8","RGB8","RGB","PixelDataType","UBYTE","SRGB8_A8","RGBA8","RGBM","RGBA","tex","levels","SAMPLER_2D","pixelbuffer","generateMipmaps","context2d","globalCompositeOperation","imgdata","getImageData","decodedjpeg","TF","getSupportedFormats","supportedFormats","s3tc","astc","etc","nexts","getSupportedFormatSuffix","desiredFormats","includes","EPSILON","ARRAY_TYPE","RANDOM","setMatrixArrayType","degree","PI","toRadian","equals","copy","identity","fromValues","m00","m01","m10","m11","a0","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","fromScaling","frob","sqrt","LDU","L","D","U","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","b4","b5","mat2d_rotate","mat2d_scale","translate","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","z","y2","z2","xx","yx","yy","zx","zy","zz","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","bottom","near","far","rl","tb","nf","perspective","fovy","aspect","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","vec3_dot","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","angle","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_random","sqrt1MinusU1","sqrtU1","quat_invert","dot","invDot","conjugate","fTrace","fRoot","fromEuler","halfToRad","cx","cy","cz","quat_str","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","sqlerp","setAxes","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","a_dot_b","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","__webpack_exports__","common_namespaceObject","mat2_namespaceObject","mat2d_namespaceObject","mat3_namespaceObject","mat4_namespaceObject","quat_namespaceObject","quat2_namespaceObject","vec2_namespaceObject","vec3_namespaceObject","vec4_namespaceObject","g","eval","iblSuffix","environ","ibl","skySmall","skyLarge","nonlitMaterial","pbrMaterial","texMaterial","diffuse","specular","normal","collision","elevation","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","noop","nextTick","browser","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","gl_matrix_1","Vehicle","speed","accelerating","boosted","orientation","matrix","temp","collisionState","front","getMatrix","urls","audio_1","chasecam_1","display_1","simulation_1","vehicle_1","initialAssets","App","tick","getElementsByTagName","vehicle","initialVehiclePosition","simulation","display","chasecam","camera","time","render","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","that","RangeError","__proto__","encodingOrOffset","allocUnsafe","fromArrayLike","fromArrayBuffer","isEncoding","actual","fromString","checked","fromObject","assertSize","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","isNaN","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","foo","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","toHex","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","encodeChunk","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","scope","Timeout","clearFn","_id","_clearFn","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","runIfPresent","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","documentElement","script","onreadystatechange","attachEvent","task","audioUrls","_this","ready","sources","states","hasInteracted","load","keyCode","suspend","loadTasks","playOnce","play","offsetInSeconds","createBufferSource","connect","destination","loop","disconnect","audioData","boost","crash","background","AudioContext","decodeTasks","onDecode","decodeAudioData","ChaseCamera","speedOffset","speedOffsetMax","cameraPos","targetPos","targetYoffset","Display","onFinishedLoading","scene","createScene","skybox","setSkybox","indirectLight","setIntensity","setIndirectLight","swapChain","createSwapChain","renderer","createRenderer","createCamera","createView","setCamera","setScene","TextureSampler","MinFilter","LINEAR_MIPMAP_LINEAR","MagFilter","LINEAR","WrapMode","REPEAT","addEntity","getRenderableCount","destroySkybox","filenames","shipUrls","shipmi","createInstance","ship","createRenderable","bgasset","bgurls","bgmi","_i","_a","_b","_c","setFloat4Parameter","albedo","setTextureParameter","sunlight","EntityManager","LightManager","LightManager$Type","SUN","color","castShadows","intensity","direction","resize","tcm","getTransformManager","inst","getInstance","setTransform","dpr","devicePixelRatio","innerWidth","innerHeight","setViewport","Fov","Camera$Fov","HORIZONTAL","VERTICAL","setProjectionFov","matinstance","clearCoat","setFloatParameter","rm","getRenderableManager","setCastShadows","setReceiveShadows","sampler_1","Simulation","simvehicle","gfxvehicle","keyState","backward","forward","ltrigger","rtrigger","use","onKeyDown","onKeyUp","movement","roll","drift","yawAngle","gradient","gradientTarget","tilt","tiltTarget","repulsionVLeft","repulsionVRight","repulsionForce","driftLerp","yawAngleLerp","vepsilon","rollAmount","yawAngleAmount","yawAngleSpeed","rollAngle","thrust","airResist","airAngularSpeed","airBrake","airDrift","maxSpeed","zero3","repulsionLerp","boosterCheck","heightCheck","collisionCheck","degrees","quaternion","xform","gradientDelta","gradientLerp","epsilon","gradientAxis","tiltDelta","tiltLerp","tiltAxis","rollDelta","rollLerp","rollDirection","simpos","simquat","collisionPixelRatio","getPixelBilinear","lPos","rPos","lCol","getPixel","rCol","repulsionAmount","repulsionCap","repulsionRatio","collisionSpeedDecrease","collisionSpeedDecreaseCoef","boosterDecay","boosterSpeed","heightPixelRatio","getPixelFBilinear","heightScale","heightBias","heightLerp","gradientVector","nheight","atan2","tiltVector","fx","fy","rx","ry","dx","dy","cxy","cf1","cf2","getPixelF"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","\nvar Filament = (\nfunction(Filament) {\n  Filament = Filament || {};\n\nvar Module=typeof Filament!==\"undefined\"?Filament:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",(function(reason,p){process[\"exit\"](1)}));Module[\"quit\"]=(function(status){process[\"exit\"](status)});Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WEB){if(document.currentScript){scriptDirectory=document.currentScript.src}}else{scriptDirectory=self.location.href}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.split(\"/\").slice(0,-1).join(\"/\")+\"/\"}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=(function(title){document.title=title})}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})};var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function makeBigInt(low,high,unsigned){return unsigned?+(low>>>0)+ +(high>>>0)*4294967296:+(low>>>0)+ +(high|0)*4294967296}function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var GLOBAL_BASE=1024;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}var JSfuncs={\"stackSave\":(function(){stackSave()}),\"stackRestore\":(function(){stackRestore()}),\"arrayToC\":(function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),\"stringToC\":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={\"string\":JSfuncs[\"stringToC\"],\"array\":JSfuncs[\"arrayToC\"]};function ccall(ident,returnType,argTypes,args,opts){function convertReturnValue(ret){if(returnType===\"string\")return Pointer_stringify(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}var ALLOC_NORMAL=0;var ALLOC_STATIC=2;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc===\"function\"?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function demangle(func){return func}function demangleAll(text){var regex=/__Z[\\w\\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+\" [\"+y+\"]\"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}var PAGE_SIZE=16384;var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}if(!Module[\"reallocBuffer\"])Module[\"reallocBuffer\"]=(function(size){var ret;try{if(ArrayBuffer.transfer){ret=ArrayBuffer.transfer(buffer,size)}else{var oldHEAP8=HEAP8;ret=new ArrayBuffer(size);var temp=new Int8Array(ret);temp.set(oldHEAP8)}}catch(e){return false}var success=_emscripten_replace_memory(ret);if(!success)return false;return ret});function enlargeMemory(){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module[\"reallocBuffer\"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile=\"filament.wast\";var wasmBinaryFile=\"filament.wasm\";var asmjsCodeFile=\"filament.temp.asm.js\";if(!isDataURI(wasmTextFile)){wasmTextFile=locateFile(wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=locateFile(asmjsCodeFile)}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":asm2wasmImports,\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){err(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function fixImports(imports){return imports}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){err(\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;Module[\"usingWasm\"]=true;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver).catch((function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource).catch((function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var asmjsReallocBuffer=Module[\"reallocBuffer\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;if(Module[\"usingWasm\"]){try{var result=Module[\"wasmMemory\"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}}});Module[\"reallocBuffer\"]=(function(size){if(finalMethod===\"asmjs\"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod=\"\";Module[\"asm\"]=(function(global,env,providedBuffer){env=fixImports(env);if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"memoryBase\"]){env[\"memoryBase\"]=Module[\"STATIC_BASE\"]}if(!env[\"tableBase\"]){env[\"tableBase\"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);assert(exports,\"no binaryen method succeeded.\");return exports});}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+116848;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_jsenums_cpp()})},{func:(function(){__GLOBAL__sub_I_jsbindings_cpp()})},{func:(function(){__GLOBAL__sub_I_Engine_cpp()})},{func:(function(){__GLOBAL__sub_I_gl_headers_cpp()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})});var STATIC_BUMP=116848;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;function ___atomic_compare_exchange_8(ptr,expected,desiredl,desiredh,weak,success_memmodel,failure_memmodel){var pl=HEAP32[ptr>>2];var ph=HEAP32[ptr+4>>2];var el=HEAP32[expected>>2];var eh=HEAP32[expected+4>>2];if(pl===el&&ph===eh){HEAP32[ptr>>2]=desiredl;HEAP32[ptr+4>>2]=desiredh;return 1}else{HEAP32[expected>>2]=pl;HEAP32[expected+4>>2]=ph;return 0}}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function ___cxa_pure_virtual(){ABORT=true;throw\"Pure virtual function called!\"}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\"}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module[\"___cxa_is_pointer_type\"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module[\"___cxa_can_catch\"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0}function ___gxx_personality_v0(){}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var ERRNO_MESSAGES={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}var PATH={splitPath:(function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))}),join2:(function(l,r){return PATH.normalize(l+\"/\"+r)}),resolve:(function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter((function(p){return!!p})),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!=\"win32\";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync(\"/dev/stdin\",\"r\");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf(\"EOF\")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!==\"undefined\")return indexedDB;var ret=null;if(typeof window===\"object\")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,\"IDBFS used, but indexedDB not supported\");return ret}),DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback(\"Unable to connect to IndexedDB\")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains(\"timestamp\")){fileStore.createIndex(\"timestamp\",\"timestamp\",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!==\".\"&&p!==\"..\"}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:\"local\",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readonly\");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index(\"timestamp\");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:\"remote\",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}catch(e){return callback(e)}}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error(\"node type not supported\"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error(\"node type not supported\"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type===\"remote\"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readwrite\");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type===\"local\"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type===\"local\"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process[\"binding\"](\"constants\");if(flags[\"fs\"]){flags=flags[\"fs\"]}NODEFS.flagsForNodeMap={\"1024\":flags[\"O_APPEND\"],\"64\":flags[\"O_CREAT\"],\"128\":flags[\"O_EXCL\"],\"0\":flags[\"O_RDONLY\"],\"2\":flags[\"O_RDWR\"],\"4096\":flags[\"O_SYNC\"],\"512\":flags[\"O_TRUNC\"],\"1\":flags[\"O_WRONLY\"]}}),bufferFrom:(function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,\"/\",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsForNode:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\"\",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),write:(function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,\"/\",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split(\"/\");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join(\"/\");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split(\"/\");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts[\"files\"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts[\"blobs\"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj[\"name\"]),base(obj[\"name\"]),WORKERFS.FILE_MODE,0,obj[\"data\"])}));(mount.opts[\"packages\"]||[]).forEach((function(pack){pack[\"metadata\"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack[\"blob\"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags}),flagsToPermissionString:(function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,\"x\");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,\"wx\")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,\"wx\");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\"w\");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path)}}catch(e){console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path)}catch(e){console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,\"w\");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;err(\"read file: \"+path)}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags)}}catch(e){console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message)}return stream}),close:(function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null}),isClosed:(function(stream){return stream.fd===null}),llseek:(function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path)}catch(e){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"') threw an exception: \"+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,\"x\");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")}),createDefaultDevices:(function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto!==\"undefined\"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require(\"crypto\")[\"randomBytes\"](1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")}),createSpecialDirectories:(function(){FS.mkdir(\"/proc\");FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:(function(){var node=FS.createNode(\"/proc/self\",\"fd\",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},\"/proc/self/fd\")}),createStandardStreams:(function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",\"r\");assert(stdin.fd===0,\"invalid handle for stdin (\"+stdin.fd+\")\");var stdout=FS.open(\"/dev/stdout\",\"w\");assert(stdout.fd===1,\"invalid handle for stdout (\"+stdout.fd+\")\");var stderr=FS.open(\"/dev/stderr\",\"w\");assert(stderr.fd===2,\"invalid handle for stderr (\"+stderr.fd+\")\")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)Object.defineProperty(this,\"stack\",{value:(new Error).stack,writable:true})};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS,\"IDBFS\":IDBFS,\"NODEFS\":NODEFS,\"WORKERFS\":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(Module[\"read\"]){try{obj.contents=intArrayFromString(Module[\"read\"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach((function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return\"EM_FS_\"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!==\"/\"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd};case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0};case 12:case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0};case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall3(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get(),count=SYSCALLS.get();return FS.read(stream,HEAP8,buf,count)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21524:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var tupleRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_array(rawTupleType){var reg=tupleRegistrations[rawTupleType];delete tupleRegistrations[rawTupleType];var elements=reg.elements;var elementsLength=elements.length;var elementTypes=elements.map((function(elt){return elt.getterReturnType})).concat(elements.map((function(elt){return elt.setterArgumentType})));var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;whenDependentTypesAreResolved([rawTupleType],elementTypes,(function(elementTypes){elements.forEach((function(elt,i){var getterReturnType=elementTypes[i];var getter=elt.getter;var getterContext=elt.getterContext;var setterArgumentType=elementTypes[i+elementsLength];var setter=elt.setter;var setterContext=elt.setterContext;elt.read=(function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))});elt.write=(function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)})}));return[{name:reg.name,\"fromWireType\":(function(ptr){var rv=new Array(elementsLength);for(var i=0;i<elementsLength;++i){rv[i]=elements[i].read(ptr)}rawDestructor(ptr);return rv}),\"toWireType\":(function(destructors,o){if(elementsLength!==o.length){throw new TypeError(\"Incorrect number of tuple elements for \"+reg.name+\": expected=\"+elementsLength+\", actual=\"+o.length)}var ptr=rawConstructor();for(var i=0;i<elementsLength;++i){elements[i].write(ptr,o[i])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]}))}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register((function(){clonedHandle[\"delete\"]()})));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"asm\"][\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"asm\"][\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,(function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])}));whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],(function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,(function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)}));var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]}))}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function __embind_register_class_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,fn){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.constructor;if(undefined===proto[methodName]){unboundTypesHandler.argCount=argCount-1;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-1]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));var func=craftInvokerFunction(humanName,invokerArgsArray,null,rawInvoker,fn);if(undefined===proto[methodName].overloadTable){func.argCount=argCount-1;proto[methodName]=func}else{proto[methodName].overloadTable[argCount-1]=func}return[]}));return[]}))}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]}));return[]}))}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]}));return[]}))}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:(function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])}),enumerable:true,configurable:true};if(setter){desc.set=(function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(function(v){throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],(function(types){var getterReturnType=types[0];var desc={get:(function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))}),enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=(function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]}));return[]}))}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function enumReadValueFromPointer(name,shift,signed){switch(shift){case 0:return(function(pointer){var heap=signed?HEAP8:HEAPU8;return this[\"fromWireType\"](heap[pointer])});case 1:return(function(pointer){var heap=signed?HEAP16:HEAPU16;return this[\"fromWireType\"](heap[pointer>>1])});case 2:return(function(pointer){var heap=signed?HEAP32:HEAPU32;return this[\"fromWireType\"](heap[pointer>>2])});default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_enum(rawType,name,size,isSigned){var shift=getShiftFromSize(size);name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":(function(c){return this.constructor.values[c]}),\"toWireType\":(function(destructors,c){return c.value}),\"argPackAdvance\":8,\"readValueFromPointer\":enumReadValueFromPointer(name,shift,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __embind_register_enum_value(rawEnumType,name,enumValue){var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(enumType.name+\"_\"+name,(function(){}))}});Enum.values[enumValue]=Value;Enum[name]=Value}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,(function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)}),argCount-1);whenDependentTypesAreResolved([],argTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]}))}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(function(){return lengthBytesUTF8(value)})}else{getLength=(function(){return value.length})}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_value_array(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){tupleRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),elements:[]}}function __embind_register_value_array_element(rawTupleType,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){tupleRegistrations[rawTupleType].elements.push({getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}function requireHandle(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value}function __emval_as(handle,returnType,destructorsRef){handle=requireHandle(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=__emval_register(destructors);HEAP32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function __emval_get_property(handle,key){handle=requireHandle(handle);key=requireHandle(key);return __emval_register(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}else{return symbol}}function __emval_new_cstring(v){return __emval_register(getStringOrSymbol(v))}function __emval_run_destructors(handle){var destructors=emval_handle_array[handle].value;runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){Module[\"abort\"]()}function _emscripten_get_now(){abort()}function _emscripten_get_now_is_monotonic(){return ENVIRONMENT_IS_NODE||typeof dateNow!==\"undefined\"||(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self[\"performance\"]&&self[\"performance\"][\"now\"]}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if(clk_id===1&&_emscripten_get_now_is_monotonic()){now=_emscripten_get_now()}else{___setErrNo(ERRNO_CODES.EINVAL);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick)};Browser.mainLoop.method=\"timeout\"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method=\"rAF\"}else if(mode==2){if(typeof setImmediate===\"undefined\"){var setImmediates=[];var emscriptenMainLoopMessageId=\"setimmediate\";function Browser_setImmediate_messageHandler(event){if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()()}}addEventListener(\"message\",Browser_setImmediate_messageHandler,true);setImmediate=function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module[\"setImmediates\"]===undefined)Module[\"setImmediates\"]=[];Module[\"setImmediates\"].push(func);postMessage({target:emscriptenMainLoopMessageId})}else postMessage(emscriptenMainLoopMessageId,\"*\")}}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner)};Browser.mainLoop.method=\"immediate\"}return 0}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module[\"noExitRuntime\"]=true;assert(!Browser.mainLoop.func,\"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var browserIterationFunc;if(typeof arg!==\"undefined\"){browserIterationFunc=(function(){Module[\"dynCall_vi\"](func,arg)})}else{browserIterationFunc=(function(){Module[\"dynCall_v\"](func)})}var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker \"'+blocker.name+'\" took '+(Date.now()-start)+\" ms\");Browser.mainLoop.updateStatus();if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}else if(Browser.mainLoop.timingMode==0){Browser.mainLoop.tickStartTime=_emscripten_get_now()}if(Browser.mainLoop.method===\"timeout\"&&Module.ctx){err(\"Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!\");Browser.mainLoop.method=\"\"}Browser.mainLoop.runIter(browserIterationFunc);if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL===\"object\"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw\"SimulateInfiniteLoop\"}}var Browser={mainLoop:{scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:(function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++}),resume:(function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()}),updateStatus:(function(){if(Module[\"setStatus\"]){var message=Module[\"statusMessage\"]||\"Please wait...\";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module[\"setStatus\"](message+\" (\"+(expected-remaining)+\"/\"+expected+\")\")}else{Module[\"setStatus\"](message)}}else{Module[\"setStatus\"](\"\")}}}),runIter:(function(func){if(ABORT)return;if(Module[\"preMainLoop\"]){var preRet=Module[\"preMainLoop\"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e===\"object\"&&e.stack)err(\"exception thrown: \"+[e,e.stack]);throw e}}if(Module[\"postMainLoop\"])Module[\"postMainLoop\"]()})},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module[\"preloadPlugins\"])Module[\"preloadPlugins\"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log(\"warning: no blob constructor, cannot create blobs with mimetypes\")}Browser.BlobBuilder=typeof MozBlobBuilder!=\"undefined\"?MozBlobBuilder:typeof WebKitBlobBuilder!=\"undefined\"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log(\"warning: no BlobBuilder\"):null;Browser.URLObject=typeof window!=\"undefined\"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject===\"undefined\"){console.log(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");Module.noImageDecoding=true}var imagePlugin={};imagePlugin[\"canHandle\"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin[\"handle\"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){warnOnce(\"Blob constructor present but fails: \"+e+\"; falling back to blob builder\")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,\"Image \"+name+\" could not be decoded\");var canvas=document.createElement(\"canvas\");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext(\"2d\");ctx.drawImage(img,0,0);Module[\"preloadedImages\"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log(\"Image \"+url+\" could not be decoded\");if(onerror)onerror()};img.src=url};Module[\"preloadPlugins\"].push(imagePlugin);var audioPlugin={};audioPlugin[\"canHandle\"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{\".ogg\":1,\".wav\":1,\".mp3\":1}};audioPlugin[\"handle\"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module[\"preloadedAudios\"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module[\"preloadedAudios\"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener(\"canplaythrough\",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log(\"warning: browser could not fully decode audio \"+name+\", trying slower base64 approach\");function encode64(data){var BASE=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var PAD=\"=\";var ret=\"\";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src=\"data:audio/x-\"+name.substr(-3)+\";base64,\"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module[\"preloadPlugins\"].push(audioPlugin);function pointerLockChange(){Browser.pointerLock=document[\"pointerLockElement\"]===Module[\"canvas\"]||document[\"mozPointerLockElement\"]===Module[\"canvas\"]||document[\"webkitPointerLockElement\"]===Module[\"canvas\"]||document[\"msPointerLockElement\"]===Module[\"canvas\"]}var canvas=Module[\"canvas\"];if(canvas){canvas.requestPointerLock=canvas[\"requestPointerLock\"]||canvas[\"mozRequestPointerLock\"]||canvas[\"webkitRequestPointerLock\"]||canvas[\"msRequestPointerLock\"]||(function(){});canvas.exitPointerLock=document[\"exitPointerLock\"]||document[\"mozExitPointerLock\"]||document[\"webkitExitPointerLock\"]||document[\"msExitPointerLock\"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener(\"pointerlockchange\",pointerLockChange,false);document.addEventListener(\"mozpointerlockchange\",pointerLockChange,false);document.addEventListener(\"webkitpointerlockchange\",pointerLockChange,false);document.addEventListener(\"mspointerlockchange\",pointerLockChange,false);if(Module[\"elementPointerLock\"]){canvas.addEventListener(\"click\",(function(ev){if(!Browser.pointerLock&&Module[\"canvas\"].requestPointerLock){Module[\"canvas\"].requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}}else{ctx=canvas.getContext(\"2d\")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx===\"undefined\",\"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:(function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer===\"undefined\")Browser.lockPointer=true;if(typeof Browser.resizeCanvas===\"undefined\")Browser.resizeCanvas=false;if(typeof Browser.vrDevice===\"undefined\")Browser.vrDevice=null;var canvas=Module[\"canvas\"];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document[\"fullscreenElement\"]||document[\"mozFullScreenElement\"]||document[\"msFullscreenElement\"]||document[\"webkitFullscreenElement\"]||document[\"webkitCurrentFullScreenElement\"])===canvasContainer){canvas.exitFullscreen=document[\"exitFullscreen\"]||document[\"cancelFullScreen\"]||document[\"mozCancelFullScreen\"]||document[\"msExitFullscreen\"]||document[\"webkitCancelFullScreen\"]||(function(){});canvas.exitFullscreen=canvas.exitFullscreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}if(Module[\"onFullScreen\"])Module[\"onFullScreen\"](Browser.isFullscreen);if(Module[\"onFullscreen\"])Module[\"onFullscreen\"](Browser.isFullscreen)}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener(\"fullscreenchange\",fullscreenChange,false);document.addEventListener(\"mozfullscreenchange\",fullscreenChange,false);document.addEventListener(\"webkitfullscreenchange\",fullscreenChange,false);document.addEventListener(\"MSFullscreenChange\",fullscreenChange,false)}var canvasContainer=document.createElement(\"div\");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullscreen=canvasContainer[\"requestFullscreen\"]||canvasContainer[\"mozRequestFullScreen\"]||canvasContainer[\"msRequestFullscreen\"]||(canvasContainer[\"webkitRequestFullscreen\"]?(function(){canvasContainer[\"webkitRequestFullscreen\"](Element[\"ALLOW_KEYBOARD_INPUT\"])}):null)||(canvasContainer[\"webkitRequestFullScreen\"]?(function(){canvasContainer[\"webkitRequestFullScreen\"](Element[\"ALLOW_KEYBOARD_INPUT\"])}):null);if(vrDevice){canvasContainer.requestFullscreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullscreen()}}),requestFullScreen:(function(lockPointer,resizeCanvas,vrDevice){err(\"Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.\");Browser.requestFullScreen=(function(lockPointer,resizeCanvas,vrDevice){return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)});return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window===\"undefined\"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window[\"requestAnimationFrame\"]||window[\"mozRequestAnimationFrame\"]||window[\"webkitRequestAnimationFrame\"]||window[\"msRequestAnimationFrame\"]||window[\"oRequestAnimationFrame\"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=false}),resumeAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach((function(func){func()}))}}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}))}),safeSetTimeout:(function(func,timeout){Module[\"noExitRuntime\"]=true;return setTimeout((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}),timeout)}),safeSetInterval:(function(func,timeout){Module[\"noExitRuntime\"]=true;return setInterval((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}}),timeout)}),getMimetype:(function(name){return{\"jpg\":\"image/jpeg\",\"jpeg\":\"image/jpeg\",\"png\":\"image/png\",\"bmp\":\"image/bmp\",\"ogg\":\"audio/ogg\",\"wav\":\"audio/wav\",\"mp3\":\"audio/mpeg\"}[name.substr(name.lastIndexOf(\".\")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator[\"getUserMedia\"]||navigator[\"mozGetUserMedia\"]}window.getUserMedia(func)}),getMovementX:(function(event){return event[\"movementX\"]||event[\"mozMovementX\"]||event[\"webkitMovementX\"]||0}),getMovementY:(function(event){return event[\"movementY\"]||event[\"mozMovementY\"]||event[\"webkitMovementY\"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case\"DOMMouseScroll\":delta=event.detail;break;case\"mousewheel\":delta=event.wheelDelta;break;case\"wheel\":delta=event[\"deltaY\"];break;default:throw\"unrecognized mouse wheel event: \"+event.type}return delta}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!=\"mousemove\"&&\"mozMovementX\"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!=\"undefined\"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module[\"canvas\"].getBoundingClientRect();var cw=Module[\"canvas\"].width;var ch=Module[\"canvas\"].height;var scrollX=typeof window.scrollX!==\"undefined\"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!==\"undefined\"?window.scrollY:window.pageYOffset;if(event.type===\"touchstart\"||event.type===\"touchend\"||event.type===\"touchmove\"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type===\"touchstart\"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type===\"touchend\"||event.type===\"touchmove\"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),asyncLoad:(function(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";Module[\"readAsync\"](url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)}),(function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}}));if(dep)addRunDependency(dep)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module[\"canvas\"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module[\"canvas\"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:(function(){if(typeof SDL!=\"undefined\"){var flags=HEAPU32[SDL.screen>>2];flags=flags|8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module[\"canvas\"]);Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!=\"undefined\"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module[\"canvas\"]);Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module[\"forcedAspectRatio\"]&&Module[\"forcedAspectRatio\"]>0){if(w/h<Module[\"forcedAspectRatio\"]){w=Math.round(h*Module[\"forcedAspectRatio\"])}else{h=Math.round(w/Module[\"forcedAspectRatio\"])}}if((document[\"fullscreenElement\"]||document[\"mozFullScreenElement\"]||document[\"msFullscreenElement\"]||document[\"webkitFullscreenElement\"]||document[\"webkitCurrentFullScreenElement\"])===canvas.parentNode&&typeof screen!=\"undefined\"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!=\"undefined\"){canvas.style.removeProperty(\"width\");canvas.style.removeProperty(\"height\")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!=\"undefined\"){if(w!=wNative||h!=hNative){canvas.style.setProperty(\"width\",w+\"px\",\"important\");canvas.style.setProperty(\"height\",h+\"px\",\"important\")}else{canvas.style.removeProperty(\"width\");canvas.style.removeProperty(\"height\")}}}}),wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:(function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle})};var EGL={errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,stringCache:{},setErrorCode:(function(code){EGL.errorCode=code}),chooseConfig:(function(display,attribList,config,config_size,numConfigs){if(display!=62e3){EGL.setErrorCode(12296);return 0}if((!config||!config_size)&&!numConfigs){EGL.setErrorCode(12300);return 0}if(numConfigs){HEAP32[numConfigs>>2]=1}if(config&&config_size>0){HEAP32[config>>2]=62002}EGL.setErrorCode(12288);return 1})};function _eglGetProcAddress(name_){return _emscripten_GetProcAddress(name_)}var GL={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:[],currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},stringiCache:{},tempFixedLengthArray:[],packAlignment:4,unpackAlignment:4,init:(function(){GL.miniTempBuffer=new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);for(var i=0;i<GL.MINI_TEMP_BUFFER_SIZE;i++){GL.miniTempBufferViews[i]=GL.miniTempBuffer.subarray(0,i+1)}for(var i=0;i<32;i++){GL.tempFixedLengthArray.push(new Array(i))}}),recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:(function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret}),MINI_TEMP_BUFFER_SIZE:256,miniTempBuffer:null,miniTempBufferViews:[0],getSource:(function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var frag;if(length){var len=HEAP32[length+i*4>>2];if(len<0){frag=Pointer_stringify(HEAP32[string+i*4>>2])}else{frag=Pointer_stringify(HEAP32[string+i*4>>2],len)}}else{frag=Pointer_stringify(HEAP32[string+i*4>>2])}source+=frag}return source}),createContext:(function(canvas,webGLContextAttributes){if(typeof webGLContextAttributes[\"majorVersion\"]===\"undefined\"&&typeof webGLContextAttributes[\"minorVersion\"]===\"undefined\"){if(typeof WebGL2RenderingContext!==\"undefined\")webGLContextAttributes[\"majorVersion\"]=2;else webGLContextAttributes[\"majorVersion\"]=1;webGLContextAttributes[\"minorVersion\"]=0}var ctx;var errorInfo=\"?\";function onContextCreationError(event){errorInfo=event.statusMessage||errorInfo}try{canvas.addEventListener(\"webglcontextcreationerror\",onContextCreationError,false);try{if(webGLContextAttributes[\"majorVersion\"]==1&&webGLContextAttributes[\"minorVersion\"]==0){ctx=canvas.getContext(\"webgl\",webGLContextAttributes)||canvas.getContext(\"experimental-webgl\",webGLContextAttributes)}else if(webGLContextAttributes[\"majorVersion\"]==2&&webGLContextAttributes[\"minorVersion\"]==0){ctx=canvas.getContext(\"webgl2\",webGLContextAttributes)}else{throw\"Unsupported WebGL context version \"+majorVersion+\".\"+minorVersion+\"!\"}}finally{canvas.removeEventListener(\"webglcontextcreationerror\",onContextCreationError,false)}if(!ctx)throw\":(\"}catch(e){out(\"Could not create canvas: \"+[errorInfo,e,JSON.stringify(webGLContextAttributes)]);return 0}if(!ctx)return 0;var context=GL.registerContext(ctx,webGLContextAttributes);return context}),registerContext:(function(ctx,webGLContextAttributes){var handle=GL.getNewId(GL.contexts);var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes[\"majorVersion\"],GLctx:ctx};function getChromeVersion(){var raw=navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);return raw?parseInt(raw[2],10):false}context.supportsWebGL2EntryPoints=context.version>=2&&(getChromeVersion()===false||getChromeVersion()>=58);if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes[\"enableExtensionsByDefault\"]===\"undefined\"||webGLContextAttributes[\"enableExtensionsByDefault\"]){GL.initExtensions(context)}return handle}),makeContextCurrent:(function(contextHandle){var context=GL.contexts[contextHandle];if(!context)return false;GLctx=Module.ctx=context.GLctx;GL.currentContext=context;return true}),getContext:(function(contextHandle){return GL.contexts[contextHandle]}),deleteContext:(function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;GL.contexts[contextHandle]=null}),initExtensions:(function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;context.maxVertexAttribs=GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);if(context.version<2){var instancedArraysExt=GLctx.getExtension(\"ANGLE_instanced_arrays\");if(instancedArraysExt){GLctx[\"vertexAttribDivisor\"]=(function(index,divisor){instancedArraysExt[\"vertexAttribDivisorANGLE\"](index,divisor)});GLctx[\"drawArraysInstanced\"]=(function(mode,first,count,primcount){instancedArraysExt[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)});GLctx[\"drawElementsInstanced\"]=(function(mode,count,type,indices,primcount){instancedArraysExt[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)})}var vaoExt=GLctx.getExtension(\"OES_vertex_array_object\");if(vaoExt){GLctx[\"createVertexArray\"]=(function(){return vaoExt[\"createVertexArrayOES\"]()});GLctx[\"deleteVertexArray\"]=(function(vao){vaoExt[\"deleteVertexArrayOES\"](vao)});GLctx[\"bindVertexArray\"]=(function(vao){vaoExt[\"bindVertexArrayOES\"](vao)});GLctx[\"isVertexArray\"]=(function(vao){return vaoExt[\"isVertexArrayOES\"](vao)})}var drawBuffersExt=GLctx.getExtension(\"WEBGL_draw_buffers\");if(drawBuffersExt){GLctx[\"drawBuffers\"]=(function(n,bufs){drawBuffersExt[\"drawBuffersWEBGL\"](n,bufs)})}}GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\");var automaticallyEnabledExtensions=[\"OES_texture_float\",\"OES_texture_half_float\",\"OES_standard_derivatives\",\"OES_vertex_array_object\",\"WEBGL_compressed_texture_s3tc\",\"WEBGL_depth_texture\",\"OES_element_index_uint\",\"EXT_texture_filter_anisotropic\",\"ANGLE_instanced_arrays\",\"OES_texture_float_linear\",\"OES_texture_half_float_linear\",\"WEBGL_compressed_texture_atc\",\"WEBKIT_WEBGL_compressed_texture_pvrtc\",\"WEBGL_compressed_texture_pvrtc\",\"EXT_color_buffer_half_float\",\"WEBGL_color_buffer_float\",\"EXT_frag_depth\",\"EXT_sRGB\",\"WEBGL_draw_buffers\",\"WEBGL_shared_resources\",\"EXT_shader_texture_lod\",\"EXT_color_buffer_float\"];var exts=GLctx.getSupportedExtensions();if(exts&&exts.length>0){GLctx.getSupportedExtensions().forEach((function(ext){if(automaticallyEnabledExtensions.indexOf(ext)!=-1){GLctx.getExtension(ext)}}))}}),populateUniformTable:(function(program){var p=GL.programs[program];GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var ptable=GL.programInfos[program];var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,GLctx.ACTIVE_UNIFORMS);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.indexOf(\"]\",name.length-1)!==-1){var ls=name.lastIndexOf(\"[\");name=name.slice(0,ls)}var loc=GLctx.getUniformLocation(p,name);if(loc!=null){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+\"[\"+j+\"]\";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}})};function _emscripten_glActiveTexture(x0){GLctx[\"activeTexture\"](x0)}function _emscripten_glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glBeginConditionalRender(){err(\"missing function: emscripten_glBeginConditionalRender\");abort(-1)}function _emscripten_glBeginTransformFeedback(x0){GLctx[\"beginTransformFeedback\"](x0)}function _emscripten_glBindAttribLocation(program,index,name){name=Pointer_stringify(name);GLctx.bindAttribLocation(GL.programs[program],index,name)}function _emscripten_glBindBuffer(target,buffer){var bufferObj=buffer?GL.buffers[buffer]:null;if(target==35051){GLctx.currentPixelPackBufferBinding=buffer}else if(target==35052){GLctx.currentPixelUnpackBufferBinding=buffer}GLctx.bindBuffer(target,bufferObj)}function _emscripten_glBindBufferBase(target,index,buffer){var bufferObj=buffer?GL.buffers[buffer]:null;GLctx[\"bindBufferBase\"](target,index,bufferObj)}function _emscripten_glBindBufferRange(target,index,buffer,offset,ptrsize){var bufferObj=buffer?GL.buffers[buffer]:null;GLctx[\"bindBufferRange\"](target,index,bufferObj,offset,ptrsize)}function _emscripten_glBindFragDataLocation(){err(\"missing function: emscripten_glBindFragDataLocation\");abort(-1)}function _emscripten_glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,framebuffer?GL.framebuffers[framebuffer]:null)}function _emscripten_glBindProgramARB(){err(\"missing function: emscripten_glBindProgramARB\");abort(-1)}function _emscripten_glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,renderbuffer?GL.renderbuffers[renderbuffer]:null)}function _emscripten_glBindTexture(target,texture){GLctx.bindTexture(target,texture?GL.textures[texture]:null)}function _emscripten_glBindVertexArray(vao){GLctx[\"bindVertexArray\"](GL.vaos[vao])}function _emscripten_glBlendColor(x0,x1,x2,x3){GLctx[\"blendColor\"](x0,x1,x2,x3)}function _emscripten_glBlendEquation(x0){GLctx[\"blendEquation\"](x0)}function _emscripten_glBlendEquationSeparate(x0,x1){GLctx[\"blendEquationSeparate\"](x0,x1)}function _emscripten_glBlendFunc(x0,x1){GLctx[\"blendFunc\"](x0,x1)}function _emscripten_glBlendFuncSeparate(x0,x1,x2,x3){GLctx[\"blendFuncSeparate\"](x0,x1,x2,x3)}function _emscripten_glBufferData(target,size,data,usage){if(!data){GLctx.bufferData(target,size,usage)}else{if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.bufferData(target,HEAPU8,usage,data,size);return}GLctx.bufferData(target,HEAPU8.subarray(data,data+size),usage)}}function _emscripten_glBufferSubData(target,offset,size,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.bufferSubData(target,offset,HEAPU8,data,size);return}GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _emscripten_glCheckFramebufferStatus(x0){return GLctx[\"checkFramebufferStatus\"](x0)}function _emscripten_glClampColor(){err(\"missing function: emscripten_glClampColor\");abort(-1)}function _emscripten_glClear(x0){GLctx[\"clear\"](x0)}function _emscripten_glClearBufferfi(x0,x1,x2,x3){GLctx[\"clearBufferfi\"](x0,x1,x2,x3)}function _emscripten_glClearBufferfv(buffer,drawbuffer,value){GLctx[\"clearBufferfv\"](buffer,drawbuffer,HEAPF32,value>>2)}function _emscripten_glClearBufferiv(buffer,drawbuffer,value){GLctx[\"clearBufferiv\"](buffer,drawbuffer,HEAP32,value>>2)}function _emscripten_glClearBufferuiv(buffer,drawbuffer,value){GLctx[\"clearBufferuiv\"](buffer,drawbuffer,HEAPU32,value>>2)}function _emscripten_glClearColor(x0,x1,x2,x3){GLctx[\"clearColor\"](x0,x1,x2,x3)}function _emscripten_glClearDepth(x0){GLctx[\"clearDepth\"](x0)}function _emscripten_glClearDepthf(x0){GLctx[\"clearDepth\"](x0)}function _emscripten_glClearStencil(x0){GLctx[\"clearStencil\"](x0)}function _emscripten_glClientActiveTexture(){err(\"missing function: emscripten_glClientActiveTexture\");abort(-1)}function _emscripten_glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _emscripten_glColorMaski(){err(\"missing function: emscripten_glColorMaski\");abort(-1)}function _emscripten_glColorPointer(){err(\"missing function: emscripten_glColorPointer\");abort(-1)}function _emscripten_glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _emscripten_glCompressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx[\"compressedTexImage2D\"](target,level,internalFormat,width,height,border,HEAPU8,data,imageSize);return}GLctx[\"compressedTexImage2D\"](target,level,internalFormat,width,height,border,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx[\"compressedTexSubImage2D\"](target,level,xoffset,yoffset,width,height,format,HEAPU8,data,imageSize);return}GLctx[\"compressedTexSubImage2D\"](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCopyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx[\"copyTexImage2D\"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx[\"copyTexSubImage2D\"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;GL.programs[id]=program;return id}function _emscripten_glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _emscripten_glCullFace(x0){GLctx[\"cullFace\"](x0)}function _emscripten_glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GL.currArrayBuffer)GL.currArrayBuffer=0;if(id==GL.currElementArrayBuffer)GL.currElementArrayBuffer=0}}function _emscripten_glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _emscripten_glDeleteObjectARB(){err(\"missing function: emscripten_glDeleteObjectARB\");abort(-1)}function _emscripten_glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;GL.programInfos[id]=null}function _emscripten_glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _emscripten_glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _emscripten_glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _emscripten_glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx[\"deleteVertexArray\"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDepthFunc(x0){GLctx[\"depthFunc\"](x0)}function _emscripten_glDepthMask(flag){GLctx.depthMask(!!flag)}function _emscripten_glDepthRange(x0,x1){GLctx[\"depthRange\"](x0,x1)}function _emscripten_glDepthRangef(x0,x1){GLctx[\"depthRange\"](x0,x1)}function _emscripten_glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glDisable(x0){GLctx[\"disable\"](x0)}function _emscripten_glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _emscripten_glDisablei(){err(\"missing function: emscripten_glDisablei\");abort(-1)}function _emscripten_glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _emscripten_glDrawArraysInstanced(mode,first,count,primcount){GLctx[\"drawArraysInstanced\"](mode,first,count,primcount)}function _emscripten_glDrawBuffers(n,bufs){var bufArray=GL.tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2]}GLctx[\"drawBuffers\"](bufArray)}function _emscripten_glDrawElements(mode,count,type,indices){GLctx.drawElements(mode,count,type,indices)}function _emscripten_glDrawElementsInstanced(mode,count,type,indices,primcount){GLctx[\"drawElementsInstanced\"](mode,count,type,indices,primcount)}function _emscripten_glDrawRangeElements(mode,start,end,count,type,indices){_emscripten_glDrawElements(mode,count,type,indices)}function _emscripten_glEnable(x0){GLctx[\"enable\"](x0)}function _emscripten_glEnableClientState(){err(\"missing function: emscripten_glEnableClientState\");abort(-1)}function _emscripten_glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _emscripten_glEnablei(){err(\"missing function: emscripten_glEnablei\");abort(-1)}function _emscripten_glEndConditionalRender(){err(\"missing function: emscripten_glEndConditionalRender\");abort(-1)}function _emscripten_glEndTransformFeedback(){GLctx[\"endTransformFeedback\"]()}function _emscripten_glFinish(){GLctx[\"finish\"]()}function _emscripten_glFlush(){GLctx[\"flush\"]()}function _emscripten_glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _emscripten_glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _emscripten_glFrontFace(x0){GLctx[\"frontFace\"](x0)}function _emscripten_glFrustum(){err(\"missing function: emscripten_glFrustum\");abort(-1)}function _emscripten_glGenBuffers(n,buffers){for(var i=0;i<n;i++){var buffer=GLctx.createBuffer();if(!buffer){GL.recordError(1282);while(i<n)HEAP32[buffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.buffers);buffer.name=id;GL.buffers[id]=buffer;HEAP32[buffers+i*4>>2]=id}}function _emscripten_glGenFramebuffers(n,ids){for(var i=0;i<n;++i){var framebuffer=GLctx.createFramebuffer();if(!framebuffer){GL.recordError(1282);while(i<n)HEAP32[ids+i++*4>>2]=0;return}var id=GL.getNewId(GL.framebuffers);framebuffer.name=id;GL.framebuffers[id]=framebuffer;HEAP32[ids+i*4>>2]=id}}function _emscripten_glGenRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var renderbuffer=GLctx.createRenderbuffer();if(!renderbuffer){GL.recordError(1282);while(i<n)HEAP32[renderbuffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.renderbuffers);renderbuffer.name=id;GL.renderbuffers[id]=renderbuffer;HEAP32[renderbuffers+i*4>>2]=id}}function _emscripten_glGenTextures(n,textures){for(var i=0;i<n;i++){var texture=GLctx.createTexture();if(!texture){GL.recordError(1282);while(i<n)HEAP32[textures+i++*4>>2]=0;return}var id=GL.getNewId(GL.textures);texture.name=id;GL.textures[id]=texture;HEAP32[textures+i*4>>2]=id}}function _emscripten_glGenVertexArrays(n,arrays){for(var i=0;i<n;i++){var vao=GLctx[\"createVertexArray\"]();if(!vao){GL.recordError(1282);while(i<n)HEAP32[arrays+i++*4>>2]=0;return}var id=GL.getNewId(GL.vaos);vao.name=id;GL.vaos[id]=vao;HEAP32[arrays+i*4>>2]=id}}function _emscripten_glGenerateMipmap(x0){GLctx[\"generateMipmap\"](x0)}function _emscripten_glGetActiveAttrib(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveAttrib(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniform(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveUniform(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniformBlockName(program,uniformBlockIndex,bufSize,length,uniformBlockName){program=GL.programs[program];var result=GLctx[\"getActiveUniformBlockName\"](program,uniformBlockIndex);if(!result)return;if(uniformBlockName&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(result,uniformBlockName,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetActiveUniformBlockiv(program,uniformBlockIndex,pname,params){if(!params){GL.recordError(1281);return}program=GL.programs[program];switch(pname){case 35393:var name=GLctx[\"getActiveUniformBlockName\"](program,uniformBlockIndex);HEAP32[params>>2]=name.length+1;return;default:var result=GLctx[\"getActiveUniformBlockParameter\"](program,uniformBlockIndex,pname);if(!result)return;if(typeof result==\"number\"){HEAP32[params>>2]=result}else{for(var i=0;i<result.length;i++){HEAP32[params+i*4>>2]=result[i]}}}}function _emscripten_glGetActiveUniformName(){err(\"missing function: emscripten_glGetActiveUniformName\");abort(-1)}function _emscripten_glGetActiveUniformsiv(program,uniformCount,uniformIndices,pname,params){if(!params){GL.recordError(1281);return}if(uniformCount>0&&uniformIndices==0){GL.recordError(1281);return}program=GL.programs[program];var ids=[];for(var i=0;i<uniformCount;i++){ids.push(HEAP32[uniformIndices+i*4>>2])}var result=GLctx[\"getActiveUniforms\"](program,ids,pname);if(!result)return;var len=result.length;for(var i=0;i<len;i++){HEAP32[params+i*4>>2]=result[i]}}function _emscripten_glGetAttachedShaders(program,maxCount,count,shaders){var result=GLctx.getAttachedShaders(GL.programs[program]);var len=result.length;if(len>maxCount){len=maxCount}HEAP32[count>>2]=len;for(var i=0;i<len;++i){var id=GL.shaders.indexOf(result[i]);HEAP32[shaders+i*4>>2]=id}}function _emscripten_glGetAttribLocation(program,name){program=GL.programs[program];name=Pointer_stringify(name);return GLctx.getAttribLocation(program,name)}function _emscripten_glGetBooleani_v(){err(\"missing function: emscripten_glGetBooleani_v\");abort(-1)}function emscriptenWebGLGet(name_,p,type){if(!p){GL.recordError(1281);return}var ret=undefined;switch(name_){case 36346:ret=1;break;case 36344:if(type!==\"Integer\"&&type!==\"Integer64\"){GL.recordError(1280)}return;case 34814:case 36345:ret=0;break;case 34466:var formats=GLctx.getParameter(34467);ret=formats.length;break;case 33309:if(GLctx.canvas.GLctxObject.version<2){GL.recordError(1282);return}var exts=GLctx.getSupportedExtensions();ret=2*exts.length;break;case 33307:case 33308:if(GLctx.canvas.GLctxObject.version<2){GL.recordError(1280);return}ret=name_==33307?3:0;break}if(ret===undefined){var result=GLctx.getParameter(name_);switch(typeof result){case\"number\":ret=result;break;case\"boolean\":ret=result?1:0;break;case\"string\":GL.recordError(1280);return;case\"object\":if(result===null){switch(name_){case 34964:case 35725:case 34965:case 36006:case 36007:case 32873:case 34229:case 35097:case 36389:case 34068:{ret=0;break};default:{GL.recordError(1280);return}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case\"Integer\":HEAP32[p+i*4>>2]=result[i];break;case\"Float\":HEAPF32[p+i*4>>2]=result[i];break;case\"Boolean\":HEAP8[p+i>>0]=result[i]?1:0;break;default:throw\"internal glGet error, bad type: \"+type}}return}else if(result instanceof WebGLBuffer||result instanceof WebGLProgram||result instanceof WebGLFramebuffer||result instanceof WebGLRenderbuffer||result instanceof WebGLQuery||result instanceof WebGLSampler||result instanceof WebGLSync||result instanceof WebGLTransformFeedback||result instanceof WebGLVertexArrayObject||result instanceof WebGLTexture){ret=result.name|0}else{GL.recordError(1280);return}break;default:GL.recordError(1280);return}}switch(type){case\"Integer64\":tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[p>>2]=tempI64[0],HEAP32[p+4>>2]=tempI64[1];break;case\"Integer\":HEAP32[p>>2]=ret;break;case\"Float\":HEAPF32[p>>2]=ret;break;case\"Boolean\":HEAP8[p>>0]=ret?1:0;break;default:throw\"internal glGet error, bad type: \"+type}}function _emscripten_glGetBooleanv(name_,p){emscriptenWebGLGet(name_,p,\"Boolean\")}function _emscripten_glGetBufferParameteriv(target,value,data){if(!data){GL.recordError(1281);return}HEAP32[data>>2]=GLctx.getBufferParameter(target,value)}function _emscripten_glGetError(){if(GL.lastError){var error=GL.lastError;GL.lastError=0;return error}else{return GLctx.getError()}}function _emscripten_glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,\"Float\")}function _emscripten_glGetFragDataLocation(program,name){return GLctx[\"getFragDataLocation\"](GL.programs[program],Pointer_stringify(name))}function _emscripten_glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0}HEAP32[params>>2]=result}function _emscripten_glGetInfoLogARB(){err(\"missing function: emscripten_glGetInfoLogARB\");abort(-1)}function emscriptenWebGLGetIndexed(target,index,data,type){if(!data){GL.recordError(1281);return}var result=GLctx[\"getIndexedParameter\"](target,index);var ret;switch(typeof result){case\"boolean\":ret=result?1:0;break;case\"number\":ret=result;break;case\"object\":if(result===null){switch(target){case 35983:case 35368:ret=0;break;default:{GL.recordError(1280);return}}}else if(result instanceof WebGLBuffer){ret=result.name|0}else{GL.recordError(1280);return}break;default:GL.recordError(1280);return}switch(type){case\"Integer64\":tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[data>>2]=tempI64[0],HEAP32[data+4>>2]=tempI64[1];break;case\"Integer\":HEAP32[data>>2]=ret;break;case\"Float\":HEAPF32[data>>2]=ret;break;case\"Boolean\":HEAP8[data>>0]=ret?1:0;break;default:throw\"internal emscriptenWebGLGetIndexed() error, bad type: \"+type}}function _emscripten_glGetIntegeri_v(target,index,data){emscriptenWebGLGetIndexed(target,index,data,\"Integer\")}function _emscripten_glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,\"Integer\")}function _emscripten_glGetObjectParameterivARB(){err(\"missing function: emscripten_glGetObjectParameterivARB\");abort(-1)}function _emscripten_glGetPointerv(){err(\"missing function: emscripten_glGetPointerv\");abort(-1)}function _emscripten_glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}var ptable=GL.programInfos[program];if(!ptable){GL.recordError(1282);return}if(pname==35716){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35719){HEAP32[p>>2]=ptable.maxUniformLength}else if(pname==35722){if(ptable.maxAttributeLength==-1){program=GL.programs[program];var numAttribs=GLctx.getProgramParameter(program,GLctx.ACTIVE_ATTRIBUTES);ptable.maxAttributeLength=0;for(var i=0;i<numAttribs;++i){var activeAttrib=GLctx.getActiveAttrib(program,i);ptable.maxAttributeLength=Math.max(ptable.maxAttributeLength,activeAttrib.name.length+1)}}HEAP32[p>>2]=ptable.maxAttributeLength}else if(pname==35381){if(ptable.maxUniformBlockNameLength==-1){program=GL.programs[program];var numBlocks=GLctx.getProgramParameter(program,GLctx.ACTIVE_UNIFORM_BLOCKS);ptable.maxUniformBlockNameLength=0;for(var i=0;i<numBlocks;++i){var activeBlockName=GLctx.getActiveUniformBlockName(program,i);ptable.maxUniformBlockNameLength=Math.max(ptable.maxUniformBlockNameLength,activeBlockName.length+1)}}HEAP32[p>>2]=ptable.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(GL.programs[program],pname)}}function _emscripten_glGetRenderbufferParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname)}function _emscripten_glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision}function _emscripten_glGetShaderSource(shader,bufSize,length,source){var result=GLctx.getShaderSource(GL.shaders[shader]);if(!result)return;if(bufSize>0&&source){var numBytesWrittenExclNull=stringToUTF8(result,source,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source===null||source.length==0?0:source.length+1;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function _emscripten_glGetString(name_){if(GL.stringCache[name_])return GL.stringCache[name_];var ret;switch(name_){case 7936:case 7937:case 37445:case 37446:ret=allocate(intArrayFromString(GLctx.getParameter(name_)),\"i8\",ALLOC_NORMAL);break;case 7938:var glVersion=GLctx.getParameter(GLctx.VERSION);if(GLctx.canvas.GLctxObject.version>=2)glVersion=\"OpenGL ES 3.0 (\"+glVersion+\")\";else{glVersion=\"OpenGL ES 2.0 (\"+glVersion+\")\"}ret=allocate(intArrayFromString(glVersion),\"i8\",ALLOC_NORMAL);break;case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(exts[i]);gl_exts.push(\"GL_\"+exts[i])}ret=allocate(intArrayFromString(gl_exts.join(\" \")),\"i8\",ALLOC_NORMAL);break;case 35724:var glslVersion=GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);var ver_re=/^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+\"0\";glslVersion=\"OpenGL ES GLSL ES \"+ver_num[1]+\" (\"+glslVersion+\")\"}ret=allocate(intArrayFromString(glslVersion),\"i8\",ALLOC_NORMAL);break;default:GL.recordError(1280);return 0}GL.stringCache[name_]=ret;return ret}function _emscripten_glGetStringi(name,index){if(GLctx.canvas.GLctxObject.version<2){GL.recordError(1282);return 0}var stringiCache=GL.stringiCache[name];if(stringiCache){if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index]}switch(name){case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(allocate(intArrayFromString(exts[i]),\"i8\",ALLOC_NORMAL));gl_exts.push(allocate(intArrayFromString(\"GL_\"+exts[i]),\"i8\",ALLOC_NORMAL))}stringiCache=GL.stringiCache[name]=gl_exts;if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index];default:GL.recordError(1280);return 0}}function _emscripten_glGetTexParameterIiv(){err(\"missing function: emscripten_glGetTexParameterIiv\");abort(-1)}function _emscripten_glGetTexParameterIuiv(){err(\"missing function: emscripten_glGetTexParameterIuiv\");abort(-1)}function _emscripten_glGetTexParameterfv(target,pname,params){if(!params){GL.recordError(1281);return}HEAPF32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTexParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTransformFeedbackVarying(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx[\"getTransformFeedbackVarying\"](program,index);if(!info)return;if(name&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetUniformBlockIndex(program,uniformBlockName){program=GL.programs[program];uniformBlockName=Pointer_stringify(uniformBlockName);return GLctx[\"getUniformBlockIndex\"](program,uniformBlockName)}function _emscripten_glGetUniformIndices(program,uniformCount,uniformNames,uniformIndices){if(!uniformIndices){GL.recordError(1281);return}if(uniformCount>0&&(uniformNames==0||uniformIndices==0)){GL.recordError(1281);return}program=GL.programs[program];var names=[];for(var i=0;i<uniformCount;i++)names.push(Pointer_stringify(HEAP32[uniformNames+i*4>>2]));var result=GLctx[\"getUniformIndices\"](program,names);if(!result)return;var len=result.length;for(var i=0;i<len;i++){HEAP32[uniformIndices+i*4>>2]=result[i]}}function _emscripten_glGetUniformLocation(program,name){name=Pointer_stringify(name);var arrayOffset=0;if(name.indexOf(\"]\",name.length-1)!==-1){var ls=name.lastIndexOf(\"[\");var arrayIndex=name.slice(ls+1,-1);if(arrayIndex.length>0){arrayOffset=parseInt(arrayIndex);if(arrayOffset<0){return-1}}name=name.slice(0,ls)}var ptable=GL.programInfos[program];if(!ptable){return-1}var utable=ptable.uniforms;var uniformInfo=utable[name];if(uniformInfo&&arrayOffset<uniformInfo[0]){return uniformInfo[1]+arrayOffset}else{return-1}}function emscriptenWebGLGetUniform(program,location,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getUniform(GL.programs[program],GL.uniforms[location]);if(typeof data==\"number\"||typeof data==\"boolean\"){switch(type){case\"Integer\":HEAP32[params>>2]=data;break;case\"Float\":HEAPF32[params>>2]=data;break;default:throw\"internal emscriptenWebGLGetUniform() error, bad type: \"+type}}else{for(var i=0;i<data.length;i++){switch(type){case\"Integer\":HEAP32[params+i*4>>2]=data[i];break;case\"Float\":HEAPF32[params+i*4>>2]=data[i];break;default:throw\"internal emscriptenWebGLGetUniform() error, bad type: \"+type}}}}function _emscripten_glGetUniformfv(program,location,params){emscriptenWebGLGetUniform(program,location,params,\"Float\")}function _emscripten_glGetUniformiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,\"Integer\")}function _emscripten_glGetUniformuiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,\"Integer\")}function emscriptenWebGLGetVertexAttrib(index,pname,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getVertexAttrib(index,pname);if(pname==34975){HEAP32[params>>2]=data[\"name\"]}else if(typeof data==\"number\"||typeof data==\"boolean\"){switch(type){case\"Integer\":HEAP32[params>>2]=data;break;case\"Float\":HEAPF32[params>>2]=data;break;case\"FloatToInteger\":HEAP32[params>>2]=Math.fround(data);break;default:throw\"internal emscriptenWebGLGetVertexAttrib() error, bad type: \"+type}}else{for(var i=0;i<data.length;i++){switch(type){case\"Integer\":HEAP32[params+i*4>>2]=data[i];break;case\"Float\":HEAPF32[params+i*4>>2]=data[i];break;case\"FloatToInteger\":HEAP32[params+i*4>>2]=Math.fround(data[i]);break;default:throw\"internal emscriptenWebGLGetVertexAttrib() error, bad type: \"+type}}}}function _emscripten_glGetVertexAttribIiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"Integer\")}function _emscripten_glGetVertexAttribIuiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"Integer\")}function _emscripten_glGetVertexAttribPointerv(index,pname,pointer){if(!pointer){GL.recordError(1281);return}HEAP32[pointer>>2]=GLctx.getVertexAttribOffset(index,pname)}function _emscripten_glGetVertexAttribfv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"Float\")}function _emscripten_glGetVertexAttribiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"FloatToInteger\")}function _emscripten_glHint(x0,x1){GLctx[\"hint\"](x0,x1)}function _emscripten_glIsBuffer(buffer){var b=GL.buffers[buffer];if(!b)return 0;return GLctx.isBuffer(b)}function _emscripten_glIsEnabled(x0){return GLctx[\"isEnabled\"](x0)}function _emscripten_glIsEnabledi(){err(\"missing function: emscripten_glIsEnabledi\");abort(-1)}function _emscripten_glIsFramebuffer(framebuffer){var fb=GL.framebuffers[framebuffer];if(!fb)return 0;return GLctx.isFramebuffer(fb)}function _emscripten_glIsProgram(program){program=GL.programs[program];if(!program)return 0;return GLctx.isProgram(program)}function _emscripten_glIsRenderbuffer(renderbuffer){var rb=GL.renderbuffers[renderbuffer];if(!rb)return 0;return GLctx.isRenderbuffer(rb)}function _emscripten_glIsShader(shader){var s=GL.shaders[shader];if(!s)return 0;return GLctx.isShader(s)}function _emscripten_glIsTexture(texture){var texture=GL.textures[texture];if(!texture)return 0;return GLctx.isTexture(texture)}function _emscripten_glIsVertexArray(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx[\"isVertexArray\"](vao)}function _emscripten_glLineWidth(x0){GLctx[\"lineWidth\"](x0)}function _emscripten_glLinkProgram(program){GLctx.linkProgram(GL.programs[program]);GL.programInfos[program]=null;GL.populateUniformTable(program)}function _emscripten_glLoadIdentity(){throw\"Legacy GL function (glLoadIdentity) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation.\"}function _emscripten_glLoadMatrixf(){err(\"missing function: emscripten_glLoadMatrixf\");abort(-1)}function _emscripten_glMatrixMode(){throw\"Legacy GL function (glMatrixMode) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation.\"}function _emscripten_glNormalPointer(){err(\"missing function: emscripten_glNormalPointer\");abort(-1)}function _emscripten_glPixelStorei(pname,param){if(pname==3333){GL.packAlignment=param}else if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _emscripten_glPolygonOffset(x0,x1){GLctx[\"polygonOffset\"](x0,x1)}function emscriptenWebGLComputeImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return Math.floor((x+y-1)/y)*y}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height<=0?0:(height-1)*alignedRowSize+plainRowSize}function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var sizePerPixel;var numChannels;switch(format){case 6406:case 6409:case 6402:case 6403:case 36244:numChannels=1;break;case 6410:case 33319:case 33320:numChannels=2;break;case 6407:case 35904:case 36248:numChannels=3;break;case 6408:case 35906:case 36249:numChannels=4;break;default:GL.recordError(1280);return null}switch(type){case 5121:case 5120:sizePerPixel=numChannels*1;break;case 5123:case 36193:case 5131:case 5122:sizePerPixel=numChannels*2;break;case 5125:case 5126:case 5124:sizePerPixel=numChannels*4;break;case 34042:case 35902:case 33640:case 35899:case 34042:sizePerPixel=4;break;case 33635:case 32819:case 32820:sizePerPixel=2;break;default:GL.recordError(1280);return null}var bytes=emscriptenWebGLComputeImageSize(width,height,sizePerPixel,GL.unpackAlignment);switch(type){case 5120:return HEAP8.subarray(pixels,pixels+bytes);case 5121:return HEAPU8.subarray(pixels,pixels+bytes);case 5122:return HEAP16.subarray(pixels>>1,pixels+bytes>>1);case 5124:return HEAP32.subarray(pixels>>2,pixels+bytes>>2);case 5126:return HEAPF32.subarray(pixels>>2,pixels+bytes>>2);case 5125:case 34042:case 35902:case 33640:case 35899:case 34042:return HEAPU32.subarray(pixels>>2,pixels+bytes>>2);case 5123:case 33635:case 32819:case 32820:case 36193:case 5131:return HEAPU16.subarray(pixels>>1,pixels+bytes>>1);default:GL.recordError(1280);return null}}function emscriptenWebGLGetHeapForType(type){switch(type){case 5120:return HEAP8;case 5121:return HEAPU8;case 5122:return HEAP16;case 5123:case 33635:case 32819:case 32820:case 36193:case 5131:return HEAPU16;case 5124:return HEAP32;case 5125:case 34042:case 35902:case 33640:case 35899:case 34042:return HEAPU32;case 5126:return HEAPF32;default:return null}}function emscriptenWebGLGetShiftForType(type){switch(type){case 5120:case 5121:return 0;case 5122:case 5123:case 33635:case 32819:case 32820:case 36193:case 5131:return 1;case 5124:case 5126:case 5125:case 34042:case 35902:case 33640:case 35899:case 34042:return 2;default:return 0}}function _emscripten_glReadPixels(x,y,width,height,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels)}else{GLctx.readPixels(x,y,width,height,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}return}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _emscripten_glReleaseShaderCompiler(){}function _emscripten_glRenderbufferStorage(x0,x1,x2,x3){GLctx[\"renderbufferStorage\"](x0,x1,x2,x3)}function _emscripten_glRotatef(){err(\"missing function: emscripten_glRotatef\");abort(-1)}function _emscripten_glSampleCoverage(value,invert){GLctx.sampleCoverage(value,!!invert)}function _emscripten_glScissor(x0,x1,x2,x3){GLctx[\"scissor\"](x0,x1,x2,x3)}function _emscripten_glShaderBinary(){GL.recordError(1280)}function _emscripten_glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _emscripten_glStencilFunc(x0,x1,x2){GLctx[\"stencilFunc\"](x0,x1,x2)}function _emscripten_glStencilFuncSeparate(x0,x1,x2,x3){GLctx[\"stencilFuncSeparate\"](x0,x1,x2,x3)}function _emscripten_glStencilMask(x0){GLctx[\"stencilMask\"](x0)}function _emscripten_glStencilMaskSeparate(x0,x1){GLctx[\"stencilMaskSeparate\"](x0,x1)}function _emscripten_glStencilOp(x0,x1,x2){GLctx[\"stencilOp\"](x0,x1,x2)}function _emscripten_glStencilOpSeparate(x0,x1,x2,x3){GLctx[\"stencilOpSeparate\"](x0,x1,x2,x3)}function _emscripten_glTexCoordPointer(){err(\"missing function: emscripten_glTexCoordPointer\");abort(-1)}function _emscripten_glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels)}else if(pixels!=0){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixelData)}function _emscripten_glTexImage3D(target,level,internalFormat,width,height,depth,border,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx[\"texImage3D\"](target,level,internalFormat,width,height,depth,border,format,type,pixels)}else if(pixels!=0){GLctx[\"texImage3D\"](target,level,internalFormat,width,height,depth,border,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx[\"texImage3D\"](target,level,internalFormat,width,height,depth,border,format,type,null)}}function _emscripten_glTexParameterIiv(){err(\"missing function: emscripten_glTexParameterIiv\");abort(-1)}function _emscripten_glTexParameterIuiv(){err(\"missing function: emscripten_glTexParameterIuiv\");abort(-1)}function _emscripten_glTexParameterf(x0,x1,x2){GLctx[\"texParameterf\"](x0,x1,x2)}function _emscripten_glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param)}function _emscripten_glTexParameteri(x0,x1,x2){GLctx[\"texParameteri\"](x0,x1,x2)}function _emscripten_glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param)}function _emscripten_glTexStorage2D(x0,x1,x2,x3,x4){GLctx[\"texStorage2D\"](x0,x1,x2,x3,x4)}function _emscripten_glTexStorage3D(x0,x1,x2,x3,x4,x5){GLctx[\"texStorage3D\"](x0,x1,x2,x3,x4,x5)}function _emscripten_glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels)}else if(pixels!=0){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _emscripten_glTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx[\"texSubImage3D\"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels)}else if(pixels!=0){GLctx[\"texSubImage3D\"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx[\"texSubImage3D\"](target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,null)}}function _emscripten_glTransformFeedbackVaryings(program,count,varyings,bufferMode){program=GL.programs[program];var vars=[];for(var i=0;i<count;i++)vars.push(Pointer_stringify(HEAP32[varyings+i*4>>2]));GLctx[\"transformFeedbackVaryings\"](program,vars,bufferMode)}function _emscripten_glUniform1f(location,v0){GLctx.uniform1f(GL.uniforms[location],v0)}function _emscripten_glUniform1fv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform1fv(GL.uniforms[location],HEAPF32,value>>2,count);return}var view;if(count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[count-1];for(var i=0;i<count;++i){view[i]=HEAPF32[value+4*i>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*4>>2)}GLctx.uniform1fv(GL.uniforms[location],view)}function _emscripten_glUniform1i(location,v0){GLctx.uniform1i(GL.uniforms[location],v0)}function _emscripten_glUniform1iv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform1iv(GL.uniforms[location],HEAP32,value>>2,count);return}GLctx.uniform1iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*4>>2))}function _emscripten_glUniform1ui(location,v0){GLctx.uniform1ui(GL.uniforms[location],v0)}function _emscripten_glUniform2f(location,v0,v1){GLctx.uniform2f(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2fv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform2fv(GL.uniforms[location],HEAPF32,value>>2,count*2);return}var view;if(2*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*8>>2)}GLctx.uniform2fv(GL.uniforms[location],view)}function _emscripten_glUniform2i(location,v0,v1){GLctx.uniform2i(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2iv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform2iv(GL.uniforms[location],HEAP32,value>>2,count*2);return}GLctx.uniform2iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*8>>2))}function _emscripten_glUniform2ui(location,v0,v1){GLctx.uniform2ui(GL.uniforms[location],v0,v1)}function _emscripten_glUniform3f(location,v0,v1,v2){GLctx.uniform3f(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3fv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform3fv(GL.uniforms[location],HEAPF32,value>>2,count*3);return}var view;if(3*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*12>>2)}GLctx.uniform3fv(GL.uniforms[location],view)}function _emscripten_glUniform3i(location,v0,v1,v2){GLctx.uniform3i(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3iv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform3iv(GL.uniforms[location],HEAP32,value>>2,count*3);return}GLctx.uniform3iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*12>>2))}function _emscripten_glUniform3ui(location,v0,v1,v2){GLctx.uniform3ui(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4fv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform4fv(GL.uniforms[location],HEAPF32,value>>2,count*4);return}var view;if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniform4fv(GL.uniforms[location],view)}function _emscripten_glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4iv(location,count,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniform4iv(GL.uniforms[location],HEAP32,value>>2,count*4);return}GLctx.uniform4iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*16>>2))}function _emscripten_glUniform4ui(location,v0,v1,v2,v3){GLctx.uniform4ui(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding){program=GL.programs[program];GLctx[\"uniformBlockBinding\"](program,uniformBlockIndex,uniformBlockBinding)}function _emscripten_glUniformMatrix2fv(location,count,transpose,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniformMatrix2fv(GL.uniforms[location],!!transpose,HEAPF32,value>>2,count*4);return}var view;if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniformMatrix2fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix3fv(location,count,transpose,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniformMatrix3fv(GL.uniforms[location],!!transpose,HEAPF32,value>>2,count*9);return}var view;if(9*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[9*count-1];for(var i=0;i<9*count;i+=9){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*36>>2)}GLctx.uniformMatrix3fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix4fv(location,count,transpose,value){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.uniformMatrix4fv(GL.uniforms[location],!!transpose,HEAPF32,value>>2,count*16);return}var view;if(16*count<=GL.MINI_TEMP_BUFFER_SIZE){view=GL.miniTempBufferViews[16*count-1];for(var i=0;i<16*count;i+=16){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2];view[i+9]=HEAPF32[value+(4*i+36)>>2];view[i+10]=HEAPF32[value+(4*i+40)>>2];view[i+11]=HEAPF32[value+(4*i+44)>>2];view[i+12]=HEAPF32[value+(4*i+48)>>2];view[i+13]=HEAPF32[value+(4*i+52)>>2];view[i+14]=HEAPF32[value+(4*i+56)>>2];view[i+15]=HEAPF32[value+(4*i+60)>>2]}}else{view=HEAPF32.subarray(value>>2,value+count*64>>2)}GLctx.uniformMatrix4fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUseProgram(program){GLctx.useProgram(program?GL.programs[program]:null)}function _emscripten_glValidateProgram(program){GLctx.validateProgram(GL.programs[program])}function _emscripten_glVertexAttrib1f(x0,x1){GLctx[\"vertexAttrib1f\"](x0,x1)}function _emscripten_glVertexAttrib1fv(index,v){GLctx.vertexAttrib1f(index,HEAPF32[v>>2])}function _emscripten_glVertexAttrib2f(x0,x1,x2){GLctx[\"vertexAttrib2f\"](x0,x1,x2)}function _emscripten_glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2])}function _emscripten_glVertexAttrib3f(x0,x1,x2,x3){GLctx[\"vertexAttrib3f\"](x0,x1,x2,x3)}function _emscripten_glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2])}function _emscripten_glVertexAttrib4f(x0,x1,x2,x3,x4){GLctx[\"vertexAttrib4f\"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2])}function _emscripten_glVertexAttribDivisor(index,divisor){GLctx[\"vertexAttribDivisor\"](index,divisor)}function _emscripten_glVertexAttribI1i(){err(\"missing function: emscripten_glVertexAttribI1i\");abort(-1)}function _emscripten_glVertexAttribI1iv(){err(\"missing function: emscripten_glVertexAttribI1iv\");abort(-1)}function _emscripten_glVertexAttribI1ui(){err(\"missing function: emscripten_glVertexAttribI1ui\");abort(-1)}function _emscripten_glVertexAttribI1uiv(){err(\"missing function: emscripten_glVertexAttribI1uiv\");abort(-1)}function _emscripten_glVertexAttribI2i(){err(\"missing function: emscripten_glVertexAttribI2i\");abort(-1)}function _emscripten_glVertexAttribI2iv(){err(\"missing function: emscripten_glVertexAttribI2iv\");abort(-1)}function _emscripten_glVertexAttribI2ui(){err(\"missing function: emscripten_glVertexAttribI2ui\");abort(-1)}function _emscripten_glVertexAttribI2uiv(){err(\"missing function: emscripten_glVertexAttribI2uiv\");abort(-1)}function _emscripten_glVertexAttribI3i(){err(\"missing function: emscripten_glVertexAttribI3i\");abort(-1)}function _emscripten_glVertexAttribI3iv(){err(\"missing function: emscripten_glVertexAttribI3iv\");abort(-1)}function _emscripten_glVertexAttribI3ui(){err(\"missing function: emscripten_glVertexAttribI3ui\");abort(-1)}function _emscripten_glVertexAttribI3uiv(){err(\"missing function: emscripten_glVertexAttribI3uiv\");abort(-1)}function _emscripten_glVertexAttribI4bv(){err(\"missing function: emscripten_glVertexAttribI4bv\");abort(-1)}function _emscripten_glVertexAttribI4i(x0,x1,x2,x3,x4){GLctx[\"vertexAttribI4i\"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttribI4iv(index,v){GLctx.vertexAttribI4i(index,HEAP32[v>>2],HEAP32[v+4>>2],HEAP32[v+8>>2],HEAP32[v+12>>2])}function _emscripten_glVertexAttribI4sv(){err(\"missing function: emscripten_glVertexAttribI4sv\");abort(-1)}function _emscripten_glVertexAttribI4ubv(){err(\"missing function: emscripten_glVertexAttribI4ubv\");abort(-1)}function _emscripten_glVertexAttribI4ui(x0,x1,x2,x3,x4){GLctx[\"vertexAttribI4ui\"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttribI4uiv(index,v){GLctx.vertexAttribI4ui(index,HEAPU32[v>>2],HEAPU32[v+4>>2],HEAPU32[v+8>>2],HEAPU32[v+12>>2])}function _emscripten_glVertexAttribI4usv(){err(\"missing function: emscripten_glVertexAttribI4usv\");abort(-1)}function _emscripten_glVertexAttribIPointer(index,size,type,stride,ptr){GLctx.vertexAttribIPointer(index,size,type,stride,ptr)}function _emscripten_glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _emscripten_glVertexPointer(){throw\"Legacy GL function (glVertexPointer) called. If you want legacy GL emulation, you need to compile with -s LEGACY_GL_EMULATION=1 to enable legacy GL emulation.\"}function _emscripten_glViewport(x0,x1,x2,x3){GLctx[\"viewport\"](x0,x1,x2,x3)}function _glActiveTexture(x0){GLctx[\"activeTexture\"](x0)}function _glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _glBindBuffer(target,buffer){var bufferObj=buffer?GL.buffers[buffer]:null;if(target==35051){GLctx.currentPixelPackBufferBinding=buffer}else if(target==35052){GLctx.currentPixelUnpackBufferBinding=buffer}GLctx.bindBuffer(target,bufferObj)}function _glBindBufferRange(target,index,buffer,offset,ptrsize){var bufferObj=buffer?GL.buffers[buffer]:null;GLctx[\"bindBufferRange\"](target,index,bufferObj,offset,ptrsize)}function _glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,framebuffer?GL.framebuffers[framebuffer]:null)}function _glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,renderbuffer?GL.renderbuffers[renderbuffer]:null)}function _glBindSampler(unit,sampler){GLctx[\"bindSampler\"](unit,sampler?GL.samplers[sampler]:null)}function _glBindTexture(target,texture){GLctx.bindTexture(target,texture?GL.textures[texture]:null)}function _glBindVertexArray(vao){GLctx[\"bindVertexArray\"](GL.vaos[vao])}function _glBlendEquationSeparate(x0,x1){GLctx[\"blendEquationSeparate\"](x0,x1)}function _glBlendFuncSeparate(x0,x1,x2,x3){GLctx[\"blendFuncSeparate\"](x0,x1,x2,x3)}function _glBlitFramebuffer(x0,x1,x2,x3,x4,x5,x6,x7,x8,x9){GLctx[\"blitFramebuffer\"](x0,x1,x2,x3,x4,x5,x6,x7,x8,x9)}function _glBufferData(target,size,data,usage){if(!data){GLctx.bufferData(target,size,usage)}else{if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.bufferData(target,HEAPU8,usage,data,size);return}GLctx.bufferData(target,HEAPU8.subarray(data,data+size),usage)}}function _glBufferSubData(target,offset,size,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx.bufferSubData(target,offset,HEAPU8,data,size);return}GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _glClear(x0){GLctx[\"clear\"](x0)}function _glClearColor(x0,x1,x2,x3){GLctx[\"clearColor\"](x0,x1,x2,x3)}function _glClearDepthf(x0){GLctx[\"clearDepth\"](x0)}function _glClearStencil(x0){GLctx[\"clearStencil\"](x0)}function _glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){if(GL.currentContext.supportsWebGL2EntryPoints){GLctx[\"compressedTexSubImage2D\"](target,level,xoffset,yoffset,width,height,format,HEAPU8,data,imageSize);return}GLctx[\"compressedTexSubImage2D\"](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null)}function _glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;GL.programs[id]=program;return id}function _glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _glCullFace(x0){GLctx[\"cullFace\"](x0)}function _glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GL.currArrayBuffer)GL.currArrayBuffer=0;if(id==GL.currElementArrayBuffer)GL.currElementArrayBuffer=0}}function _glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;GL.programInfos[id]=null}function _glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _glDeleteSamplers(n,samplers){for(var i=0;i<n;i++){var id=HEAP32[samplers+i*4>>2];var sampler=GL.samplers[id];if(!sampler)continue;GLctx[\"deleteSampler\"](sampler);sampler.name=0;GL.samplers[id]=null}}function _glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _glDeleteSync(id){if(!id)return;var sync=GL.syncs[id];if(!sync){GL.recordError(1281);return}GLctx.deleteSync(sync);sync.name=0;GL.syncs[id]=null}function _glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx[\"deleteVertexArray\"](GL.vaos[id]);GL.vaos[id]=null}}function _glDepthFunc(x0){GLctx[\"depthFunc\"](x0)}function _glDepthMask(flag){GLctx.depthMask(!!flag)}function _glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _glDisable(x0){GLctx[\"disable\"](x0)}function _glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _glDrawRangeElements(mode,start,end,count,type,indices){_emscripten_glDrawElements(mode,count,type,indices)}function _glEnable(x0){GLctx[\"enable\"](x0)}function _glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _glFenceSync(condition,flags){var sync=GLctx.fenceSync(condition,flags);if(sync){var id=GL.getNewId(GL.syncs);sync.name=id;GL.syncs[id]=sync;return id}else{return 0}}function _glFlush(){GLctx[\"flush\"]()}function _glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _glFrontFace(x0){GLctx[\"frontFace\"](x0)}function _glGenBuffers(n,buffers){for(var i=0;i<n;i++){var buffer=GLctx.createBuffer();if(!buffer){GL.recordError(1282);while(i<n)HEAP32[buffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.buffers);buffer.name=id;GL.buffers[id]=buffer;HEAP32[buffers+i*4>>2]=id}}function _glGenFramebuffers(n,ids){for(var i=0;i<n;++i){var framebuffer=GLctx.createFramebuffer();if(!framebuffer){GL.recordError(1282);while(i<n)HEAP32[ids+i++*4>>2]=0;return}var id=GL.getNewId(GL.framebuffers);framebuffer.name=id;GL.framebuffers[id]=framebuffer;HEAP32[ids+i*4>>2]=id}}function _glGenRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var renderbuffer=GLctx.createRenderbuffer();if(!renderbuffer){GL.recordError(1282);while(i<n)HEAP32[renderbuffers+i++*4>>2]=0;return}var id=GL.getNewId(GL.renderbuffers);renderbuffer.name=id;GL.renderbuffers[id]=renderbuffer;HEAP32[renderbuffers+i*4>>2]=id}}function _glGenSamplers(n,samplers){for(var i=0;i<n;i++){var sampler=GLctx[\"createSampler\"]();if(!sampler){GL.recordError(1282);while(i<n)HEAP32[samplers+i++*4>>2]=0;return}var id=GL.getNewId(GL.samplers);sampler.name=id;GL.samplers[id]=sampler;HEAP32[samplers+i*4>>2]=id}}function _glGenTextures(n,textures){for(var i=0;i<n;i++){var texture=GLctx.createTexture();if(!texture){GL.recordError(1282);while(i<n)HEAP32[textures+i++*4>>2]=0;return}var id=GL.getNewId(GL.textures);texture.name=id;GL.textures[id]=texture;HEAP32[textures+i*4>>2]=id}}function _glGenVertexArrays(n,arrays){for(var i=0;i<n;i++){var vao=GLctx[\"createVertexArray\"]();if(!vao){GL.recordError(1282);while(i<n)HEAP32[arrays+i++*4>>2]=0;return}var id=GL.getNewId(GL.vaos);vao.name=id;GL.vaos[id]=vao;HEAP32[arrays+i*4>>2]=id}}function _glGenerateMipmap(x0){GLctx[\"generateMipmap\"](x0)}function _glGetError(){if(GL.lastError){var error=GL.lastError;GL.lastError=0;return error}else{return GLctx.getError()}}function _glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,\"Float\")}function _glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,\"Integer\")}function _glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}var ptable=GL.programInfos[program];if(!ptable){GL.recordError(1282);return}if(pname==35716){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35719){HEAP32[p>>2]=ptable.maxUniformLength}else if(pname==35722){if(ptable.maxAttributeLength==-1){program=GL.programs[program];var numAttribs=GLctx.getProgramParameter(program,GLctx.ACTIVE_ATTRIBUTES);ptable.maxAttributeLength=0;for(var i=0;i<numAttribs;++i){var activeAttrib=GLctx.getActiveAttrib(program,i);ptable.maxAttributeLength=Math.max(ptable.maxAttributeLength,activeAttrib.name.length+1)}}HEAP32[p>>2]=ptable.maxAttributeLength}else if(pname==35381){if(ptable.maxUniformBlockNameLength==-1){program=GL.programs[program];var numBlocks=GLctx.getProgramParameter(program,GLctx.ACTIVE_UNIFORM_BLOCKS);ptable.maxUniformBlockNameLength=0;for(var i=0;i<numBlocks;++i){var activeBlockName=GLctx.getActiveUniformBlockName(program,i);ptable.maxUniformBlockNameLength=Math.max(ptable.maxUniformBlockNameLength,activeBlockName.length+1)}}HEAP32[p>>2]=ptable.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(GL.programs[program],pname)}}function _glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source===null||source.length==0?0:source.length+1;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function _glGetString(name_){if(GL.stringCache[name_])return GL.stringCache[name_];var ret;switch(name_){case 7936:case 7937:case 37445:case 37446:ret=allocate(intArrayFromString(GLctx.getParameter(name_)),\"i8\",ALLOC_NORMAL);break;case 7938:var glVersion=GLctx.getParameter(GLctx.VERSION);if(GLctx.canvas.GLctxObject.version>=2)glVersion=\"OpenGL ES 3.0 (\"+glVersion+\")\";else{glVersion=\"OpenGL ES 2.0 (\"+glVersion+\")\"}ret=allocate(intArrayFromString(glVersion),\"i8\",ALLOC_NORMAL);break;case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(exts[i]);gl_exts.push(\"GL_\"+exts[i])}ret=allocate(intArrayFromString(gl_exts.join(\" \")),\"i8\",ALLOC_NORMAL);break;case 35724:var glslVersion=GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);var ver_re=/^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+\"0\";glslVersion=\"OpenGL ES GLSL ES \"+ver_num[1]+\" (\"+glslVersion+\")\"}ret=allocate(intArrayFromString(glslVersion),\"i8\",ALLOC_NORMAL);break;default:GL.recordError(1280);return 0}GL.stringCache[name_]=ret;return ret}function _glGetStringi(name,index){if(GLctx.canvas.GLctxObject.version<2){GL.recordError(1282);return 0}var stringiCache=GL.stringiCache[name];if(stringiCache){if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index]}switch(name){case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(allocate(intArrayFromString(exts[i]),\"i8\",ALLOC_NORMAL));gl_exts.push(allocate(intArrayFromString(\"GL_\"+exts[i]),\"i8\",ALLOC_NORMAL))}stringiCache=GL.stringiCache[name]=gl_exts;if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index];default:GL.recordError(1280);return 0}}function _glGetUniformBlockIndex(program,uniformBlockName){program=GL.programs[program];uniformBlockName=Pointer_stringify(uniformBlockName);return GLctx[\"getUniformBlockIndex\"](program,uniformBlockName)}function _glGetUniformLocation(program,name){name=Pointer_stringify(name);var arrayOffset=0;if(name.indexOf(\"]\",name.length-1)!==-1){var ls=name.lastIndexOf(\"[\");var arrayIndex=name.slice(ls+1,-1);if(arrayIndex.length>0){arrayOffset=parseInt(arrayIndex);if(arrayOffset<0){return-1}}name=name.slice(0,ls)}var ptable=GL.programInfos[program];if(!ptable){return-1}var utable=ptable.uniforms;var uniformInfo=utable[name];if(uniformInfo&&arrayOffset<uniformInfo[0]){return uniformInfo[1]+arrayOffset}else{return-1}}function _glGetVertexAttribiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,\"FloatToInteger\")}function _glHint(x0,x1){GLctx[\"hint\"](x0,x1)}function _glInvalidateFramebuffer(target,numAttachments,attachments){var list=GL.tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2]}GLctx[\"invalidateFramebuffer\"](target,list)}function _glInvalidateSubFramebuffer(target,numAttachments,attachments,x,y,width,height){var list=GL.tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2]}GLctx[\"invalidateSubFramebuffer\"](target,list,x,y,width,height)}function _glIsEnabled(x0){return GLctx[\"isEnabled\"](x0)}function _glLinkProgram(program){GLctx.linkProgram(GL.programs[program]);GL.programInfos[program]=null;GL.populateUniformTable(program)}function _glPixelStorei(pname,param){if(pname==3333){GL.packAlignment=param}else if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _glPolygonOffset(x0,x1){GLctx[\"polygonOffset\"](x0,x1)}function _glReadPixels(x,y,width,height,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels)}else{GLctx.readPixels(x,y,width,height,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}return}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _glRenderbufferStorage(x0,x1,x2,x3){GLctx[\"renderbufferStorage\"](x0,x1,x2,x3)}function _glRenderbufferStorageMultisample(x0,x1,x2,x3,x4){GLctx[\"renderbufferStorageMultisample\"](x0,x1,x2,x3,x4)}function _glSamplerParameteri(sampler,pname,param){GLctx[\"samplerParameteri\"](sampler?GL.samplers[sampler]:null,pname,param)}function _glScissor(x0,x1,x2,x3){GLctx[\"scissor\"](x0,x1,x2,x3)}function _glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _glTexParameteri(x0,x1,x2){GLctx[\"texParameteri\"](x0,x1,x2)}function _glTexStorage2D(x0,x1,x2,x3,x4){GLctx[\"texStorage2D\"](x0,x1,x2,x3,x4)}function _glTexStorage2DMultisample(){err(\"missing function: glTexStorage2DMultisample\");abort(-1)}function _glTexStorage3D(x0,x1,x2,x3,x4,x5){GLctx[\"texStorage3D\"](x0,x1,x2,x3,x4,x5)}function _glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(GL.currentContext.supportsWebGL2EntryPoints){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels)}else if(pixels!=0){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,emscriptenWebGLGetHeapForType(type),pixels>>emscriptenWebGLGetShiftForType(type))}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _glUniform1f(location,v0){GLctx.uniform1f(GL.uniforms[location],v0)}function _glUniform1i(location,v0){GLctx.uniform1i(GL.uniforms[location],v0)}function _glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(GL.uniforms[location],v0,v1,v2,v3)}function _glUniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding){program=GL.programs[program];GLctx[\"uniformBlockBinding\"](program,uniformBlockIndex,uniformBlockBinding)}function _glUseProgram(program){GLctx.useProgram(program?GL.programs[program]:null)}function _glVertexAttribIPointer(index,size,type,stride,ptr){GLctx.vertexAttribIPointer(index,size,type,stride,ptr)}function _glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _glViewport(x0,x1,x2,x3){GLctx[\"viewport\"](x0,x1,x2,x3)}function _glWaitSync(sync,flags,timeoutLo,timeoutHi){timeoutLo=timeoutLo>>>0;timeoutHi=timeoutHi>>>0;var timeout=timeoutLo==4294967295&&timeoutHi==4294967295?-1:makeBigInt(timeoutLo,timeoutHi,true);GLctx.waitSync(GL.syncs[sync],flags,timeout)}var _llvm_ceil_f32=Math_ceil;function _llvm_cttz_i32(x){x=x|0;return(x?31-(Math_clz32(x^x-1)|0)|0:32)|0}function _llvm_cttz_i64(l,h){var ret=_llvm_cttz_i32(l);if(ret==32)ret+=_llvm_cttz_i32(h);return(setTempRet0(0),ret)|0}function _llvm_exp2_f32(x){return Math.pow(2,x)}function _llvm_exp2_f64(){return _llvm_exp2_f32.apply(null,arguments)}var _llvm_fabs_f32=Math_abs;var _llvm_floor_f32=Math_floor;function _llvm_log2_f32(x){return Math.log(x)/Math.LN2}function _llvm_trap(){abort(\"trap!\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function _pthread_cond_destroy(){return 0}function _pthread_cond_signal(){return 0}function _pthread_cond_timedwait(){return 0}function _pthread_cond_wait(){return 0}function _pthread_create(){return 11}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}function _pthread_join(){}var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_mutex_destroy(){}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:var maxHeapSize=2*1024*1024*1024-65536;return maxHeapSize/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}FS.staticInit();__ATINIT__.unshift((function(){if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var NODEJS_PATH=require(\"path\");NODEFS.staticInit()}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function _emscripten_get_now_actual(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now=dateNow}else if(typeof self===\"object\"&&self[\"performance\"]&&typeof self[\"performance\"][\"now\"]===\"function\"){_emscripten_get_now=(function(){return self[\"performance\"][\"now\"]()})}else if(typeof performance===\"object\"&&typeof performance[\"now\"]===\"function\"){_emscripten_get_now=(function(){return performance[\"now\"]()})}else{_emscripten_get_now=Date.now}Module[\"requestFullScreen\"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){err(\"Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.\");Module[\"requestFullScreen\"]=Module[\"requestFullscreen\"];Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module[\"requestFullscreen\"]=function Module_requestFullscreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)};Module[\"requestAnimationFrame\"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module[\"setCanvasSize\"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module[\"pauseMainLoop\"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module[\"resumeMainLoop\"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module[\"getUserMedia\"]=function Module_getUserMedia(){Browser.getUserMedia()};Module[\"createContext\"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};var GLctx;GL.init();DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module[\"wasmTableSize\"]=1252;Module[\"wasmMaxTableSize\"]=1252;function invoke_fi(index,a1){var sp=stackSave();try{return Module[\"dynCall_fi\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_fii(index,a1,a2){var sp=stackSave();try{return Module[\"dynCall_fii\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_i(index){var sp=stackSave();try{return Module[\"dynCall_i\"](index)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_ii(index,a1){var sp=stackSave();try{return Module[\"dynCall_ii\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iif(index,a1,a2){var sp=stackSave();try{return Module[\"dynCall_iif\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiff(index,a1,a2,a3){var sp=stackSave();try{return Module[\"dynCall_iiff\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iii(index,a1,a2){var sp=stackSave();try{return Module[\"dynCall_iii\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiif(index,a1,a2,a3){var sp=stackSave();try{return Module[\"dynCall_iiif\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiff(index,a1,a2,a3,a4){var sp=stackSave();try{return Module[\"dynCall_iiiff\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return Module[\"dynCall_iiii\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return Module[\"dynCall_iiiii\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return Module[\"dynCall_iiiiii\"](index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return Module[\"dynCall_iiiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return Module[\"dynCall_iiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_iiij(index,a1,a2,a3,a4){var sp=stackSave();try{return Module[\"dynCall_iiij\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_jii(index,a1,a2){var sp=stackSave();try{return Module[\"dynCall_jii\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_v(index){var sp=stackSave();try{Module[\"dynCall_v\"](index)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vd(index,a1){var sp=stackSave();try{Module[\"dynCall_vd\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vdd(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vdd\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vdddddd(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{Module[\"dynCall_vdddddd\"](index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vf(index,a1){var sp=stackSave();try{Module[\"dynCall_vf\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vff(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vff\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vffff(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_vffff\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vfi(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vfi\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{Module[\"dynCall_vi\"](index,a1)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viddddi(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{Module[\"dynCall_viddddi\"](index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vif(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vif\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viff(index,a1,a2,a3){var sp=stackSave();try{Module[\"dynCall_viff\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vifff(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_vifff\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viffff(index,a1,a2,a3,a4,a5){var sp=stackSave();try{Module[\"dynCall_viffff\"](index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{Module[\"dynCall_vii\"](index,a1,a2)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viidddddd(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{Module[\"dynCall_viidddddd\"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiddddi(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{Module[\"dynCall_viiddddi\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viif(index,a1,a2,a3){var sp=stackSave();try{Module[\"dynCall_viif\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiff(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_viiff\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viifff(index,a1,a2,a3,a4,a5){var sp=stackSave();try{Module[\"dynCall_viifff\"](index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viifi(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_viifi\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{Module[\"dynCall_viii\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiidddddd(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{Module[\"dynCall_viiidddddd\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiif(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_viiif\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){var sp=stackSave();try{Module[\"dynCall_viiii\"](index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{Module[\"dynCall_viiiii\"](index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{Module[\"dynCall_viiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{Module[\"dynCall_viiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{Module[\"dynCall_viiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{Module[\"dynCall_viiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{Module[\"dynCall_viiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_viiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{Module[\"dynCall_viiiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}function invoke_vij(index,a1,a2,a3){var sp=stackSave();try{Module[\"dynCall_vij\"](index,a1,a2,a3)}catch(e){stackRestore(sp);if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;Module[\"setThrew\"](1,0)}}Module.asmGlobalArg={};Module.asmLibraryArg={\"abort\":abort,\"assert\":assert,\"enlargeMemory\":enlargeMemory,\"getTotalMemory\":getTotalMemory,\"abortOnCannotGrowMemory\":abortOnCannotGrowMemory,\"invoke_fi\":invoke_fi,\"invoke_fii\":invoke_fii,\"invoke_i\":invoke_i,\"invoke_ii\":invoke_ii,\"invoke_iif\":invoke_iif,\"invoke_iiff\":invoke_iiff,\"invoke_iii\":invoke_iii,\"invoke_iiif\":invoke_iiif,\"invoke_iiiff\":invoke_iiiff,\"invoke_iiii\":invoke_iiii,\"invoke_iiiii\":invoke_iiiii,\"invoke_iiiiii\":invoke_iiiiii,\"invoke_iiiiiii\":invoke_iiiiiii,\"invoke_iiiiiiii\":invoke_iiiiiiii,\"invoke_iiij\":invoke_iiij,\"invoke_jii\":invoke_jii,\"invoke_v\":invoke_v,\"invoke_vd\":invoke_vd,\"invoke_vdd\":invoke_vdd,\"invoke_vdddddd\":invoke_vdddddd,\"invoke_vf\":invoke_vf,\"invoke_vff\":invoke_vff,\"invoke_vffff\":invoke_vffff,\"invoke_vfi\":invoke_vfi,\"invoke_vi\":invoke_vi,\"invoke_viddddi\":invoke_viddddi,\"invoke_vif\":invoke_vif,\"invoke_viff\":invoke_viff,\"invoke_vifff\":invoke_vifff,\"invoke_viffff\":invoke_viffff,\"invoke_vii\":invoke_vii,\"invoke_viidddddd\":invoke_viidddddd,\"invoke_viiddddi\":invoke_viiddddi,\"invoke_viif\":invoke_viif,\"invoke_viiff\":invoke_viiff,\"invoke_viifff\":invoke_viifff,\"invoke_viifi\":invoke_viifi,\"invoke_viii\":invoke_viii,\"invoke_viiidddddd\":invoke_viiidddddd,\"invoke_viiif\":invoke_viiif,\"invoke_viiii\":invoke_viiii,\"invoke_viiiii\":invoke_viiiii,\"invoke_viiiiii\":invoke_viiiiii,\"invoke_viiiiiii\":invoke_viiiiiii,\"invoke_viiiiiiii\":invoke_viiiiiiii,\"invoke_viiiiiiiii\":invoke_viiiiiiiii,\"invoke_viiiiiiiiii\":invoke_viiiiiiiiii,\"invoke_viiiiiiiiiii\":invoke_viiiiiiiiiii,\"invoke_vij\":invoke_vij,\"ClassHandle\":ClassHandle,\"ClassHandle_clone\":ClassHandle_clone,\"ClassHandle_delete\":ClassHandle_delete,\"ClassHandle_deleteLater\":ClassHandle_deleteLater,\"ClassHandle_isAliasOf\":ClassHandle_isAliasOf,\"ClassHandle_isDeleted\":ClassHandle_isDeleted,\"RegisteredClass\":RegisteredClass,\"RegisteredPointer\":RegisteredPointer,\"RegisteredPointer_deleteObject\":RegisteredPointer_deleteObject,\"RegisteredPointer_destructor\":RegisteredPointer_destructor,\"RegisteredPointer_fromWireType\":RegisteredPointer_fromWireType,\"RegisteredPointer_getPointee\":RegisteredPointer_getPointee,\"__ZSt18uncaught_exceptionv\":__ZSt18uncaught_exceptionv,\"___atomic_compare_exchange_8\":___atomic_compare_exchange_8,\"___cxa_begin_catch\":___cxa_begin_catch,\"___cxa_find_matching_catch\":___cxa_find_matching_catch,\"___cxa_pure_virtual\":___cxa_pure_virtual,\"___gxx_personality_v0\":___gxx_personality_v0,\"___resumeException\":___resumeException,\"___setErrNo\":___setErrNo,\"___syscall140\":___syscall140,\"___syscall146\":___syscall146,\"___syscall221\":___syscall221,\"___syscall3\":___syscall3,\"___syscall5\":___syscall5,\"___syscall54\":___syscall54,\"___syscall6\":___syscall6,\"__embind_finalize_value_array\":__embind_finalize_value_array,\"__embind_register_bool\":__embind_register_bool,\"__embind_register_class\":__embind_register_class,\"__embind_register_class_class_function\":__embind_register_class_class_function,\"__embind_register_class_constructor\":__embind_register_class_constructor,\"__embind_register_class_function\":__embind_register_class_function,\"__embind_register_class_property\":__embind_register_class_property,\"__embind_register_emval\":__embind_register_emval,\"__embind_register_enum\":__embind_register_enum,\"__embind_register_enum_value\":__embind_register_enum_value,\"__embind_register_float\":__embind_register_float,\"__embind_register_function\":__embind_register_function,\"__embind_register_integer\":__embind_register_integer,\"__embind_register_memory_view\":__embind_register_memory_view,\"__embind_register_std_string\":__embind_register_std_string,\"__embind_register_std_wstring\":__embind_register_std_wstring,\"__embind_register_value_array\":__embind_register_value_array,\"__embind_register_value_array_element\":__embind_register_value_array_element,\"__embind_register_void\":__embind_register_void,\"__emval_as\":__emval_as,\"__emval_decref\":__emval_decref,\"__emval_get_property\":__emval_get_property,\"__emval_incref\":__emval_incref,\"__emval_new_cstring\":__emval_new_cstring,\"__emval_register\":__emval_register,\"__emval_run_destructors\":__emval_run_destructors,\"__emval_take_value\":__emval_take_value,\"_abort\":_abort,\"_clock_gettime\":_clock_gettime,\"_eglGetProcAddress\":_eglGetProcAddress,\"_embind_repr\":_embind_repr,\"_emscripten_get_now\":_emscripten_get_now,\"_emscripten_get_now_is_monotonic\":_emscripten_get_now_is_monotonic,\"_emscripten_glActiveTexture\":_emscripten_glActiveTexture,\"_emscripten_glAttachShader\":_emscripten_glAttachShader,\"_emscripten_glBeginConditionalRender\":_emscripten_glBeginConditionalRender,\"_emscripten_glBeginTransformFeedback\":_emscripten_glBeginTransformFeedback,\"_emscripten_glBindAttribLocation\":_emscripten_glBindAttribLocation,\"_emscripten_glBindBuffer\":_emscripten_glBindBuffer,\"_emscripten_glBindBufferBase\":_emscripten_glBindBufferBase,\"_emscripten_glBindBufferRange\":_emscripten_glBindBufferRange,\"_emscripten_glBindFragDataLocation\":_emscripten_glBindFragDataLocation,\"_emscripten_glBindFramebuffer\":_emscripten_glBindFramebuffer,\"_emscripten_glBindProgramARB\":_emscripten_glBindProgramARB,\"_emscripten_glBindRenderbuffer\":_emscripten_glBindRenderbuffer,\"_emscripten_glBindTexture\":_emscripten_glBindTexture,\"_emscripten_glBindVertexArray\":_emscripten_glBindVertexArray,\"_emscripten_glBlendColor\":_emscripten_glBlendColor,\"_emscripten_glBlendEquation\":_emscripten_glBlendEquation,\"_emscripten_glBlendEquationSeparate\":_emscripten_glBlendEquationSeparate,\"_emscripten_glBlendFunc\":_emscripten_glBlendFunc,\"_emscripten_glBlendFuncSeparate\":_emscripten_glBlendFuncSeparate,\"_emscripten_glBufferData\":_emscripten_glBufferData,\"_emscripten_glBufferSubData\":_emscripten_glBufferSubData,\"_emscripten_glCheckFramebufferStatus\":_emscripten_glCheckFramebufferStatus,\"_emscripten_glClampColor\":_emscripten_glClampColor,\"_emscripten_glClear\":_emscripten_glClear,\"_emscripten_glClearBufferfi\":_emscripten_glClearBufferfi,\"_emscripten_glClearBufferfv\":_emscripten_glClearBufferfv,\"_emscripten_glClearBufferiv\":_emscripten_glClearBufferiv,\"_emscripten_glClearBufferuiv\":_emscripten_glClearBufferuiv,\"_emscripten_glClearColor\":_emscripten_glClearColor,\"_emscripten_glClearDepth\":_emscripten_glClearDepth,\"_emscripten_glClearDepthf\":_emscripten_glClearDepthf,\"_emscripten_glClearStencil\":_emscripten_glClearStencil,\"_emscripten_glClientActiveTexture\":_emscripten_glClientActiveTexture,\"_emscripten_glColorMask\":_emscripten_glColorMask,\"_emscripten_glColorMaski\":_emscripten_glColorMaski,\"_emscripten_glColorPointer\":_emscripten_glColorPointer,\"_emscripten_glCompileShader\":_emscripten_glCompileShader,\"_emscripten_glCompressedTexImage2D\":_emscripten_glCompressedTexImage2D,\"_emscripten_glCompressedTexSubImage2D\":_emscripten_glCompressedTexSubImage2D,\"_emscripten_glCopyTexImage2D\":_emscripten_glCopyTexImage2D,\"_emscripten_glCopyTexSubImage2D\":_emscripten_glCopyTexSubImage2D,\"_emscripten_glCreateProgram\":_emscripten_glCreateProgram,\"_emscripten_glCreateShader\":_emscripten_glCreateShader,\"_emscripten_glCullFace\":_emscripten_glCullFace,\"_emscripten_glDeleteBuffers\":_emscripten_glDeleteBuffers,\"_emscripten_glDeleteFramebuffers\":_emscripten_glDeleteFramebuffers,\"_emscripten_glDeleteObjectARB\":_emscripten_glDeleteObjectARB,\"_emscripten_glDeleteProgram\":_emscripten_glDeleteProgram,\"_emscripten_glDeleteRenderbuffers\":_emscripten_glDeleteRenderbuffers,\"_emscripten_glDeleteShader\":_emscripten_glDeleteShader,\"_emscripten_glDeleteTextures\":_emscripten_glDeleteTextures,\"_emscripten_glDeleteVertexArrays\":_emscripten_glDeleteVertexArrays,\"_emscripten_glDepthFunc\":_emscripten_glDepthFunc,\"_emscripten_glDepthMask\":_emscripten_glDepthMask,\"_emscripten_glDepthRange\":_emscripten_glDepthRange,\"_emscripten_glDepthRangef\":_emscripten_glDepthRangef,\"_emscripten_glDetachShader\":_emscripten_glDetachShader,\"_emscripten_glDisable\":_emscripten_glDisable,\"_emscripten_glDisableVertexAttribArray\":_emscripten_glDisableVertexAttribArray,\"_emscripten_glDisablei\":_emscripten_glDisablei,\"_emscripten_glDrawArrays\":_emscripten_glDrawArrays,\"_emscripten_glDrawArraysInstanced\":_emscripten_glDrawArraysInstanced,\"_emscripten_glDrawBuffers\":_emscripten_glDrawBuffers,\"_emscripten_glDrawElements\":_emscripten_glDrawElements,\"_emscripten_glDrawElementsInstanced\":_emscripten_glDrawElementsInstanced,\"_emscripten_glDrawRangeElements\":_emscripten_glDrawRangeElements,\"_emscripten_glEnable\":_emscripten_glEnable,\"_emscripten_glEnableClientState\":_emscripten_glEnableClientState,\"_emscripten_glEnableVertexAttribArray\":_emscripten_glEnableVertexAttribArray,\"_emscripten_glEnablei\":_emscripten_glEnablei,\"_emscripten_glEndConditionalRender\":_emscripten_glEndConditionalRender,\"_emscripten_glEndTransformFeedback\":_emscripten_glEndTransformFeedback,\"_emscripten_glFinish\":_emscripten_glFinish,\"_emscripten_glFlush\":_emscripten_glFlush,\"_emscripten_glFramebufferRenderbuffer\":_emscripten_glFramebufferRenderbuffer,\"_emscripten_glFramebufferTexture2D\":_emscripten_glFramebufferTexture2D,\"_emscripten_glFrontFace\":_emscripten_glFrontFace,\"_emscripten_glFrustum\":_emscripten_glFrustum,\"_emscripten_glGenBuffers\":_emscripten_glGenBuffers,\"_emscripten_glGenFramebuffers\":_emscripten_glGenFramebuffers,\"_emscripten_glGenRenderbuffers\":_emscripten_glGenRenderbuffers,\"_emscripten_glGenTextures\":_emscripten_glGenTextures,\"_emscripten_glGenVertexArrays\":_emscripten_glGenVertexArrays,\"_emscripten_glGenerateMipmap\":_emscripten_glGenerateMipmap,\"_emscripten_glGetActiveAttrib\":_emscripten_glGetActiveAttrib,\"_emscripten_glGetActiveUniform\":_emscripten_glGetActiveUniform,\"_emscripten_glGetActiveUniformBlockName\":_emscripten_glGetActiveUniformBlockName,\"_emscripten_glGetActiveUniformBlockiv\":_emscripten_glGetActiveUniformBlockiv,\"_emscripten_glGetActiveUniformName\":_emscripten_glGetActiveUniformName,\"_emscripten_glGetActiveUniformsiv\":_emscripten_glGetActiveUniformsiv,\"_emscripten_glGetAttachedShaders\":_emscripten_glGetAttachedShaders,\"_emscripten_glGetAttribLocation\":_emscripten_glGetAttribLocation,\"_emscripten_glGetBooleani_v\":_emscripten_glGetBooleani_v,\"_emscripten_glGetBooleanv\":_emscripten_glGetBooleanv,\"_emscripten_glGetBufferParameteriv\":_emscripten_glGetBufferParameteriv,\"_emscripten_glGetError\":_emscripten_glGetError,\"_emscripten_glGetFloatv\":_emscripten_glGetFloatv,\"_emscripten_glGetFragDataLocation\":_emscripten_glGetFragDataLocation,\"_emscripten_glGetFramebufferAttachmentParameteriv\":_emscripten_glGetFramebufferAttachmentParameteriv,\"_emscripten_glGetInfoLogARB\":_emscripten_glGetInfoLogARB,\"_emscripten_glGetIntegeri_v\":_emscripten_glGetIntegeri_v,\"_emscripten_glGetIntegerv\":_emscripten_glGetIntegerv,\"_emscripten_glGetObjectParameterivARB\":_emscripten_glGetObjectParameterivARB,\"_emscripten_glGetPointerv\":_emscripten_glGetPointerv,\"_emscripten_glGetProgramInfoLog\":_emscripten_glGetProgramInfoLog,\"_emscripten_glGetProgramiv\":_emscripten_glGetProgramiv,\"_emscripten_glGetRenderbufferParameteriv\":_emscripten_glGetRenderbufferParameteriv,\"_emscripten_glGetShaderInfoLog\":_emscripten_glGetShaderInfoLog,\"_emscripten_glGetShaderPrecisionFormat\":_emscripten_glGetShaderPrecisionFormat,\"_emscripten_glGetShaderSource\":_emscripten_glGetShaderSource,\"_emscripten_glGetShaderiv\":_emscripten_glGetShaderiv,\"_emscripten_glGetString\":_emscripten_glGetString,\"_emscripten_glGetStringi\":_emscripten_glGetStringi,\"_emscripten_glGetTexParameterIiv\":_emscripten_glGetTexParameterIiv,\"_emscripten_glGetTexParameterIuiv\":_emscripten_glGetTexParameterIuiv,\"_emscripten_glGetTexParameterfv\":_emscripten_glGetTexParameterfv,\"_emscripten_glGetTexParameteriv\":_emscripten_glGetTexParameteriv,\"_emscripten_glGetTransformFeedbackVarying\":_emscripten_glGetTransformFeedbackVarying,\"_emscripten_glGetUniformBlockIndex\":_emscripten_glGetUniformBlockIndex,\"_emscripten_glGetUniformIndices\":_emscripten_glGetUniformIndices,\"_emscripten_glGetUniformLocation\":_emscripten_glGetUniformLocation,\"_emscripten_glGetUniformfv\":_emscripten_glGetUniformfv,\"_emscripten_glGetUniformiv\":_emscripten_glGetUniformiv,\"_emscripten_glGetUniformuiv\":_emscripten_glGetUniformuiv,\"_emscripten_glGetVertexAttribIiv\":_emscripten_glGetVertexAttribIiv,\"_emscripten_glGetVertexAttribIuiv\":_emscripten_glGetVertexAttribIuiv,\"_emscripten_glGetVertexAttribPointerv\":_emscripten_glGetVertexAttribPointerv,\"_emscripten_glGetVertexAttribfv\":_emscripten_glGetVertexAttribfv,\"_emscripten_glGetVertexAttribiv\":_emscripten_glGetVertexAttribiv,\"_emscripten_glHint\":_emscripten_glHint,\"_emscripten_glIsBuffer\":_emscripten_glIsBuffer,\"_emscripten_glIsEnabled\":_emscripten_glIsEnabled,\"_emscripten_glIsEnabledi\":_emscripten_glIsEnabledi,\"_emscripten_glIsFramebuffer\":_emscripten_glIsFramebuffer,\"_emscripten_glIsProgram\":_emscripten_glIsProgram,\"_emscripten_glIsRenderbuffer\":_emscripten_glIsRenderbuffer,\"_emscripten_glIsShader\":_emscripten_glIsShader,\"_emscripten_glIsTexture\":_emscripten_glIsTexture,\"_emscripten_glIsVertexArray\":_emscripten_glIsVertexArray,\"_emscripten_glLineWidth\":_emscripten_glLineWidth,\"_emscripten_glLinkProgram\":_emscripten_glLinkProgram,\"_emscripten_glLoadIdentity\":_emscripten_glLoadIdentity,\"_emscripten_glLoadMatrixf\":_emscripten_glLoadMatrixf,\"_emscripten_glMatrixMode\":_emscripten_glMatrixMode,\"_emscripten_glNormalPointer\":_emscripten_glNormalPointer,\"_emscripten_glPixelStorei\":_emscripten_glPixelStorei,\"_emscripten_glPolygonOffset\":_emscripten_glPolygonOffset,\"_emscripten_glReadPixels\":_emscripten_glReadPixels,\"_emscripten_glReleaseShaderCompiler\":_emscripten_glReleaseShaderCompiler,\"_emscripten_glRenderbufferStorage\":_emscripten_glRenderbufferStorage,\"_emscripten_glRotatef\":_emscripten_glRotatef,\"_emscripten_glSampleCoverage\":_emscripten_glSampleCoverage,\"_emscripten_glScissor\":_emscripten_glScissor,\"_emscripten_glShaderBinary\":_emscripten_glShaderBinary,\"_emscripten_glShaderSource\":_emscripten_glShaderSource,\"_emscripten_glStencilFunc\":_emscripten_glStencilFunc,\"_emscripten_glStencilFuncSeparate\":_emscripten_glStencilFuncSeparate,\"_emscripten_glStencilMask\":_emscripten_glStencilMask,\"_emscripten_glStencilMaskSeparate\":_emscripten_glStencilMaskSeparate,\"_emscripten_glStencilOp\":_emscripten_glStencilOp,\"_emscripten_glStencilOpSeparate\":_emscripten_glStencilOpSeparate,\"_emscripten_glTexCoordPointer\":_emscripten_glTexCoordPointer,\"_emscripten_glTexImage2D\":_emscripten_glTexImage2D,\"_emscripten_glTexImage3D\":_emscripten_glTexImage3D,\"_emscripten_glTexParameterIiv\":_emscripten_glTexParameterIiv,\"_emscripten_glTexParameterIuiv\":_emscripten_glTexParameterIuiv,\"_emscripten_glTexParameterf\":_emscripten_glTexParameterf,\"_emscripten_glTexParameterfv\":_emscripten_glTexParameterfv,\"_emscripten_glTexParameteri\":_emscripten_glTexParameteri,\"_emscripten_glTexParameteriv\":_emscripten_glTexParameteriv,\"_emscripten_glTexStorage2D\":_emscripten_glTexStorage2D,\"_emscripten_glTexStorage3D\":_emscripten_glTexStorage3D,\"_emscripten_glTexSubImage2D\":_emscripten_glTexSubImage2D,\"_emscripten_glTexSubImage3D\":_emscripten_glTexSubImage3D,\"_emscripten_glTransformFeedbackVaryings\":_emscripten_glTransformFeedbackVaryings,\"_emscripten_glUniform1f\":_emscripten_glUniform1f,\"_emscripten_glUniform1fv\":_emscripten_glUniform1fv,\"_emscripten_glUniform1i\":_emscripten_glUniform1i,\"_emscripten_glUniform1iv\":_emscripten_glUniform1iv,\"_emscripten_glUniform1ui\":_emscripten_glUniform1ui,\"_emscripten_glUniform2f\":_emscripten_glUniform2f,\"_emscripten_glUniform2fv\":_emscripten_glUniform2fv,\"_emscripten_glUniform2i\":_emscripten_glUniform2i,\"_emscripten_glUniform2iv\":_emscripten_glUniform2iv,\"_emscripten_glUniform2ui\":_emscripten_glUniform2ui,\"_emscripten_glUniform3f\":_emscripten_glUniform3f,\"_emscripten_glUniform3fv\":_emscripten_glUniform3fv,\"_emscripten_glUniform3i\":_emscripten_glUniform3i,\"_emscripten_glUniform3iv\":_emscripten_glUniform3iv,\"_emscripten_glUniform3ui\":_emscripten_glUniform3ui,\"_emscripten_glUniform4f\":_emscripten_glUniform4f,\"_emscripten_glUniform4fv\":_emscripten_glUniform4fv,\"_emscripten_glUniform4i\":_emscripten_glUniform4i,\"_emscripten_glUniform4iv\":_emscripten_glUniform4iv,\"_emscripten_glUniform4ui\":_emscripten_glUniform4ui,\"_emscripten_glUniformBlockBinding\":_emscripten_glUniformBlockBinding,\"_emscripten_glUniformMatrix2fv\":_emscripten_glUniformMatrix2fv,\"_emscripten_glUniformMatrix3fv\":_emscripten_glUniformMatrix3fv,\"_emscripten_glUniformMatrix4fv\":_emscripten_glUniformMatrix4fv,\"_emscripten_glUseProgram\":_emscripten_glUseProgram,\"_emscripten_glValidateProgram\":_emscripten_glValidateProgram,\"_emscripten_glVertexAttrib1f\":_emscripten_glVertexAttrib1f,\"_emscripten_glVertexAttrib1fv\":_emscripten_glVertexAttrib1fv,\"_emscripten_glVertexAttrib2f\":_emscripten_glVertexAttrib2f,\"_emscripten_glVertexAttrib2fv\":_emscripten_glVertexAttrib2fv,\"_emscripten_glVertexAttrib3f\":_emscripten_glVertexAttrib3f,\"_emscripten_glVertexAttrib3fv\":_emscripten_glVertexAttrib3fv,\"_emscripten_glVertexAttrib4f\":_emscripten_glVertexAttrib4f,\"_emscripten_glVertexAttrib4fv\":_emscripten_glVertexAttrib4fv,\"_emscripten_glVertexAttribDivisor\":_emscripten_glVertexAttribDivisor,\"_emscripten_glVertexAttribI1i\":_emscripten_glVertexAttribI1i,\"_emscripten_glVertexAttribI1iv\":_emscripten_glVertexAttribI1iv,\"_emscripten_glVertexAttribI1ui\":_emscripten_glVertexAttribI1ui,\"_emscripten_glVertexAttribI1uiv\":_emscripten_glVertexAttribI1uiv,\"_emscripten_glVertexAttribI2i\":_emscripten_glVertexAttribI2i,\"_emscripten_glVertexAttribI2iv\":_emscripten_glVertexAttribI2iv,\"_emscripten_glVertexAttribI2ui\":_emscripten_glVertexAttribI2ui,\"_emscripten_glVertexAttribI2uiv\":_emscripten_glVertexAttribI2uiv,\"_emscripten_glVertexAttribI3i\":_emscripten_glVertexAttribI3i,\"_emscripten_glVertexAttribI3iv\":_emscripten_glVertexAttribI3iv,\"_emscripten_glVertexAttribI3ui\":_emscripten_glVertexAttribI3ui,\"_emscripten_glVertexAttribI3uiv\":_emscripten_glVertexAttribI3uiv,\"_emscripten_glVertexAttribI4bv\":_emscripten_glVertexAttribI4bv,\"_emscripten_glVertexAttribI4i\":_emscripten_glVertexAttribI4i,\"_emscripten_glVertexAttribI4iv\":_emscripten_glVertexAttribI4iv,\"_emscripten_glVertexAttribI4sv\":_emscripten_glVertexAttribI4sv,\"_emscripten_glVertexAttribI4ubv\":_emscripten_glVertexAttribI4ubv,\"_emscripten_glVertexAttribI4ui\":_emscripten_glVertexAttribI4ui,\"_emscripten_glVertexAttribI4uiv\":_emscripten_glVertexAttribI4uiv,\"_emscripten_glVertexAttribI4usv\":_emscripten_glVertexAttribI4usv,\"_emscripten_glVertexAttribIPointer\":_emscripten_glVertexAttribIPointer,\"_emscripten_glVertexAttribPointer\":_emscripten_glVertexAttribPointer,\"_emscripten_glVertexPointer\":_emscripten_glVertexPointer,\"_emscripten_glViewport\":_emscripten_glViewport,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"_emscripten_set_main_loop\":_emscripten_set_main_loop,\"_emscripten_set_main_loop_timing\":_emscripten_set_main_loop_timing,\"_glActiveTexture\":_glActiveTexture,\"_glAttachShader\":_glAttachShader,\"_glBindBuffer\":_glBindBuffer,\"_glBindBufferRange\":_glBindBufferRange,\"_glBindFramebuffer\":_glBindFramebuffer,\"_glBindRenderbuffer\":_glBindRenderbuffer,\"_glBindSampler\":_glBindSampler,\"_glBindTexture\":_glBindTexture,\"_glBindVertexArray\":_glBindVertexArray,\"_glBlendEquationSeparate\":_glBlendEquationSeparate,\"_glBlendFuncSeparate\":_glBlendFuncSeparate,\"_glBlitFramebuffer\":_glBlitFramebuffer,\"_glBufferData\":_glBufferData,\"_glBufferSubData\":_glBufferSubData,\"_glClear\":_glClear,\"_glClearColor\":_glClearColor,\"_glClearDepthf\":_glClearDepthf,\"_glClearStencil\":_glClearStencil,\"_glColorMask\":_glColorMask,\"_glCompileShader\":_glCompileShader,\"_glCompressedTexSubImage2D\":_glCompressedTexSubImage2D,\"_glCreateProgram\":_glCreateProgram,\"_glCreateShader\":_glCreateShader,\"_glCullFace\":_glCullFace,\"_glDeleteBuffers\":_glDeleteBuffers,\"_glDeleteFramebuffers\":_glDeleteFramebuffers,\"_glDeleteProgram\":_glDeleteProgram,\"_glDeleteRenderbuffers\":_glDeleteRenderbuffers,\"_glDeleteSamplers\":_glDeleteSamplers,\"_glDeleteShader\":_glDeleteShader,\"_glDeleteSync\":_glDeleteSync,\"_glDeleteTextures\":_glDeleteTextures,\"_glDeleteVertexArrays\":_glDeleteVertexArrays,\"_glDepthFunc\":_glDepthFunc,\"_glDepthMask\":_glDepthMask,\"_glDetachShader\":_glDetachShader,\"_glDisable\":_glDisable,\"_glDisableVertexAttribArray\":_glDisableVertexAttribArray,\"_glDrawArrays\":_glDrawArrays,\"_glDrawRangeElements\":_glDrawRangeElements,\"_glEnable\":_glEnable,\"_glEnableVertexAttribArray\":_glEnableVertexAttribArray,\"_glFenceSync\":_glFenceSync,\"_glFlush\":_glFlush,\"_glFramebufferRenderbuffer\":_glFramebufferRenderbuffer,\"_glFramebufferTexture2D\":_glFramebufferTexture2D,\"_glFrontFace\":_glFrontFace,\"_glGenBuffers\":_glGenBuffers,\"_glGenFramebuffers\":_glGenFramebuffers,\"_glGenRenderbuffers\":_glGenRenderbuffers,\"_glGenSamplers\":_glGenSamplers,\"_glGenTextures\":_glGenTextures,\"_glGenVertexArrays\":_glGenVertexArrays,\"_glGenerateMipmap\":_glGenerateMipmap,\"_glGetError\":_glGetError,\"_glGetFloatv\":_glGetFloatv,\"_glGetIntegerv\":_glGetIntegerv,\"_glGetProgramInfoLog\":_glGetProgramInfoLog,\"_glGetProgramiv\":_glGetProgramiv,\"_glGetShaderInfoLog\":_glGetShaderInfoLog,\"_glGetShaderiv\":_glGetShaderiv,\"_glGetString\":_glGetString,\"_glGetStringi\":_glGetStringi,\"_glGetUniformBlockIndex\":_glGetUniformBlockIndex,\"_glGetUniformLocation\":_glGetUniformLocation,\"_glGetVertexAttribiv\":_glGetVertexAttribiv,\"_glHint\":_glHint,\"_glInvalidateFramebuffer\":_glInvalidateFramebuffer,\"_glInvalidateSubFramebuffer\":_glInvalidateSubFramebuffer,\"_glIsEnabled\":_glIsEnabled,\"_glLinkProgram\":_glLinkProgram,\"_glPixelStorei\":_glPixelStorei,\"_glPolygonOffset\":_glPolygonOffset,\"_glReadPixels\":_glReadPixels,\"_glRenderbufferStorage\":_glRenderbufferStorage,\"_glRenderbufferStorageMultisample\":_glRenderbufferStorageMultisample,\"_glSamplerParameteri\":_glSamplerParameteri,\"_glScissor\":_glScissor,\"_glShaderSource\":_glShaderSource,\"_glTexParameteri\":_glTexParameteri,\"_glTexStorage2D\":_glTexStorage2D,\"_glTexStorage2DMultisample\":_glTexStorage2DMultisample,\"_glTexStorage3D\":_glTexStorage3D,\"_glTexSubImage2D\":_glTexSubImage2D,\"_glUniform1f\":_glUniform1f,\"_glUniform1i\":_glUniform1i,\"_glUniform4f\":_glUniform4f,\"_glUniformBlockBinding\":_glUniformBlockBinding,\"_glUseProgram\":_glUseProgram,\"_glVertexAttribIPointer\":_glVertexAttribIPointer,\"_glVertexAttribPointer\":_glVertexAttribPointer,\"_glViewport\":_glViewport,\"_glWaitSync\":_glWaitSync,\"_llvm_ceil_f32\":_llvm_ceil_f32,\"_llvm_cttz_i32\":_llvm_cttz_i32,\"_llvm_cttz_i64\":_llvm_cttz_i64,\"_llvm_exp2_f32\":_llvm_exp2_f32,\"_llvm_exp2_f64\":_llvm_exp2_f64,\"_llvm_fabs_f32\":_llvm_fabs_f32,\"_llvm_floor_f32\":_llvm_floor_f32,\"_llvm_log2_f32\":_llvm_log2_f32,\"_llvm_trap\":_llvm_trap,\"_pthread_cond_destroy\":_pthread_cond_destroy,\"_pthread_cond_signal\":_pthread_cond_signal,\"_pthread_cond_timedwait\":_pthread_cond_timedwait,\"_pthread_cond_wait\":_pthread_cond_wait,\"_pthread_create\":_pthread_create,\"_pthread_getspecific\":_pthread_getspecific,\"_pthread_join\":_pthread_join,\"_pthread_key_create\":_pthread_key_create,\"_pthread_mutex_destroy\":_pthread_mutex_destroy,\"_pthread_once\":_pthread_once,\"_pthread_setspecific\":_pthread_setspecific,\"_sysconf\":_sysconf,\"constNoSmartPtrRawPointerToWireType\":constNoSmartPtrRawPointerToWireType,\"count_emval_handles\":count_emval_handles,\"craftInvokerFunction\":craftInvokerFunction,\"createNamedFunction\":createNamedFunction,\"downcastPointer\":downcastPointer,\"embind__requireFunction\":embind__requireFunction,\"embind_init_charCodes\":embind_init_charCodes,\"emscriptenWebGLComputeImageSize\":emscriptenWebGLComputeImageSize,\"emscriptenWebGLGet\":emscriptenWebGLGet,\"emscriptenWebGLGetHeapForType\":emscriptenWebGLGetHeapForType,\"emscriptenWebGLGetIndexed\":emscriptenWebGLGetIndexed,\"emscriptenWebGLGetShiftForType\":emscriptenWebGLGetShiftForType,\"emscriptenWebGLGetTexPixelData\":emscriptenWebGLGetTexPixelData,\"emscriptenWebGLGetUniform\":emscriptenWebGLGetUniform,\"emscriptenWebGLGetVertexAttrib\":emscriptenWebGLGetVertexAttrib,\"ensureOverloadTable\":ensureOverloadTable,\"enumReadValueFromPointer\":enumReadValueFromPointer,\"exposePublicSymbol\":exposePublicSymbol,\"extendError\":extendError,\"floatReadValueFromPointer\":floatReadValueFromPointer,\"flushPendingDeletes\":flushPendingDeletes,\"genericPointerToWireType\":genericPointerToWireType,\"getBasestPointer\":getBasestPointer,\"getInheritedInstance\":getInheritedInstance,\"getInheritedInstanceCount\":getInheritedInstanceCount,\"getLiveInheritedInstances\":getLiveInheritedInstances,\"getShiftFromSize\":getShiftFromSize,\"getStringOrSymbol\":getStringOrSymbol,\"getTypeName\":getTypeName,\"get_first_emval\":get_first_emval,\"heap32VectorToArray\":heap32VectorToArray,\"init_ClassHandle\":init_ClassHandle,\"init_RegisteredPointer\":init_RegisteredPointer,\"init_embind\":init_embind,\"init_emval\":init_emval,\"integerReadValueFromPointer\":integerReadValueFromPointer,\"makeClassHandle\":makeClassHandle,\"makeLegalFunctionName\":makeLegalFunctionName,\"new_\":new_,\"nonConstNoSmartPtrRawPointerToWireType\":nonConstNoSmartPtrRawPointerToWireType,\"readLatin1String\":readLatin1String,\"registerType\":registerType,\"replacePublicSymbol\":replacePublicSymbol,\"requireHandle\":requireHandle,\"requireRegisteredType\":requireRegisteredType,\"runDestructor\":runDestructor,\"runDestructors\":runDestructors,\"setDelayFunction\":setDelayFunction,\"shallowCopyInternalPointer\":shallowCopyInternalPointer,\"simpleReadValueFromPointer\":simpleReadValueFromPointer,\"throwBindingError\":throwBindingError,\"throwInstanceAlreadyDeleted\":throwInstanceAlreadyDeleted,\"throwInternalError\":throwInternalError,\"throwUnboundTypeError\":throwUnboundTypeError,\"upcastPointer\":upcastPointer,\"validateThis\":validateThis,\"whenDependentTypesAreResolved\":whenDependentTypesAreResolved,\"DYNAMICTOP_PTR\":DYNAMICTOP_PTR,\"tempDoublePtr\":tempDoublePtr,\"ABORT\":ABORT,\"STACKTOP\":STACKTOP,\"STACK_MAX\":STACK_MAX};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var __GLOBAL__sub_I_Engine_cpp=Module[\"__GLOBAL__sub_I_Engine_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_Engine_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_bind_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_gl_headers_cpp=Module[\"__GLOBAL__sub_I_gl_headers_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_gl_headers_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_jsbindings_cpp=Module[\"__GLOBAL__sub_I_jsbindings_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_jsbindings_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_jsenums_cpp=Module[\"__GLOBAL__sub_I_jsenums_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_jsenums_cpp\"].apply(null,arguments)});var ___errno_location=Module[\"___errno_location\"]=(function(){return Module[\"asm\"][\"___errno_location\"].apply(null,arguments)});var ___getTypeName=Module[\"___getTypeName\"]=(function(){return Module[\"asm\"][\"___getTypeName\"].apply(null,arguments)});var _emscripten_GetProcAddress=Module[\"_emscripten_GetProcAddress\"]=(function(){return Module[\"asm\"][\"_emscripten_GetProcAddress\"].apply(null,arguments)});var _emscripten_replace_memory=Module[\"_emscripten_replace_memory\"]=(function(){return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null,arguments)});var _free=Module[\"_free\"]=(function(){return Module[\"asm\"][\"_free\"].apply(null,arguments)});var _llvm_bswap_i32=Module[\"_llvm_bswap_i32\"]=(function(){return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null,arguments)});var _llvm_ctpop_i32=Module[\"_llvm_ctpop_i32\"]=(function(){return Module[\"asm\"][\"_llvm_ctpop_i32\"].apply(null,arguments)});var _llvm_ctpop_i64=Module[\"_llvm_ctpop_i64\"]=(function(){return Module[\"asm\"][\"_llvm_ctpop_i64\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"_malloc\"].apply(null,arguments)});var _memcpy=Module[\"_memcpy\"]=(function(){return Module[\"asm\"][\"_memcpy\"].apply(null,arguments)});var _memmove=Module[\"_memmove\"]=(function(){return Module[\"asm\"][\"_memmove\"].apply(null,arguments)});var _memset=Module[\"_memset\"]=(function(){return Module[\"asm\"][\"_memset\"].apply(null,arguments)});var _pthread_cond_broadcast=Module[\"_pthread_cond_broadcast\"]=(function(){return Module[\"asm\"][\"_pthread_cond_broadcast\"].apply(null,arguments)});var _pthread_mutex_lock=Module[\"_pthread_mutex_lock\"]=(function(){return Module[\"asm\"][\"_pthread_mutex_lock\"].apply(null,arguments)});var _pthread_mutex_unlock=Module[\"_pthread_mutex_unlock\"]=(function(){return Module[\"asm\"][\"_pthread_mutex_unlock\"].apply(null,arguments)});var _sbrk=Module[\"_sbrk\"]=(function(){return Module[\"asm\"][\"_sbrk\"].apply(null,arguments)});var _strstr=Module[\"_strstr\"]=(function(){return Module[\"asm\"][\"_strstr\"].apply(null,arguments)});var establishStackSpace=Module[\"establishStackSpace\"]=(function(){return Module[\"asm\"][\"establishStackSpace\"].apply(null,arguments)});var getTempRet0=Module[\"getTempRet0\"]=(function(){return Module[\"asm\"][\"getTempRet0\"].apply(null,arguments)});var runPostSets=Module[\"runPostSets\"]=(function(){return Module[\"asm\"][\"runPostSets\"].apply(null,arguments)});var setTempRet0=Module[\"setTempRet0\"]=(function(){return Module[\"asm\"][\"setTempRet0\"].apply(null,arguments)});var setThrew=Module[\"setThrew\"]=(function(){return Module[\"asm\"][\"setThrew\"].apply(null,arguments)});var stackAlloc=Module[\"stackAlloc\"]=(function(){return Module[\"asm\"][\"stackAlloc\"].apply(null,arguments)});var stackRestore=Module[\"stackRestore\"]=(function(){return Module[\"asm\"][\"stackRestore\"].apply(null,arguments)});var stackSave=Module[\"stackSave\"]=(function(){return Module[\"asm\"][\"stackSave\"].apply(null,arguments)});var dynCall_fi=Module[\"dynCall_fi\"]=(function(){return Module[\"asm\"][\"dynCall_fi\"].apply(null,arguments)});var dynCall_fii=Module[\"dynCall_fii\"]=(function(){return Module[\"asm\"][\"dynCall_fii\"].apply(null,arguments)});var dynCall_i=Module[\"dynCall_i\"]=(function(){return Module[\"asm\"][\"dynCall_i\"].apply(null,arguments)});var dynCall_ii=Module[\"dynCall_ii\"]=(function(){return Module[\"asm\"][\"dynCall_ii\"].apply(null,arguments)});var dynCall_iif=Module[\"dynCall_iif\"]=(function(){return Module[\"asm\"][\"dynCall_iif\"].apply(null,arguments)});var dynCall_iiff=Module[\"dynCall_iiff\"]=(function(){return Module[\"asm\"][\"dynCall_iiff\"].apply(null,arguments)});var dynCall_iii=Module[\"dynCall_iii\"]=(function(){return Module[\"asm\"][\"dynCall_iii\"].apply(null,arguments)});var dynCall_iiif=Module[\"dynCall_iiif\"]=(function(){return Module[\"asm\"][\"dynCall_iiif\"].apply(null,arguments)});var dynCall_iiiff=Module[\"dynCall_iiiff\"]=(function(){return Module[\"asm\"][\"dynCall_iiiff\"].apply(null,arguments)});var dynCall_iiii=Module[\"dynCall_iiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiii\"].apply(null,arguments)});var dynCall_iiiii=Module[\"dynCall_iiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiii\"].apply(null,arguments)});var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiiii\"].apply(null,arguments)});var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiiiii\"].apply(null,arguments)});var dynCall_iiiiiiii=Module[\"dynCall_iiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiiiiii\"].apply(null,arguments)});var dynCall_iiij=Module[\"dynCall_iiij\"]=(function(){return Module[\"asm\"][\"dynCall_iiij\"].apply(null,arguments)});var dynCall_jii=Module[\"dynCall_jii\"]=(function(){return Module[\"asm\"][\"dynCall_jii\"].apply(null,arguments)});var dynCall_v=Module[\"dynCall_v\"]=(function(){return Module[\"asm\"][\"dynCall_v\"].apply(null,arguments)});var dynCall_vd=Module[\"dynCall_vd\"]=(function(){return Module[\"asm\"][\"dynCall_vd\"].apply(null,arguments)});var dynCall_vdd=Module[\"dynCall_vdd\"]=(function(){return Module[\"asm\"][\"dynCall_vdd\"].apply(null,arguments)});var dynCall_vdddddd=Module[\"dynCall_vdddddd\"]=(function(){return Module[\"asm\"][\"dynCall_vdddddd\"].apply(null,arguments)});var dynCall_vf=Module[\"dynCall_vf\"]=(function(){return Module[\"asm\"][\"dynCall_vf\"].apply(null,arguments)});var dynCall_vff=Module[\"dynCall_vff\"]=(function(){return Module[\"asm\"][\"dynCall_vff\"].apply(null,arguments)});var dynCall_vffff=Module[\"dynCall_vffff\"]=(function(){return Module[\"asm\"][\"dynCall_vffff\"].apply(null,arguments)});var dynCall_vfi=Module[\"dynCall_vfi\"]=(function(){return Module[\"asm\"][\"dynCall_vfi\"].apply(null,arguments)});var dynCall_vi=Module[\"dynCall_vi\"]=(function(){return Module[\"asm\"][\"dynCall_vi\"].apply(null,arguments)});var dynCall_viddddi=Module[\"dynCall_viddddi\"]=(function(){return Module[\"asm\"][\"dynCall_viddddi\"].apply(null,arguments)});var dynCall_vif=Module[\"dynCall_vif\"]=(function(){return Module[\"asm\"][\"dynCall_vif\"].apply(null,arguments)});var dynCall_viff=Module[\"dynCall_viff\"]=(function(){return Module[\"asm\"][\"dynCall_viff\"].apply(null,arguments)});var dynCall_vifff=Module[\"dynCall_vifff\"]=(function(){return Module[\"asm\"][\"dynCall_vifff\"].apply(null,arguments)});var dynCall_viffff=Module[\"dynCall_viffff\"]=(function(){return Module[\"asm\"][\"dynCall_viffff\"].apply(null,arguments)});var dynCall_vii=Module[\"dynCall_vii\"]=(function(){return Module[\"asm\"][\"dynCall_vii\"].apply(null,arguments)});var dynCall_viidddddd=Module[\"dynCall_viidddddd\"]=(function(){return Module[\"asm\"][\"dynCall_viidddddd\"].apply(null,arguments)});var dynCall_viiddddi=Module[\"dynCall_viiddddi\"]=(function(){return Module[\"asm\"][\"dynCall_viiddddi\"].apply(null,arguments)});var dynCall_viif=Module[\"dynCall_viif\"]=(function(){return Module[\"asm\"][\"dynCall_viif\"].apply(null,arguments)});var dynCall_viiff=Module[\"dynCall_viiff\"]=(function(){return Module[\"asm\"][\"dynCall_viiff\"].apply(null,arguments)});var dynCall_viifff=Module[\"dynCall_viifff\"]=(function(){return Module[\"asm\"][\"dynCall_viifff\"].apply(null,arguments)});var dynCall_viifi=Module[\"dynCall_viifi\"]=(function(){return Module[\"asm\"][\"dynCall_viifi\"].apply(null,arguments)});var dynCall_viii=Module[\"dynCall_viii\"]=(function(){return Module[\"asm\"][\"dynCall_viii\"].apply(null,arguments)});var dynCall_viiidddddd=Module[\"dynCall_viiidddddd\"]=(function(){return Module[\"asm\"][\"dynCall_viiidddddd\"].apply(null,arguments)});var dynCall_viiif=Module[\"dynCall_viiif\"]=(function(){return Module[\"asm\"][\"dynCall_viiif\"].apply(null,arguments)});var dynCall_viiii=Module[\"dynCall_viiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiii\"].apply(null,arguments)});var dynCall_viiiii=Module[\"dynCall_viiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiii\"].apply(null,arguments)});var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null,arguments)});var dynCall_viiiiiii=Module[\"dynCall_viiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiii=Module[\"dynCall_viiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiiii=Module[\"dynCall_viiiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiiiii=Module[\"dynCall_viiiiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiiiiii=Module[\"dynCall_viiiiiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiiiiii\"].apply(null,arguments)});var dynCall_vij=Module[\"dynCall_vij\"]=(function(){return Module[\"asm\"][\"dynCall_vij\"].apply(null,arguments)});Module[\"asm\"]=asm;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();Filament.remainingInitializationTasks=1;Filament.init=(function(assets,onready){Filament.onReady=onready;Filament.remainingInitializationTasks+=assets.length;Filament.assets={};if(typeof glMatrix!==\"undefined\"){Filament.loadMathExtensions()}Filament.fetch(assets,null,(function(name){if(--Filament.remainingInitializationTasks==0&&Filament.onReady){Filament.onReady()}}))});Filament.postRun=(function(){Filament.loadClassExtensions();if(--Filament.remainingInitializationTasks==0&&Filament.onReady){Filament.onReady()}});Filament.fetch=(function(assets,onDone,onFetched){var remainingAssets=assets.length;assets.forEach((function(name){const lower=name.toLowerCase();if(lower.endsWith(\".jpeg\")||lower.endsWith(\".jpg\")){var img=new Image;img.src=name;img.decoding=\"async\";img.onload=(function(){Filament.assets[name]=img;if(onFetched){onFetched(name)}if(--remainingAssets===0&&onDone){onDone()}});return}fetch(name).then((function(response){if(!response.ok){throw new Error(name)}return response.arrayBuffer()})).then((function(arrayBuffer){Filament.assets[name]=new Uint8Array(arrayBuffer);if(onFetched){onFetched(name)}if(--remainingAssets===0&&onDone){onDone()}}))}))});function getBufferDescriptor(buffer){if(\"string\"==typeof buffer||buffer instanceof String){buffer=Filament.assets[buffer]}if(buffer.buffer instanceof ArrayBuffer){buffer=Filament.Buffer(buffer)}return buffer}Filament.loadClassExtensions=(function(){Filament.Engine.create=(function(canvas,options){const defaults={majorVersion:2,minorVersion:0,antialias:false,depth:false,alpha:false};options=Object.assign(defaults,options);Filament.createContext(canvas,true,true,options);Filament.ctx.getExtension(\"WEBGL_compressed_texture_s3tc\");Filament.ctx.getExtension(\"WEBGL_compressed_texture_astc\");Filament.ctx.getExtension(\"WEBGL_compressed_texture_etc\");return Filament.Engine._create()});Filament.Engine.prototype.createMaterial=(function(buffer){buffer=getBufferDescriptor(buffer);const result=this._createMaterial(buffer);buffer.delete();return result});Filament.Engine.prototype.createTextureFromKtx=(function(buffer,options){buffer=getBufferDescriptor(buffer);const result=Filament._createTextureFromKtx(buffer,this,options);buffer.delete();return result});Filament.Engine.prototype.createIblFromKtx=(function(buffer,options){buffer=getBufferDescriptor(buffer);const result=Filament._createIblFromKtx(buffer,this,options);buffer.delete();return result});Filament.Engine.prototype.createSkyFromKtx=(function(buffer,options){options=options||{\"rgbm\":true};const skytex=this.createTextureFromKtx(buffer,options);return Filament.Skybox.Builder().environment(skytex).build(this)});Filament.Engine.prototype.createTextureFromPng=(function(buffer,options){buffer=getBufferDescriptor(buffer);const result=Filament._createTextureFromPng(buffer,this,options);buffer.delete();return result});Filament.Engine.prototype.createTextureFromJpeg=(function(image,options){if(\"string\"==typeof image||image instanceof String){image=Filament.assets[image]}return Filament._createTextureFromJpeg(image,this,options)});Filament.Engine.prototype.loadFilamesh=(function(buffer,definstance,matinstances){buffer=getBufferDescriptor(buffer);const result=Filament._loadFilamesh(this,buffer,definstance,matinstances);buffer.delete();return result});Filament.VertexBuffer.prototype.setBufferAt=(function(engine,bufferIndex,buffer){buffer=getBufferDescriptor(buffer);this._setBufferAt(engine,bufferIndex,buffer);buffer.delete()});Filament.IndexBuffer.prototype.setBuffer=(function(engine,buffer){buffer=getBufferDescriptor(buffer);this._setBuffer(engine,buffer);buffer.delete()});Filament.RenderableManager$Builder.prototype.build=Filament.LightManager$Builder.prototype.build=(function(engine,entity){const result=this._build(engine,entity);this.delete();return result});Filament.VertexBuffer$Builder.prototype.build=Filament.IndexBuffer$Builder.prototype.build=Filament.Texture$Builder.prototype.build=Filament.IndirectLight$Builder.prototype.build=Filament.Skybox$Builder.prototype.build=(function(engine){const result=this._build(engine);this.delete();return result});Filament.KtxBundle.prototype.getBlob=(function(index){const blob=this._getBlob(index);const result=blob.getBytes();blob.delete();return result});Filament.KtxBundle.prototype.getCubeBlob=(function(miplevel){const blob=this._getCubeBlob(miplevel);const result=blob.getBytes();blob.delete();return result});Filament.Texture.prototype.setImage=(function(engine,level,pbd){this._setImage(engine,level,pbd);pbd.delete()});Filament.Texture.prototype.setImageCube=(function(engine,level,pbd){this._setImageCube(engine,level,pbd);pbd.delete()})});Filament.Buffer=(function(typedarray){console.assert(typedarray.buffer instanceof ArrayBuffer);console.assert(typedarray.byteLength>0);if(Filament.HEAPU32.buffer==typedarray.buffer){typedarray=new Uint8Array(typedarray)}const ta=typedarray;const bd=new Filament.driver$BufferDescriptor(ta);const uint8array=new Uint8Array(ta.buffer,ta.byteOffset,ta.byteLength);bd.getBytes().set(uint8array);return bd});Filament.PixelBuffer=(function(typedarray,format,datatype){console.assert(typedarray.buffer instanceof ArrayBuffer);console.assert(typedarray.byteLength>0);if(Filament.HEAPU32.buffer==typedarray.buffer){typedarray=new Uint8Array(typedarray)}const ta=typedarray;const bd=new Filament.driver$PixelBufferDescriptor(ta,format,datatype);const uint8array=new Uint8Array(ta.buffer,ta.byteOffset,ta.byteLength);bd.getBytes().set(uint8array);return bd});Filament.CompressedPixelBuffer=(function(typedarray,cdatatype,faceSize){console.assert(typedarray.buffer instanceof ArrayBuffer);console.assert(typedarray.byteLength>0);faceSize=faceSize||typedarray.byteLength;if(Filament.HEAPU32.buffer==typedarray.buffer){typedarray=new Uint8Array(typedarray)}const ta=typedarray;const bd=new Filament.driver$PixelBufferDescriptor(ta,cdatatype,faceSize,true);const uint8array=new Uint8Array(ta.buffer,ta.byteOffset,ta.byteLength);bd.getBytes().set(uint8array);return bd});Filament._loadFilamesh=(function(engine,buffer,definstance,matinstances){matinstances=matinstances||{};const registry=new Filament.MeshReader$MaterialRegistry;for(var key in matinstances){registry.set(key,matinstances[key])}if(definstance){registry.set(\"DefaultMaterial\",definstance)}const mesh=Filament.MeshReader.loadMeshFromBuffer(engine,buffer,registry);const keys=registry.keys();for(var i=0;i<keys.size();i++){const key=keys.get(i);const minstance=registry.get(key);matinstances[key]=minstance}return{\"renderable\":mesh.renderable(),\"vertexBuffer\":mesh.vertexBuffer(),\"indexBuffer\":mesh.indexBuffer()}});Filament.IcoSphere=(function(nsubdivs){const X=.5257311121191336;const Z=.8506508083520399;const N=0;this.vertices=new Float32Array([-X,+N,+Z,+X,+N,+Z,-X,+N,-Z,+X,+N,-Z,+N,+Z,+X,+N,+Z,-X,+N,-Z,+X,+N,-Z,-X,+Z,+X,+N,-Z,+X,+N,+Z,-X,+N,-Z,-X,+N]);this.triangles=new Uint16Array([1,4,0,4,9,0,4,5,9,8,5,4,1,8,4,1,10,8,10,3,8,8,3,5,3,2,5,3,7,2,3,10,7,10,6,7,6,11,7,6,0,11,6,1,0,10,1,6,11,0,9,2,11,9,5,2,9,11,2,7]);if(nsubdivs){while(nsubdivs-->0){this.subdivide()}}const nverts=this.vertices.length/3;this.tangents=new Uint16Array(4*nverts);for(var i=0;i<nverts;++i){const src=this.vertices.subarray(i*3,i*3+3);const dst=this.tangents.subarray(i*4,i*4+4);const n=vec3.normalize(vec3.create(),src);const b=vec3.cross(vec3.create(),n,[0,1,0]);vec3.normalize(b,b);const t=vec3.cross(vec3.create(),b,n);const q=quat.fromMat3(quat.create(),[t[0],t[1],t[2],b[0],b[1],b[2],n[0],n[1],n[2]]);vec4.packSnorm16(dst,q)}});Filament.IcoSphere.prototype.subdivide=(function(){const srctris=this.triangles;const srcverts=this.vertices;const nsrctris=srctris.length/3;const ndsttris=nsrctris*4;const nsrcverts=srcverts.length/3;const ndstverts=nsrcverts+nsrctris*3;const dsttris=new Uint16Array(ndsttris*3);const dstverts=new Float32Array(ndstverts*3);dstverts.set(srcverts);var srcind=0,dstind=0,i3=nsrcverts*3,i4=i3+3,i5=i4+3;for(var tri=0;tri<nsrctris;tri++,i3+=9,i4+=9,i5+=9){const i0=srctris[srcind++]*3;const i1=srctris[srcind++]*3;const i2=srctris[srcind++]*3;const v0=srcverts.subarray(i0,i0+3);const v1=srcverts.subarray(i1,i1+3);const v2=srcverts.subarray(i2,i2+3);const v3=dstverts.subarray(i3,i3+3);const v4=dstverts.subarray(i4,i4+3);const v5=dstverts.subarray(i5,i5+3);vec3.normalize(v3,vec3.add(v3,v0,v1));vec3.normalize(v4,vec3.add(v4,v1,v2));vec3.normalize(v5,vec3.add(v5,v2,v0));dsttris[dstind++]=i0/3;dsttris[dstind++]=i3/3;dsttris[dstind++]=i5/3;dsttris[dstind++]=i3/3;dsttris[dstind++]=i1/3;dsttris[dstind++]=i4/3;dsttris[dstind++]=i5/3;dsttris[dstind++]=i3/3;dsttris[dstind++]=i4/3;dsttris[dstind++]=i2/3;dsttris[dstind++]=i5/3;dsttris[dstind++]=i4/3}this.triangles=dsttris;this.vertices=dstverts});function clamp(v,least,most){return Math.max(Math.min(most,v),least)}Filament.packSnorm16=(function(value){return Math.round(clamp(value,-1,1)*32767)});Filament.loadMathExtensions=(function(){vec4.packSnorm16=(function(out,src){out[0]=Filament.packSnorm16(src[0]);out[1]=Filament.packSnorm16(src[1]);out[2]=Filament.packSnorm16(src[2]);out[3]=Filament.packSnorm16(src[3]);return out});const fromRotationZ=mat3.fromRotation;mat3.fromRotation=(function(out,radians,axis){if(axis){return mat3.fromMat4(out,mat4.fromRotation(mat4.create(),radians,axis))}return fromRotationZ(out,radians)})});Filament._createTextureFromKtx=(function(ktxdata,engine,options){options=options||{};const ktx=options[\"ktx\"]||new Filament.KtxBundle(ktxdata);const rgbm=!!options[\"rgbm\"];const srgb=!!options[\"srgb\"];return Filament.KtxUtility$createTexture(engine,ktx,srgb,rgbm)});Filament._createIblFromKtx=(function(ktxdata,engine,options){options=options||{\"rgbm\":true};const iblktx=options[\"ktx\"]=new Filament.KtxBundle(ktxdata);const ibltex=Filament._createTextureFromKtx(ktxdata,engine,options);const shstring=iblktx.getMetadata(\"sh\");const shfloats=shstring.split(/\\s/,9*3).map(parseFloat);return Filament.IndirectLight.Builder().reflections(ibltex).irradianceSh(3,shfloats).build(engine)});Filament._createTextureFromPng=(function(pngdata,engine,options){const Sampler=Filament.Texture$Sampler;const TextureFormat=Filament.Texture$InternalFormat;const PixelDataFormat=Filament.PixelDataFormat;options=options||{};const srgb=!!options[\"srgb\"];const rgbm=!!options[\"rgbm\"];const noalpha=!!options[\"noalpha\"];const nomips=!!options[\"nomips\"];const decodedpng=Filament.decodePng(pngdata,noalpha?3:4);var texformat,pbformat,pbtype;if(noalpha){texformat=srgb?TextureFormat.SRGB8:TextureFormat.RGB8;pbformat=PixelDataFormat.RGB;pbtype=Filament.PixelDataType.UBYTE}else{texformat=srgb?TextureFormat.SRGB8_A8:TextureFormat.RGBA8;pbformat=rgbm?PixelDataFormat.RGBM:PixelDataFormat.RGBA;pbtype=Filament.PixelDataType.UBYTE}const tex=Filament.Texture.Builder().width(decodedpng.width).height(decodedpng.height).levels(nomips?1:255).sampler(Sampler.SAMPLER_2D).format(texformat).rgbm(rgbm).build(engine);const pixelbuffer=Filament.PixelBuffer(decodedpng.data.getBytes(),pbformat,pbtype);tex.setImage(engine,0,pixelbuffer);if(!nomips){tex.generateMipmaps(engine)}return tex});Filament._createTextureFromJpeg=(function(image,engine,options){options=options||{};const srgb=!!options[\"srgb\"];const nomips=!!options[\"nomips\"];var context2d=document.createElement(\"canvas\").getContext(\"2d\");context2d.canvas.width=image.width;context2d.canvas.height=image.height;context2d.width=image.width;context2d.height=image.height;context2d.globalCompositeOperation=\"copy\";context2d.drawImage(image,0,0);var imgdata=context2d.getImageData(0,0,image.width,image.height).data.buffer;var decodedjpeg=new Uint8Array(imgdata);const TF=Filament.Texture$InternalFormat;const texformat=srgb?TF.SRGB8_A8:TF.RGBA8;const pbformat=Filament.PixelDataFormat.RGBA;const pbtype=Filament.PixelDataType.UBYTE;const tex=Filament.Texture.Builder().width(image.width).height(image.height).levels(nomips?1:255).sampler(Filament.Texture$Sampler.SAMPLER_2D).format(texformat).build(engine);const pixelbuffer=Filament.PixelBuffer(decodedjpeg,pbformat,pbtype);tex.setImage(engine,0,pixelbuffer);if(!nomips){tex.generateMipmaps(engine)}return tex});Filament.getSupportedFormats=(function(){if(Filament.supportedFormats){return Filament.supportedFormats}const options={majorVersion:2,minorVersion:0};var ctx=document.createElement(\"canvas\").getContext(\"webgl2\",options);const result={s3tc:false,astc:false,etc:false};var exts=ctx.getSupportedExtensions(),nexts=exts.length,i;for(i=0;i<nexts;i++){var ext=exts[i];if(ext==\"WEBGL_compressed_texture_s3tc\"){result.s3tc=true}else if(ext==\"WEBGL_compressed_texture_astc\"){result.astc=true}else if(ext==\"WEBGL_compressed_texture_etc\"){result.etc=true}}return Filament.supportedFormats=result});Filament.getSupportedFormatSuffix=(function(desiredFormats){desiredFormats=desiredFormats.split(\" \");var exts=Filament.getSupportedFormats();for(var key in exts){if(exts[key]&&desiredFormats.includes(key)){return\"_\"+key}}return\"\"})\n\n\n\n\n\n  return Filament;\n}\n)();\nif (typeof exports === 'object' && typeof module === 'object')\n    module.exports = Filament;\n  else if (typeof define === 'function' && define['amd'])\n    define([], function() { return Filament; });\n  else if (typeof exports === 'object')\n    exports[\"Filament\"] = Filament;\n  ","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import * as Filament from \"filament\";\n\nconst iblSuffix = Filament.getSupportedFormatSuffix(\"etc s3tc\");\nconst environ = \"env/syferfontein_18d_clear_2k\";\n\nexport const ibl = `${environ}_ibl${iblSuffix}.ktx.bmp`;\nexport const skySmall = `${environ}_skybox_tiny.ktx.bmp`;\nexport const skyLarge = `${environ}_skybox.ktx.bmp`;\n\nexport const nonlitMaterial = \"materials/nonlit.filamat\";\nexport const pbrMaterial = \"materials/pbr.filamat\";\nexport const texMaterial = \"materials/tex.filamat\";\n\nexport const diffuse = \"diffuse.jpg\";\nexport const specular = \"specular.jpg\";\nexport const normal = \"normal.jpg\";\nexport const mesh = \"filamesh\";\n\nexport const collision = \"tracks/collision.png\";\nexport const elevation = \"tracks/height.png\";\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = fs;","module.exports = path;","// -------------------------------------------------------------------------------------------------\n// Vehicle represents the position, orientation, and other attributes of a race car.\n//\n// The Simulation is basically the only component that modifies Vehicle attributes, other components\n// need only read-only access.\n//\n// For convenience, this class can compute a 4x4 matrix that transforms the vehicle from its rest\n// pose at the origin to its designated position and orientation within the world. It also proffers\n// a method that allows clients to move the ship along its own axis.\n//\n//   - constructor(position: vec3)\n//   - speed: number;\n//   - position: vec3;\n//   - orientation: quat;\n//   - collisionState: CollisionState;\n//   - getMatrix(): mat4\n//   - translate(v: vec3): void\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport { mat4, quat, vec3 } from \"gl-matrix\";\n\nexport default class Vehicle {\n    // The speed is normalized such that 1.0 is maximum and 0.0 is minimum.\n    public speed: number;\n    public accelerating: boolean;\n    public boosted: boolean;\n\n    public readonly position: vec3;\n    public readonly orientation: quat;\n\n    // The sole purpose of the collision struct is to allow the effects engine (particles etc)\n    // to check if the vehicle has been banged up and draw sparks etc.\n    public readonly collisionState: CollisionState;\n\n    // Temporaries.\n    private readonly matrix: mat4;\n    private readonly temp: vec3;\n\n    constructor(pos: vec3) {\n        this.speed = 0.0;\n        this.accelerating = false;\n        this.boosted = false;\n        this.position = vec3.copy(vec3.create(), pos);\n        this.orientation = quat.create();\n        this.matrix = mat4.create();\n        this.temp = vec3.create();\n        this.collisionState = {\n            front: false,\n            left: false,\n            right: false,\n        };\n    }\n\n    public getMatrix(): mat4 {\n        return mat4.fromRotationTranslation(this.matrix, this.orientation, this.position);\n    }\n\n    public translate(v: vec3) {\n        vec3.transformQuat(this.temp, v, this.orientation);\n        vec3.add(this.position, this.position, this.temp);\n    }\n}\n\ninterface CollisionState {\n    front: boolean;\n    left: boolean;\n    right: boolean;\n}\n","// -------------------------------------------------------------------------------------------------\n// The App owns the Display and Simulation.\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport * as Filament from \"filament\";\nimport * as urls from \"./urls\";\n\nimport { glMatrix, vec3 } from \"gl-matrix\";\n\nimport Audio from \"./audio\";\nimport ChaseCamera from \"./chasecam\";\nimport Display from \"./display\";\nimport Simulation from \"./simulation\";\nimport Vehicle from \"./vehicle\";\n\n// These are only the assets that must be loaded before creating the Filament engine. Note that many\n// other assets are fetched later in the initialization process (e.g. mesh data).\nconst initialAssets = [\n    urls.skySmall,\n    urls.ibl,\n    urls.pbrMaterial,\n    urls.nonlitMaterial,\n    urls.texMaterial,\n];\n\nFilament.init(initialAssets, () => {\n    // HexGL requires 64-bit precision and fast instantiation of vectors.\n    glMatrix.setMatrixArrayType(Array);\n\n    // The global app instance can be accessed for debugging purposes only.\n    window[\"app\"] = new App();\n});\n\nclass App {\n    private readonly display: Display;\n    private readonly chasecam: ChaseCamera;\n    private readonly simulation: Simulation;\n    private readonly audio: Audio;\n    private time: number;\n\n    constructor() {\n        this.tick = this.tick.bind(this);\n        const canvas = document.getElementsByTagName(\"canvas\")[0];\n        const vehicle = new Vehicle(initialVehiclePosition);\n        this.simulation = new Simulation(vehicle);\n        this.audio = new Audio(vehicle);\n        this.display = new Display(canvas, vehicle, this.audio.init.bind(this.audio));\n        this.chasecam = new ChaseCamera(this.display.camera, vehicle);\n        this.time = Date.now();\n        window.requestAnimationFrame(this.tick);\n    }\n\n    private tick() {\n        // Determine the time step.\n        const time = Date.now();\n        const dt = (time - this.time) * 0.1;\n        this.time = time;\n\n        // Update the vehicle orientation and position.\n        this.simulation.tick(dt);\n\n        // Update the camera position.\n        this.chasecam.tick(dt);\n\n        // Render the 3D scene.\n        this.display.render();\n        this.audio.render();\n\n        // Request the next frame.\n        window.requestAnimationFrame(this.tick);\n    }\n}\n\nconst initialVehiclePosition = vec3.fromValues(-2268, 400, -886);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","module.exports = crypto;","// -------------------------------------------------------------------------------------------------\n// The Audio class observes the properties on a Vehicle and plays sounds appropriately.\n//\n//   - constructor(vehicle: Vehicle)\n//   - init()\n//   - render()\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport * as Filament from \"filament\";\nimport Vehicle from \"./vehicle\";\n\nconst audioUrls = [\"audio/boost.ogg\", \"audio/crash.ogg\", \"audio/wind.ogg\"];\n\nexport default class Audio {\n    private readonly sources: {\n        [propName: string]: AudioBufferSourceNode;\n    };\n    private readonly states: {\n        [propName: string]: boolean;\n    };\n    private readonly vehicle: Vehicle;\n\n    private hasInteracted: boolean;\n    private loadTasks: number;\n    private ready: boolean;\n    private context: AudioContext;\n\n    constructor(vehicle: Vehicle) {\n        this.vehicle = vehicle;\n        this.ready = false;\n        this.sources = {};\n        this.states = {};\n\n        // Chrome does not allow creation of an AudioContext until the user performs some sort of\n        // interaction, such as a key press.\n        this.hasInteracted = false;\n        document.addEventListener(\"keydown\", (event) => {\n            if (!this.hasInteracted) {\n                this.hasInteracted = true;\n                this.load();\n            }\n            // Press 'M' to mute the game.\n            if (event.keyCode === 77) {\n                this.context.suspend();\n            }\n        });\n\n        // There are two things that must occur before loading the audio context: the user\n        // should interact in some way, and all the OGG data must be available.\n        this.loadTasks = 2;\n    }\n\n    public init() {\n        Filament.fetch(audioUrls, this.load.bind(this));\n    }\n\n    public render() {\n        if (!this.ready) {\n            return;\n        }\n        if (this.vehicle.collisionState.left) {\n            this.playOnce(\"crash\");\n        }\n        if (this.vehicle.collisionState.right) {\n            this.playOnce(\"crash\");\n        }\n        if (this.vehicle.collisionState.front) {\n            this.playOnce(\"crash\");\n        }\n        if (this.vehicle.boosted) {\n            // This particular has sound has a longish segue at the beginning, which gives the false\n            // impression of latency, so we chop off the first half-second.\n            this.playOnce(\"boost\", 0.5);\n        }\n        if (this.vehicle.accelerating) {\n            this.play(\"background\");\n        } else {\n            this.stop(\"background\");\n        }\n    }\n\n    private playOnce(id, offsetInSeconds = 0) {\n        const source = this.context.createBufferSource();\n        source.buffer = this.sources[id].buffer;\n        source.connect(this.context.destination);\n        source.loop = false;\n        source.start(0, offsetInSeconds);\n    }\n\n    private play(id) {\n        if (!this.states[id]) {\n            this.sources[id].connect(this.context.destination);\n            this.states[id] = true;\n        }\n    }\n\n    private stop(id) {\n        if (this.states[id]) {\n            this.sources[id].disconnect();\n            this.states[id] = false;\n        }\n    }\n\n    private load() {\n        if (--this.loadTasks > 0) {\n            return;\n        }\n\n        const audioData = {\n            boost: Filament.assets[audioUrls[0]].buffer,\n            crash: Filament.assets[audioUrls[1]].buffer,\n            background: Filament.assets[audioUrls[2]].buffer,\n        };\n\n        const context = this.context = new AudioContext();\n\n        let decodeTasks = Object.keys(audioData).length;\n        const onDecode = (name: string, source: AudioBufferSourceNode) => {\n            this.sources[name] = source;\n            this.states[name] = false;\n            if (--decodeTasks === 0) {\n                this.ready = true;\n                this.sources[\"background\"].start();\n            }\n        };\n\n        context.decodeAudioData(audioData[\"boost\"], (buffer) => {\n            const boost = context.createBufferSource();\n            boost.buffer = buffer;\n            boost.connect(context.destination);\n            boost.loop = false;\n            onDecode(\"boost\", boost);\n        });\n\n        context.decodeAudioData(audioData[\"crash\"], (buffer) => {\n            const crash = context.createBufferSource();\n            crash.buffer = buffer;\n            crash.connect(context.destination);\n            crash.loop = false;\n            onDecode(\"crash\", crash);\n        });\n\n        context.decodeAudioData(audioData[\"background\"], (buffer) => {\n            const background = context.createBufferSource();\n            background.buffer = buffer;\n            background.loop = true;\n            onDecode(\"background\", background);\n        });\n    }\n}\n","// -------------------------------------------------------------------------------------------------\n// The ChaseCamera continuously updates a camera to make it follow a target vehicle.\n//\n//   - constructor(camera: Filament.Camera, vehicle: Vehicle)\n//   - tick(dt: number)\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport * as Filament from \"filament\";\n\nimport { vec3 } from \"gl-matrix\";\n\nimport Vehicle from \"./vehicle\";\n\nexport default class ChaseCamera {\n    private readonly camera: Filament.Camera;\n    private readonly vehicle: Vehicle;\n    private speedOffset: number; // adds to zoffset after sudden acceleration\n\n    constructor(camera: Filament.Camera, vehicle: Vehicle) {\n        this.camera = camera;\n        this.vehicle = vehicle;\n        this.speedOffset = 0;\n    }\n\n    public tick(dt: number) {\n        const speed = this.vehicle.speed;\n        const orientation = this.vehicle.orientation;\n        const position = this.vehicle.position;\n\n        this.speedOffset += (speedOffsetMax * speed - this.speedOffset) *\n                Math.min(1.0, 0.3 * dt);\n\n        const up = vec3.fromValues(0, 1, 0);\n        vec3.transformQuat(up, up, orientation);\n\n        const dir = vec3.fromValues(0, 0, 1);\n        vec3.transformQuat(dir, dir, orientation);\n\n        const cameraPos = vec3.copy(vec3.create(), position);\n        vec3.scale(dir, dir, zoffset + this.speedOffset);\n        vec3.subtract(cameraPos, cameraPos, dir);\n        vec3.scale(up, up, yoffset);\n        vec3.add(cameraPos, cameraPos, up);\n\n        const targetPos = vec3.copy(vec3.create(), position);\n        vec3.set(up, 0, 1, 0);\n        vec3.transformQuat(up, up, orientation);\n        vec3.scale(up, up, targetYoffset);\n        vec3.add(targetPos, targetPos, up);\n\n        this.camera.lookAt(cameraPos, targetPos, [0, 1, 0]);\n    }\n}\n\nconst yoffset = 10.0; // how far above the ship the camera flies\nconst zoffset = 23.0; // how far behind the ship the camera flies\nconst speedOffsetMax = 10;\nconst targetYoffset = 6.0; // how far above the ship the camera looks\n","// -------------------------------------------------------------------------------------------------\n// The Display draws to the main canvas and manages all Filament entities.\n//\n//   - constructor(canvas: HTMLCanvasElement, vehicle: Vehicle, onFinishedLoading)\n//   - readonly camera: Filament.Camera;\n//   - render()\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport * as Filament from \"filament\";\nimport * as urls from \"./urls\";\nimport Vehicle from \"./vehicle\";\n\nexport default class Display {\n    public readonly camera: Filament.Camera;\n\n    private readonly canvas: HTMLCanvasElement;\n    private readonly engine: Filament.Engine;\n    private readonly indirectLight: Filament.IndirectLight;\n    private readonly nonlitMaterial: Filament.Material;\n    private readonly pbrMaterial: Filament.Material;\n    private readonly renderer: Filament.Renderer;\n    private readonly sampler: Filament.TextureSampler;\n    private readonly scene: Filament.Scene;\n    private readonly swapChain: Filament.SwapChain;\n    private readonly texMaterial: Filament.Material;\n    private readonly vehicle: Vehicle;\n    private readonly view: Filament.View;\n\n    private ship: Filament.Entity;\n    private skybox: Filament.Skybox;\n\n    constructor(canvas: HTMLCanvasElement, vehicle: Vehicle, onFinishedLoading: () => void) {\n        this.canvas = canvas;\n        this.vehicle = vehicle;\n        this.engine = Filament.Engine.create(canvas);\n        this.scene = this.engine.createScene();\n        this.skybox = this.engine.createSkyFromKtx(urls.skySmall);\n        this.scene.setSkybox(this.skybox);\n        this.indirectLight = this.engine.createIblFromKtx(urls.ibl);\n        this.indirectLight.setIntensity(100000);\n        this.scene.setIndirectLight(this.indirectLight);\n        this.swapChain = this.engine.createSwapChain();\n        this.renderer = this.engine.createRenderer();\n        this.camera = this.engine.createCamera();\n        this.view = this.engine.createView();\n        this.view.setCamera(this.camera);\n        this.view.setScene(this.scene);\n\n        this.sampler = new Filament.TextureSampler(\n            Filament.MinFilter.LINEAR_MIPMAP_LINEAR, Filament.MagFilter.LINEAR,\n            Filament.WrapMode.REPEAT);\n\n        this.pbrMaterial = this.engine.createMaterial(urls.pbrMaterial);\n        this.nonlitMaterial = this.engine.createMaterial(urls.nonlitMaterial);\n        this.texMaterial = this.engine.createMaterial(urls.texMaterial);\n\n        // Load the high-res skybox only after every other asset has been loaded.\n        const addEntity = (entity) => {\n            this.scene.addEntity(entity);\n            if (8 === this.scene.getRenderableCount()) {\n                Filament.fetch([urls.skyLarge], () => {\n                    this.engine.destroySkybox(this.skybox);\n                    this.skybox = this.engine.createSkyFromKtx(urls.skyLarge);\n                    this.scene.setSkybox(this.skybox);\n                    onFinishedLoading();\n                });\n            }\n        };\n\n        // Load the ship first since it determines camera, then all other assets.\n        const filenames = [urls.diffuse, urls.specular, urls.normal, urls.mesh];\n        const shipUrls = filenames.map((path) => `ship/${path}`);\n        Filament.fetch(shipUrls, () => {\n\n            // Add the vehicle to scene.\n            const shipmi = this.pbrMaterial.createInstance();\n            this.ship = this.createRenderable(\"ship\", shipmi, 1.0);\n            addEntity(this.ship);\n\n            // Add buildings to scene.\n            for (const bgasset of [\"scrapers1\", \"scrapers2\"]) {\n                const bgurls = filenames.map((path) => `${bgasset}/${path}`);\n                Filament.fetch(bgurls, () => {\n                    const bgmi = this.pbrMaterial.createInstance();\n                    addEntity(this.createRenderable(bgasset, bgmi, 0.1));\n                });\n            }\n\n            // Add race track to scene.\n            for (const bgasset of [\"tracks\"]) {\n                const bgurls = filenames.map((path) => `${bgasset}/${path}`);\n                Filament.fetch(bgurls, () => {\n                    const bgmi = this.pbrMaterial.createInstance();\n                    addEntity(this.createRenderable(bgasset, bgmi, 0.0));\n                });\n            }\n\n            // Add blue boosters to scene.\n            const boosterUrl = \"bonusspeed/filamesh\";\n            Filament.fetch([boosterUrl], () => {\n                const mi = this.nonlitMaterial.createInstance();\n                mi.setFloat4Parameter(\"color\", [0.0, 0.2, 0.6, 1.0]);\n                const mesh = this.engine.loadFilamesh(boosterUrl, mi, {});\n                addEntity(mesh.renderable);\n            });\n\n            // Add start banner and solar panels.\n            const bannerTexUrl = \"startbanner/albedo.jpg\";\n            const bannerGeoUrl = \"startbanner/filamesh\";\n            Filament.fetch([bannerGeoUrl, bannerTexUrl], () => {\n                const mi = this.texMaterial.createInstance();\n                const albedo = this.engine.createTextureFromJpeg(bannerTexUrl);\n                mi.setTextureParameter(\"albedo\", albedo, this.sampler);\n                const mesh = this.engine.loadFilamesh(bannerGeoUrl, mi, {});\n                addEntity(mesh.renderable);\n            });\n\n            const panelsTexUrl = \"startpanels/albedo.jpg\";\n            const panelsGeoUrl = \"startpanels/filamesh\";\n            Filament.fetch([panelsGeoUrl, panelsTexUrl], () => {\n                const mi = this.texMaterial.createInstance();\n                const albedo = this.engine.createTextureFromJpeg(panelsTexUrl);\n                mi.setTextureParameter(\"albedo\", albedo, this.sampler);\n                const mesh = this.engine.loadFilamesh(panelsGeoUrl, mi, {});\n                addEntity(mesh.renderable);\n            });\n        });\n\n        const sunlight = Filament.EntityManager.get().create();\n        Filament.LightManager.Builder(Filament.LightManager$Type.SUN)\n            .color([0.98, 0.92, 0.89])\n            .castShadows(true)\n            .intensity(110000.0)\n            .direction([0.5, -1, 0])\n            .build(this.engine, sunlight);\n        addEntity(sunlight);\n\n        this.resize = this.resize.bind(this);\n        window.addEventListener(\"resize\", this.resize);\n        this.resize();\n    }\n\n    public render() {\n        if (this.ship) {\n            const tcm = this.engine.getTransformManager();\n            const inst = tcm.getInstance(this.ship);\n            tcm.setTransform(inst, this.vehicle.getMatrix());\n            inst.delete();\n        }\n        this.renderer.render(this.swapChain, this.view);\n    }\n\n    private resize() {\n        const dpr = window.devicePixelRatio;\n        const width = this.canvas.width = window.innerWidth * dpr;\n        const height = this.canvas.height = window.innerHeight * dpr;\n        this.view.setViewport([0, 0, width, height]);\n\n        const aspect = width / height;\n        const Fov = Filament.Camera$Fov;\n        const fov = aspect < 1 ? Fov.HORIZONTAL : Fov.VERTICAL;\n        this.camera.setProjectionFov(45, aspect, 1.0, 20000.0, fov);\n    }\n\n    private createRenderable(name, matinstance, clearCoat) {\n        const diffuse = this.engine.createTextureFromJpeg(`${name}/${urls.diffuse}`);\n        const specular = this.engine.createTextureFromJpeg(`${name}/${urls.specular}`);\n        const normal = this.engine.createTextureFromJpeg(`${name}/${urls.normal}`);\n        matinstance.setTextureParameter(\"diffuse\", diffuse, this.sampler);\n        matinstance.setTextureParameter(\"specular\", specular, this.sampler);\n        matinstance.setTextureParameter(\"normal\", normal, this.sampler);\n\n        matinstance.setFloatParameter(\"metallic\", 1.0);\n        matinstance.setFloatParameter(\"reflectance\", 1.0);\n        matinstance.setFloatParameter(\"clearCoat\", clearCoat);\n        matinstance.setFloatParameter(\"clearCoatRoughness\", 0.0);\n\n        const entity = this.engine.loadFilamesh(`${name}/${urls.mesh}`, matinstance, {}).renderable;\n\n        const rm = this.engine.getRenderableManager();\n        const inst = rm.getInstance(entity);\n        rm.setCastShadows(inst, true);\n        rm.setReceiveShadows(inst, true);\n        inst.delete();\n\n        return entity;\n    }\n}\n","// -------------------------------------------------------------------------------------------------\n// The Simulation listens to input events and periodically updates the position, orientation, and\n// other attributes of a given Vehicle. The CPU reads from two images (collision and elevation)\n// to glean information about the race track.\n//\n//   - constructor(vehicle: Vehicle)\n//   - tick(dt: number)\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nimport * as urls from \"./urls\";\n\nimport Sampler from \"./sampler\";\nimport Vehicle from \"./vehicle\";\n\nimport { mat4, quat, vec3 } from \"gl-matrix\";\n\nexport default class Simulation {\n    private readonly collision: Sampler;\n    private readonly elevation: Sampler;\n    private readonly gfxvehicle: Vehicle;\n    private readonly keyState: KeyState;\n    private readonly movement: vec3;\n    private readonly repulsionForce: vec3;\n    private readonly repulsionVLeft: vec3;\n    private readonly repulsionVRight: vec3;\n    private readonly simvehicle: Vehicle;\n\n    private boost: number;\n    private drift: number;\n    private gradient: number;\n    private gradientTarget: number;\n    private roll: number;\n    private speed: number;\n    private tilt: number;\n    private tiltTarget: number;\n    private yawAngle: number;\n\n    constructor(vehicle: Vehicle) {\n        // The orientation of the simulation vehicle only includes yaw.\n        this.simvehicle = new Vehicle(vehicle.position);\n\n        // The graphics vehicle includes roll and pitch as well, but for visual appeal only.\n        this.gfxvehicle = vehicle;\n\n        this.collision = new Sampler(urls.collision);\n        this.elevation = new Sampler(urls.elevation);\n\n        this.keyState = {\n            backward: false,\n            forward: false,\n            left: false,\n            ltrigger: false,\n            right: false,\n            rtrigger: false,\n            use: false,\n        };\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n        document.addEventListener(\"keyup\", this.onKeyUp.bind(this));\n\n        this.movement = vec3.fromValues(0, 0, 0);\n        this.roll = 0.0;\n        this.drift = 0.0;\n        this.speed = 0.0;\n        this.boost = 0.0;\n        this.yawAngle = 0.0;\n        this.gradient = 0.0;\n        this.gradientTarget = 0.0;\n        this.tilt = 0.0;\n        this.tiltTarget = 0.0;\n        this.repulsionVLeft = vec3.fromValues(1, 0, 0);\n        this.repulsionVRight = vec3.fromValues(-1, 0, 0);\n        this.repulsionForce = vec3.create();\n    }\n\n    public tick(dt: number) {\n        if (!this.collision.ready() || !this.elevation.ready()) {\n            return;\n        }\n        vec3.copy(this.simvehicle.position, this.gfxvehicle.position);\n        vec3.set(this.movement, 0, 0, 0);\n        this.drift = -this.drift * driftLerp;\n        this.yawAngle = -this.yawAngle * yawAngleLerp * .5;\n\n        let rollAmount = 0;\n        let yawAngleAmount = 0;\n\n        if (this.keyState.left) {\n            yawAngleAmount += yawAngleSpeed * dt;\n            rollAmount -= rollAngle;\n        }\n        if (this.keyState.right) {\n            yawAngleAmount -= yawAngleSpeed * dt;\n            rollAmount += rollAngle;\n        }\n\n        if (this.keyState.forward) {\n            this.gfxvehicle.accelerating = true;\n            this.speed += thrust * dt;\n        } else {\n            this.gfxvehicle.accelerating = false;\n            this.speed -= airResist * dt;\n        }\n\n        if (this.keyState.ltrigger) {\n            if (this.keyState.left) {\n                yawAngleAmount += airAngularSpeed * dt;\n            } else {\n                yawAngleAmount += airAngularSpeed * .5 * dt;\n            }\n            this.speed -= airBrake * dt;\n            this.drift += (airDrift - this.drift) * driftLerp;\n            this.movement[0] += this.speed * this.drift * dt;\n            if (this.drift > 0) {\n                this.movement[2] -= this.speed * this.drift * dt;\n            }\n            rollAmount -= rollAngle * .7;\n        }\n\n        if (this.keyState.rtrigger) {\n            if (this.keyState.right) {\n                yawAngleAmount -= airAngularSpeed * dt;\n            } else {\n                yawAngleAmount -= airAngularSpeed * .5 * dt;\n            }\n            this.speed -= airBrake * dt;\n            this.drift += (-airDrift - this.drift) * driftLerp;\n            this.movement[0] += this.speed * this.drift * dt;\n            if (this.drift < 0) {\n                this.movement[2] += this.speed * this.drift * dt;\n            }\n            rollAmount += rollAngle * .7;\n        }\n\n        this.yawAngle += (yawAngleAmount - this.yawAngle) * yawAngleLerp;\n\n        this.speed = Math.max(0, Math.min(this.speed, maxSpeed));\n        this.movement[2] += this.speed * dt;\n\n        if (vec3AlmostEquals(this.repulsionForce, zero3, 0.0001)) {\n            vec3.copy(this.repulsionForce, zero3);\n        } else {\n            if (this.repulsionForce[2] !== 0) {\n                this.movement[2] = 0;\n            }\n            vec3.add(this.movement, this.movement, this.repulsionForce);\n            const t = dt > 1.5 ? repulsionLerp * 2 : repulsionLerp;\n            vec3.lerp(this.repulsionForce, this.repulsionForce, zero3, t);\n        }\n\n        this.boosterCheck(dt);\n\n        this.simvehicle.translate(vec3.fromValues(this.movement[0], 0, this.movement[2]));\n        this.heightCheck();\n\n        this.simvehicle.translate(vec3.fromValues(0, this.movement[1], 0));\n        this.collisionCheck();\n\n        // The original HexGL app directly manipulated the Y component of this quat value, but I\n        // feel it is more sensical to build the quat from from Euler anglers.\n        const degrees = this.yawAngle * 150.0;\n        const quaternion = quat.fromEuler(quat.create(), 0, degrees, 0);\n        quat.multiply(this.simvehicle.orientation, this.simvehicle.orientation, quaternion);\n\n        // The remaining rotations affect the graphics vehicle but not the simulation vehicle.\n        const xform = mat4.identity(mat4.create());\n\n        // Gradient\n        const gradientDelta = (this.gradientTarget - this.gradient) * gradientLerp;\n        if (Math.abs(gradientDelta) > epsilon) {\n            this.gradient += gradientDelta;\n        }\n        if (Math.abs(this.gradient) > epsilon) {\n            mat4.rotate(xform, xform, this.gradient, gradientAxis);\n        }\n\n        // Tilting\n        const tiltDelta = (this.tiltTarget - this.tilt) * tiltLerp;\n        if (Math.abs(tiltDelta) > epsilon) {\n            this.tilt += tiltDelta;\n        }\n        if (Math.abs(this.tilt) > epsilon) {\n            mat4.rotate(xform, xform, this.tilt, tiltAxis);\n        }\n\n        // Rolling\n        const rollDelta = (rollAmount - this.roll) * rollLerp;\n        if (Math.abs(rollDelta) > epsilon) {\n            this.roll += rollDelta;\n        }\n        if (Math.abs(this.roll) > epsilon) {\n            mat4.rotate(xform, xform, this.roll, rollDirection);\n        }\n\n        mat4.multiply(xform, this.simvehicle.getMatrix(), xform);\n        mat4.getTranslation(this.gfxvehicle.position, xform);\n        mat4.getRotation(this.gfxvehicle.orientation, xform);\n    }\n\n    private onKeyDown(event) {\n        const key = this.keyState;\n        switch (event.keyCode) {\n            case 38: /*up*/ key.forward = true; break;\n            case 40: /*down*/ key.backward = true; break;\n            case 37: /*left*/ key.left = true; break;\n            case 39: /*right*/ key.right = true; break;\n            case 81: /*Q*/ key.ltrigger = true; break;\n            case 65: /*A*/ key.ltrigger = true; break;\n            case 68: /*D*/ key.rtrigger = true; break;\n            case 69: /*E*/ key.rtrigger = true; break;\n        }\n    }\n\n    private onKeyUp(event) {\n        const key = this.keyState;\n        switch (event.keyCode) {\n            case 38: /*up*/ key.forward = false; break;\n            case 40: /*down*/ key.backward = false; break;\n            case 37: /*left*/ key.left = false; break;\n            case 39: /*right*/ key.right = false; break;\n            case 81: /*Q*/ key.ltrigger = false; break;\n            case 65: /*A*/ key.ltrigger = false; break;\n            case 68: /*D*/ key.rtrigger = false; break;\n            case 69: /*E*/ key.rtrigger = false; break;\n        }\n    }\n\n    private collisionCheck(): void {\n        this.gfxvehicle.collisionState.left = false;\n        this.gfxvehicle.collisionState.right = false;\n        this.gfxvehicle.collisionState.front = false;\n\n        const simpos = this.simvehicle.position;\n        const simquat = this.simvehicle.orientation;\n\n        const x = this.collision.width / 2 + simpos[0] * collisionPixelRatio;\n        const z = this.collision.height / 2 + simpos[2] * collisionPixelRatio;\n        const pos = vec3.fromValues(x, 0, z);\n\n        const collision = this.collision.getPixelBilinear(x, z);\n        if (collision.r < 255) {\n\n            // repulsion\n            vec3.set(this.repulsionVLeft, 1, 0, 0);\n            vec3.set(this.repulsionVRight, -1, 0, 0);\n            vec3.transformQuat(this.repulsionVLeft, this.repulsionVLeft, simquat);\n            vec3.transformQuat(this.repulsionVRight, this.repulsionVRight, simquat);\n\n            const lPos = vec3.add(this.repulsionVLeft, this.repulsionVLeft, pos);\n            const rPos = vec3.add(this.repulsionVRight, this.repulsionVRight, pos);\n            const lCol = this.collision.getPixel(Math.round(lPos[0]), Math.round(lPos[2])).r;\n            const rCol = this.collision.getPixel(Math.round(rPos[0]), Math.round(rPos[2])).r;\n\n            const repulsionAmount = Math.max(0.8, Math.min(repulsionCap, this.speed * repulsionRatio));\n            if (rCol > lCol) {\n                this.repulsionForce[0] -= repulsionAmount;\n                this.gfxvehicle.collisionState.left = true;\n            } else if (rCol < lCol) {\n                this.repulsionForce[0] += repulsionAmount;\n                this.gfxvehicle.collisionState.right = true;\n            } else {\n                this.repulsionForce[2] -= repulsionAmount * 4;\n                this.gfxvehicle.collisionState.front = true;\n                this.speed = 0;\n            }\n\n            // Check for a \"messy game over\". This should rarely happen if the collision system is\n            // working properly.\n            if (rCol < 128 && lCol < 128) {\n                const fCol = this.collision.getPixel(Math.round(pos[0] + 2), Math.round(pos[2] + 2)).r;\n                if (fCol < 128) {\n                    console.log(\"GAMEOVER\");\n                }\n            }\n\n            this.speed *= collisionSpeedDecrease;\n            this.speed *= (1 - collisionSpeedDecreaseCoef * (1 - collision.r / 255));\n            this.boost = 0;\n        }\n    }\n\n    private boosterCheck(dt: number): void {\n        this.gfxvehicle.boosted = false;\n        const simpos = this.simvehicle.position;\n        this.boost -= boosterDecay * dt;\n        if (this.boost < 0) {\n            this.boost = 0.0;\n        }\n\n        const x = Math.round(this.collision.width / 2 + simpos[0] * collisionPixelRatio);\n        const z = Math.round(this.collision.height / 2 + simpos[2] * collisionPixelRatio);\n        const color = this.collision.getPixel(x, z);\n\n        if (color.r === 255 && color.g < 127 && color.b < 127) {\n            if (this.boost === 0.0) {\n                this.gfxvehicle.boosted = true;\n            }\n            this.boost = boosterSpeed;\n        }\n\n        this.movement[2] += this.boost * dt;\n    }\n\n    private heightCheck(): void {\n        const simpos = this.simvehicle.position;\n        const simquat = this.simvehicle.orientation;\n\n        let x = this.elevation.width / 2 + simpos[0] * heightPixelRatio;\n        let z = this.elevation.height / 2 + simpos[2] * heightPixelRatio;\n        const height = this.elevation.getPixelFBilinear(x, z) / heightScale + heightBias;\n        if (height < 16777) {\n            const delta = height - simpos[1];\n            if (delta > 0) {\n                this.movement[1] += delta;\n            } else {\n                this.movement[1] += delta * heightLerp;\n            }\n        }\n\n        // gradient\n        const gradientVector = vec3.fromValues(0, 0, 5);\n        vec3.transformQuat(gradientVector, gradientVector, simquat);\n        vec3.add(gradientVector, gradientVector, simpos);\n        x = this.elevation.width / 2 + gradientVector[0] * heightPixelRatio;\n        z = this.elevation.height / 2 + gradientVector[2] * heightPixelRatio;\n        let nheight = this.elevation.getPixelFBilinear(x, z) / heightScale + heightBias;\n        if (nheight < 16777) {\n            this.gradientTarget = -Math.atan2(nheight - height, 5.0);\n        }\n\n        // tilt\n        const tiltVector = vec3.fromValues(5, 0, 0);\n        vec3.transformQuat(tiltVector, tiltVector, simquat);\n        vec3.add(tiltVector, tiltVector, simpos);\n        x = this.elevation.width / 2 + tiltVector[0] * heightPixelRatio;\n        z = this.elevation.height / 2 + tiltVector[2] * heightPixelRatio;\n        nheight = this.elevation.getPixelFBilinear(x, z) / heightScale + heightBias;\n        if (nheight >= 16777) {\n            vec3.subtract(tiltVector, tiltVector, simpos);\n            vec3.scale(tiltVector, tiltVector, -1);\n            vec3.add(tiltVector, tiltVector, simpos);\n            x = this.elevation.width / 2 + tiltVector[0] * heightPixelRatio;\n            z = this.elevation.height / 2 + tiltVector[2] * heightPixelRatio;\n            nheight = this.elevation.getPixelFBilinear(x, z) / heightScale + heightBias;\n        }\n        if (nheight < 16777) {\n            this.tiltTarget = Math.atan2(nheight - height, 5.0);\n        }\n    }\n}\n\ninterface KeyState {\n    forward: boolean;\n    backward: boolean;\n    left: boolean;\n    right: boolean;\n    ltrigger: boolean;\n    rtrigger: boolean;\n    use: boolean;\n}\n\nconst epsilon = 0.00000001;\nconst zero3 = vec3.create();\nconst airResist = 0.02;\nconst airDrift = 0.1;\nconst thrust = 0.02;\nconst airBrake = 0.02;\nconst maxSpeed = 7.0;\nconst boosterSpeed = maxSpeed * 0.2;\nconst boosterDecay = 0.01;\nconst yawAngleSpeed = 0.005;\nconst airAngularSpeed = 0.0065;\nconst repulsionRatio = 0.5;\nconst repulsionCap = 2.5;\nconst repulsionLerp = 0.1;\nconst collisionSpeedDecrease = 0.8;\nconst collisionSpeedDecreaseCoef = 0.8;\nconst driftLerp = 0.35;\nconst yawAngleLerp = 0.35;\nconst gradientAxis = vec3.fromValues(1, 0, 0);\nconst tiltAxis = vec3.fromValues(0, 0, 1);\nconst rollAngle = 0.6;\nconst rollLerp = 0.08;\nconst rollDirection = vec3.fromValues(0, 0, 1);\nconst collisionPixelRatio = 2048.0 / 6000.0;\nconst gradientLerp = 0.05;\nconst tiltLerp = 0.05;\nconst heightPixelRatio = 2048.0 / 6000.0;\nconst heightBias = 4.0;\nconst heightLerp = 0.4;\nconst heightScale = 10.0;\n\nfunction vec3AlmostEquals(a: vec3, b: vec3, vepsilon: number): boolean {\n    const a0 = a[0], a1 = a[1], a2 = a[2];\n    const b0 = b[0], b1 = b[1], b2 = b[2];\n    return (Math.abs(a0 - b0) <= vepsilon * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= vepsilon * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= vepsilon * Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n","// -------------------------------------------------------------------------------------------------\n// Sampler allows the CPU to read from an image using bilinear interpolation.\n//\n//   - constructor(url: string)\n//   - getPixel(x: number, y: number): Color\n//   - getPixelBilinear(fx: number, fy: number): Color\n//   - getPixelF(x: number, y: number): Color\n//   - getPixelBilinearF(fx: number, fy: number): Color\n//\n// HexGL by Thibaut 'BKcore' Despoulain <http://bkcore.com>\n// Rewritten by Philip Rideout <https://prideout.net>\n// -------------------------------------------------------------------------------------------------\n\nexport default class Sampler {\n    public width: number;\n    public height: number;\n\n    private canvas: HTMLCanvasElement;\n    private image: HTMLImageElement;\n    private pixels: ImageData;\n\n    constructor(url: string) {\n        this.image = new Image();\n        this.pixels = null;\n        this.canvas = null;\n        this.image.onload = () => {\n            const canvas = this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = this.image.width;\n            this.canvas.height = this.image.height;\n            const context = this.canvas.getContext(\"2d\");\n            context.drawImage(this.image, 0, 0);\n            this.pixels = context.getImageData(0, 0, canvas.width, canvas.height);\n            this.width = this.pixels.width;\n            this.height = this.pixels.height;\n            this.canvas = null;\n            this.image = null;\n        };\n        this.image.src = url;\n    }\n\n    public ready(): boolean {\n        return this.image === null;\n    }\n\n    public getPixel(x: number, y: number): Color {\n        if (!this.pixels || x < 0 || y < 0 || x >= this.pixels.width || y >= this.pixels.height) {\n            return {r: 0, g: 0, b: 0, a: 0};\n        }\n        const i = (y * this.pixels.width + x) * 4;\n        return {\n            r: this.pixels.data[i],\n            g: this.pixels.data[i + 1],\n            b: this.pixels.data[i + 2],\n            a: this.pixels.data[i + 3],\n        };\n    }\n\n    public getPixelBilinear(fx: number, fy: number): Color {\n        const x = Math.floor(fx);\n        const y = Math.floor(fy);\n        const rx = fx - x - .5;\n        const ry = fy - y - .5;\n        const ax = Math.abs(rx);\n        const ay = Math.abs(ry);\n        const dx = rx < 0 ? -1 : 1;\n        const dy = ry < 0 ? -1 : 1;\n        const c = this.getPixel(x, y);\n        const cx = this.getPixel(x + dx, y);\n        const cy = this.getPixel(x, y + dy);\n        const cxy = this.getPixel(x + dx, y + dy);\n        const cf1 = [\n            (1 - ax) * c.r + ax * cx.r,\n            (1 - ax) * c.g + ax * cx.g,\n            (1 - ax) * c.b + ax * cx.b,\n            (1 - ax) * c.a + ax * cx.a,\n        ];\n        const cf2 = [\n            (1 - ax) * cy.r + ax * cxy.r,\n            (1 - ax) * cy.g + ax * cxy.g,\n            (1 - ax) * cy.b + ax * cxy.b,\n            (1 - ax) * cy.a + ax * cxy.a,\n        ];\n        return {\n            r: (1 - ay) * cf1[0] + ay * cf2[0],\n            g: (1 - ay) * cf1[1] + ay * cf2[1],\n            b: (1 - ay) * cf1[2] + ay * cf2[2],\n            a: (1 - ay) * cf1[3] + ay * cf2[3],\n        };\n    }\n\n    public getPixelF(x: number, y: number): number {\n        const c = this.getPixel(x, y);\n        return c.r + c.g * 255 + c.b * 255 * 255;\n    }\n\n    public getPixelFBilinear(x: number, y: number): number {\n        const c = this.getPixelBilinear(x, y);\n        return c.r + c.g * 255 + c.b * 255 * 255;\n    }\n}\n\ninterface Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n}\n"],"sourceRoot":""}